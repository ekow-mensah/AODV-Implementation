                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:27:57 2018
                              5 ;--------------------------------------------------------
                              6 	.module cc2430_rf_intr
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _cc2430_rf_driver
                             13 	.globl _IRCON2_P2IF
                             14 	.globl _IRCON2_UTX0IF
                             15 	.globl _IRCON2_UTX1IF
                             16 	.globl _IRCON2_P1IF
                             17 	.globl _IRCON2_WDTIF
                             18 	.globl _CY
                             19 	.globl _AC
                             20 	.globl _F0
                             21 	.globl _RS1
                             22 	.globl _RS0
                             23 	.globl _OV
                             24 	.globl _F1
                             25 	.globl _P
                             26 	.globl _IRCON_DMAIF
                             27 	.globl _IRCON_T1IF
                             28 	.globl _IRCON_T2IF
                             29 	.globl _IRCON_T3IF
                             30 	.globl _IRCON_T4IF
                             31 	.globl _IRCON_P0IF
                             32 	.globl _IRCON_STIF
                             33 	.globl _IEN1_DMAIE
                             34 	.globl _IEN1_T1IE
                             35 	.globl _IEN1_T2IE
                             36 	.globl _IEN1_T3IE
                             37 	.globl _IEN1_T4IE
                             38 	.globl _IEN1_P0IE
                             39 	.globl _IEN0_RFERRIE
                             40 	.globl _IEN0_ADCIE
                             41 	.globl _IEN0_URX0IE
                             42 	.globl _IEN0_URX1IE
                             43 	.globl _IEN0_ENCIE
                             44 	.globl _IEN0_STIE
                             45 	.globl _IEN0_EA
                             46 	.globl _EA
                             47 	.globl _P2_4
                             48 	.globl _P2_3
                             49 	.globl _P2_2
                             50 	.globl _P2_1
                             51 	.globl _P2_0
                             52 	.globl _S0CON_ENCIF_0
                             53 	.globl _S0CON_ENCIF_1
                             54 	.globl _P1_7
                             55 	.globl _P1_6
                             56 	.globl _P1_5
                             57 	.globl _P1_4
                             58 	.globl _P1_3
                             59 	.globl _P1_2
                             60 	.globl _P1_1
                             61 	.globl _P1_0
                             62 	.globl _TCON_IT0
                             63 	.globl _TCON_RFERRIF
                             64 	.globl _TCON_IT1
                             65 	.globl _TCON_URX0IF
                             66 	.globl _TCON_ADCIF
                             67 	.globl _TCON_URX1IF
                             68 	.globl _P0_0
                             69 	.globl _P0_1
                             70 	.globl _P0_2
                             71 	.globl _P0_3
                             72 	.globl _P0_4
                             73 	.globl _P0_5
                             74 	.globl _P0_6
                             75 	.globl _P0_7
                             76 	.globl _P2DIR
                             77 	.globl _P1DIR
                             78 	.globl _P0DIR
                             79 	.globl _U1GCR
                             80 	.globl _U1UCR
                             81 	.globl _U1BAUD
                             82 	.globl _U1BUF
                             83 	.globl _U1CSR
                             84 	.globl _P2INP
                             85 	.globl _P1INP
                             86 	.globl _P2SEL
                             87 	.globl _P1SEL
                             88 	.globl _P0SEL
                             89 	.globl _ADCCFG
                             90 	.globl _PERCFG
                             91 	.globl _B
                             92 	.globl _T4CC1
                             93 	.globl _T4CCTL1
                             94 	.globl _T4CC0
                             95 	.globl _T4CCTL0
                             96 	.globl _T4CTL
                             97 	.globl _T4CNT
                             98 	.globl _RFIF
                             99 	.globl _IRCON2
                            100 	.globl _T1CCTL2
                            101 	.globl _T1CCTL1
                            102 	.globl _T1CCTL0
                            103 	.globl _T1CTL
                            104 	.globl _T1CNTH
                            105 	.globl _T1CNTL
                            106 	.globl _RFST
                            107 	.globl _ACC
                            108 	.globl _T1CC2H
                            109 	.globl _T1CC2L
                            110 	.globl _T1CC1H
                            111 	.globl _T1CC1L
                            112 	.globl _T1CC0H
                            113 	.globl _T1CC0L
                            114 	.globl _RFD
                            115 	.globl _TIMIF
                            116 	.globl _DMAREQ
                            117 	.globl _DMAARM
                            118 	.globl _DMA0CFGH
                            119 	.globl _DMA0CFGL
                            120 	.globl _DMA1CFGH
                            121 	.globl _DMA1CFGL
                            122 	.globl _DMAIRQ
                            123 	.globl _PSW
                            124 	.globl _T3CC1
                            125 	.globl _T3CCTL1
                            126 	.globl _T3CC0
                            127 	.globl _T3CCTL0
                            128 	.globl _T3CTL
                            129 	.globl _T3CNT
                            130 	.globl _WDCTL
                            131 	.globl _T2CON
                            132 	.globl _MEMCTR
                            133 	.globl _CLKCON
                            134 	.globl _U0GCR
                            135 	.globl _U0UCR
                            136 	.globl _T2CNF
                            137 	.globl _U0BAUD
                            138 	.globl _U0BUF
                            139 	.globl _IRCON
                            140 	.globl _SLEEP
                            141 	.globl _RNDH
                            142 	.globl _RNDL
                            143 	.globl _ADCH
                            144 	.globl _ADCL
                            145 	.globl _IP1
                            146 	.globl _IEN1
                            147 	.globl _RCCTL
                            148 	.globl _ADCCON3
                            149 	.globl _ADCCON2
                            150 	.globl _ADCCON1
                            151 	.globl _ENCCS
                            152 	.globl _ENCDO
                            153 	.globl _ENCDI
                            154 	.globl _FWDATA
                            155 	.globl _FCTL
                            156 	.globl _FADDRH
                            157 	.globl _FADDRL
                            158 	.globl _FWT
                            159 	.globl _IP0
                            160 	.globl _IEN0
                            161 	.globl _IE
                            162 	.globl _T2THD
                            163 	.globl _T2TLD
                            164 	.globl _T2CAPHPH
                            165 	.globl _T2CAPLPL
                            166 	.globl _T2OF2
                            167 	.globl _T2OF1
                            168 	.globl _T2OF0
                            169 	.globl _P2
                            170 	.globl _PSBANK
                            171 	.globl _FMAP
                            172 	.globl _T2PEROF2
                            173 	.globl _T2PEROF1
                            174 	.globl _T2PEROF0
                            175 	.globl _S1CON
                            176 	.globl _IEN2
                            177 	.globl _HSRC
                            178 	.globl _S0CON
                            179 	.globl _ST2
                            180 	.globl _ST1
                            181 	.globl _ST0
                            182 	.globl _T2CMP
                            183 	.globl __XPAGE
                            184 	.globl _DPS
                            185 	.globl _RFIM
                            186 	.globl _P1
                            187 	.globl _P0INP
                            188 	.globl _P1IEN
                            189 	.globl _PICTL
                            190 	.globl _P2IFG
                            191 	.globl _P1IFG
                            192 	.globl _P0IFG
                            193 	.globl _TCON
                            194 	.globl _PCON
                            195 	.globl _U0CSR
                            196 	.globl _DPH1
                            197 	.globl _DPL1
                            198 	.globl _DPH0
                            199 	.globl _DPL0
                            200 	.globl _SP
                            201 	.globl _P0
                            202 	.globl _ADC_SHADOW
                            203 	.globl _U1BUF_SHADOW
                            204 	.globl _RFD_SHADOW
                            205 	.globl _U0BUF_SHADOW
                            206 	.globl _RFSTATUS
                            207 	.globl _CHIPID
                            208 	.globl _CHVER
                            209 	.globl _FSMTC1
                            210 	.globl _RXFIFOCNT
                            211 	.globl _IOCFG3
                            212 	.globl _IOCFG2
                            213 	.globl _IOCFG1
                            214 	.globl _IOCFG0
                            215 	.globl _SHORTADDRL
                            216 	.globl _SHORTADDRH
                            217 	.globl _PANIDL
                            218 	.globl _PANIDH
                            219 	.globl _IEEE_ADDR7
                            220 	.globl _IEEE_ADDR6
                            221 	.globl _IEEE_ADDR5
                            222 	.globl _IEEE_ADDR4
                            223 	.globl _IEEE_ADDR3
                            224 	.globl _IEEE_ADDR2
                            225 	.globl _IEEE_ADDR1
                            226 	.globl _IEEE_ADDR0
                            227 	.globl _DACTSTL
                            228 	.globl _DACTSTH
                            229 	.globl _ADCTSTL
                            230 	.globl _ADCTSTH
                            231 	.globl _FSMSTATE
                            232 	.globl _AGCCTRLL
                            233 	.globl _AGCCTRLH
                            234 	.globl _MANORL
                            235 	.globl _MANORH
                            236 	.globl _MANANDL
                            237 	.globl _MANANDH
                            238 	.globl _FSMTCL
                            239 	.globl _FSMTCH
                            240 	.globl _RFPWR
                            241 	.globl _CSPT
                            242 	.globl _CSPCTRL
                            243 	.globl _CSPZ
                            244 	.globl _CSPY
                            245 	.globl _CSPX
                            246 	.globl _FSCTRLL
                            247 	.globl _FSCTRLH
                            248 	.globl _RXCTRL1L
                            249 	.globl _RXCTRL1H
                            250 	.globl _RXCTRL0L
                            251 	.globl _RXCTRL0H
                            252 	.globl _TXCTRLL
                            253 	.globl _TXCTRLH
                            254 	.globl _SYNCWORDL
                            255 	.globl _SYNCWORDH
                            256 	.globl _RSSIL
                            257 	.globl _RSSIH
                            258 	.globl _MDMCTRL1L
                            259 	.globl _MDMCTRL1H
                            260 	.globl _MDMCTRL0L
                            261 	.globl _MDMCTRL0H
                            262 	.globl _cc2430_rf_command
                            263 ;--------------------------------------------------------
                            264 ; special function registers
                            265 ;--------------------------------------------------------
                            266 	.area RSEG    (ABS,DATA)
   0000                     267 	.org 0x0000
                    0080    268 _P0	=	0x0080
                    0081    269 _SP	=	0x0081
                    0082    270 _DPL0	=	0x0082
                    0083    271 _DPH0	=	0x0083
                    0084    272 _DPL1	=	0x0084
                    0085    273 _DPH1	=	0x0085
                    0086    274 _U0CSR	=	0x0086
                    0087    275 _PCON	=	0x0087
                    0088    276 _TCON	=	0x0088
                    0089    277 _P0IFG	=	0x0089
                    008A    278 _P1IFG	=	0x008a
                    008B    279 _P2IFG	=	0x008b
                    008C    280 _PICTL	=	0x008c
                    008D    281 _P1IEN	=	0x008d
                    008F    282 _P0INP	=	0x008f
                    0090    283 _P1	=	0x0090
                    0091    284 _RFIM	=	0x0091
                    0092    285 _DPS	=	0x0092
                    0093    286 __XPAGE	=	0x0093
                    0094    287 _T2CMP	=	0x0094
                    0095    288 _ST0	=	0x0095
                    0096    289 _ST1	=	0x0096
                    0097    290 _ST2	=	0x0097
                    0098    291 _S0CON	=	0x0098
                    0099    292 _HSRC	=	0x0099
                    009A    293 _IEN2	=	0x009a
                    009B    294 _S1CON	=	0x009b
                    009C    295 _T2PEROF0	=	0x009c
                    009D    296 _T2PEROF1	=	0x009d
                    009E    297 _T2PEROF2	=	0x009e
                    009F    298 _FMAP	=	0x009f
                    009F    299 _PSBANK	=	0x009f
                    00A0    300 _P2	=	0x00a0
                    00A1    301 _T2OF0	=	0x00a1
                    00A2    302 _T2OF1	=	0x00a2
                    00A3    303 _T2OF2	=	0x00a3
                    00A4    304 _T2CAPLPL	=	0x00a4
                    00A5    305 _T2CAPHPH	=	0x00a5
                    00A6    306 _T2TLD	=	0x00a6
                    00A7    307 _T2THD	=	0x00a7
                    00A8    308 _IE	=	0x00a8
                    00A8    309 _IEN0	=	0x00a8
                    00A9    310 _IP0	=	0x00a9
                    00AB    311 _FWT	=	0x00ab
                    00AC    312 _FADDRL	=	0x00ac
                    00AD    313 _FADDRH	=	0x00ad
                    00AE    314 _FCTL	=	0x00ae
                    00AF    315 _FWDATA	=	0x00af
                    00B1    316 _ENCDI	=	0x00b1
                    00B2    317 _ENCDO	=	0x00b2
                    00B3    318 _ENCCS	=	0x00b3
                    00B4    319 _ADCCON1	=	0x00b4
                    00B5    320 _ADCCON2	=	0x00b5
                    00B6    321 _ADCCON3	=	0x00b6
                    00B7    322 _RCCTL	=	0x00b7
                    00B8    323 _IEN1	=	0x00b8
                    00B9    324 _IP1	=	0x00b9
                    00BA    325 _ADCL	=	0x00ba
                    00BB    326 _ADCH	=	0x00bb
                    00BC    327 _RNDL	=	0x00bc
                    00BD    328 _RNDH	=	0x00bd
                    00BE    329 _SLEEP	=	0x00be
                    00C0    330 _IRCON	=	0x00c0
                    00C1    331 _U0BUF	=	0x00c1
                    00C2    332 _U0BAUD	=	0x00c2
                    00C3    333 _T2CNF	=	0x00c3
                    00C4    334 _U0UCR	=	0x00c4
                    00C5    335 _U0GCR	=	0x00c5
                    00C6    336 _CLKCON	=	0x00c6
                    00C7    337 _MEMCTR	=	0x00c7
                    00C8    338 _T2CON	=	0x00c8
                    00C9    339 _WDCTL	=	0x00c9
                    00CA    340 _T3CNT	=	0x00ca
                    00CB    341 _T3CTL	=	0x00cb
                    00CC    342 _T3CCTL0	=	0x00cc
                    00CD    343 _T3CC0	=	0x00cd
                    00CE    344 _T3CCTL1	=	0x00ce
                    00CF    345 _T3CC1	=	0x00cf
                    00D0    346 _PSW	=	0x00d0
                    00D1    347 _DMAIRQ	=	0x00d1
                    00D2    348 _DMA1CFGL	=	0x00d2
                    00D3    349 _DMA1CFGH	=	0x00d3
                    00D4    350 _DMA0CFGL	=	0x00d4
                    00D5    351 _DMA0CFGH	=	0x00d5
                    00D6    352 _DMAARM	=	0x00d6
                    00D7    353 _DMAREQ	=	0x00d7
                    00D8    354 _TIMIF	=	0x00d8
                    00D9    355 _RFD	=	0x00d9
                    00DA    356 _T1CC0L	=	0x00da
                    00DB    357 _T1CC0H	=	0x00db
                    00DC    358 _T1CC1L	=	0x00dc
                    00DD    359 _T1CC1H	=	0x00dd
                    00DE    360 _T1CC2L	=	0x00de
                    00DF    361 _T1CC2H	=	0x00df
                    00E0    362 _ACC	=	0x00e0
                    00E1    363 _RFST	=	0x00e1
                    00E2    364 _T1CNTL	=	0x00e2
                    00E3    365 _T1CNTH	=	0x00e3
                    00E4    366 _T1CTL	=	0x00e4
                    00E5    367 _T1CCTL0	=	0x00e5
                    00E6    368 _T1CCTL1	=	0x00e6
                    00E7    369 _T1CCTL2	=	0x00e7
                    00E8    370 _IRCON2	=	0x00e8
                    00E9    371 _RFIF	=	0x00e9
                    00EA    372 _T4CNT	=	0x00ea
                    00EB    373 _T4CTL	=	0x00eb
                    00EC    374 _T4CCTL0	=	0x00ec
                    00ED    375 _T4CC0	=	0x00ed
                    00EE    376 _T4CCTL1	=	0x00ee
                    00EF    377 _T4CC1	=	0x00ef
                    00F0    378 _B	=	0x00f0
                    00F1    379 _PERCFG	=	0x00f1
                    00F2    380 _ADCCFG	=	0x00f2
                    00F3    381 _P0SEL	=	0x00f3
                    00F4    382 _P1SEL	=	0x00f4
                    00F5    383 _P2SEL	=	0x00f5
                    00F6    384 _P1INP	=	0x00f6
                    00F7    385 _P2INP	=	0x00f7
                    00F8    386 _U1CSR	=	0x00f8
                    00F9    387 _U1BUF	=	0x00f9
                    00FA    388 _U1BAUD	=	0x00fa
                    00FB    389 _U1UCR	=	0x00fb
                    00FC    390 _U1GCR	=	0x00fc
                    00FD    391 _P0DIR	=	0x00fd
                    00FE    392 _P1DIR	=	0x00fe
                    00FF    393 _P2DIR	=	0x00ff
                            394 ;--------------------------------------------------------
                            395 ; special function bits
                            396 ;--------------------------------------------------------
                            397 	.area RSEG    (ABS,DATA)
   0000                     398 	.org 0x0000
                    0087    399 _P0_7	=	0x0087
                    0086    400 _P0_6	=	0x0086
                    0085    401 _P0_5	=	0x0085
                    0084    402 _P0_4	=	0x0084
                    0083    403 _P0_3	=	0x0083
                    0082    404 _P0_2	=	0x0082
                    0081    405 _P0_1	=	0x0081
                    0080    406 _P0_0	=	0x0080
                    008F    407 _TCON_URX1IF	=	0x008f
                    008D    408 _TCON_ADCIF	=	0x008d
                    008B    409 _TCON_URX0IF	=	0x008b
                    008A    410 _TCON_IT1	=	0x008a
                    0089    411 _TCON_RFERRIF	=	0x0089
                    0088    412 _TCON_IT0	=	0x0088
                    0090    413 _P1_0	=	0x0090
                    0091    414 _P1_1	=	0x0091
                    0092    415 _P1_2	=	0x0092
                    0093    416 _P1_3	=	0x0093
                    0094    417 _P1_4	=	0x0094
                    0095    418 _P1_5	=	0x0095
                    0096    419 _P1_6	=	0x0096
                    0097    420 _P1_7	=	0x0097
                    0099    421 _S0CON_ENCIF_1	=	0x0099
                    0098    422 _S0CON_ENCIF_0	=	0x0098
                    00A0    423 _P2_0	=	0x00a0
                    00A1    424 _P2_1	=	0x00a1
                    00A2    425 _P2_2	=	0x00a2
                    00A3    426 _P2_3	=	0x00a3
                    00A4    427 _P2_4	=	0x00a4
                    00AF    428 _EA	=	0x00af
                    00AF    429 _IEN0_EA	=	0x00af
                    00AD    430 _IEN0_STIE	=	0x00ad
                    00AC    431 _IEN0_ENCIE	=	0x00ac
                    00AB    432 _IEN0_URX1IE	=	0x00ab
                    00AA    433 _IEN0_URX0IE	=	0x00aa
                    00A9    434 _IEN0_ADCIE	=	0x00a9
                    00A8    435 _IEN0_RFERRIE	=	0x00a8
                    00BD    436 _IEN1_P0IE	=	0x00bd
                    00BC    437 _IEN1_T4IE	=	0x00bc
                    00BB    438 _IEN1_T3IE	=	0x00bb
                    00BA    439 _IEN1_T2IE	=	0x00ba
                    00B9    440 _IEN1_T1IE	=	0x00b9
                    00B8    441 _IEN1_DMAIE	=	0x00b8
                    00C7    442 _IRCON_STIF	=	0x00c7
                    00C5    443 _IRCON_P0IF	=	0x00c5
                    00C4    444 _IRCON_T4IF	=	0x00c4
                    00C3    445 _IRCON_T3IF	=	0x00c3
                    00C2    446 _IRCON_T2IF	=	0x00c2
                    00C1    447 _IRCON_T1IF	=	0x00c1
                    00C0    448 _IRCON_DMAIF	=	0x00c0
                    00D0    449 _P	=	0x00d0
                    00D1    450 _F1	=	0x00d1
                    00D2    451 _OV	=	0x00d2
                    00D3    452 _RS0	=	0x00d3
                    00D4    453 _RS1	=	0x00d4
                    00D5    454 _F0	=	0x00d5
                    00D6    455 _AC	=	0x00d6
                    00D7    456 _CY	=	0x00d7
                    00EC    457 _IRCON2_WDTIF	=	0x00ec
                    00EB    458 _IRCON2_P1IF	=	0x00eb
                    00EA    459 _IRCON2_UTX1IF	=	0x00ea
                    00E9    460 _IRCON2_UTX0IF	=	0x00e9
                    00E8    461 _IRCON2_P2IF	=	0x00e8
                            462 ;--------------------------------------------------------
                            463 ; overlayable register banks
                            464 ;--------------------------------------------------------
                            465 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     466 	.ds 8
                            467 ;--------------------------------------------------------
                            468 ; internal ram data
                            469 ;--------------------------------------------------------
                            470 	.area DSEG    (DATA)
                            471 ;--------------------------------------------------------
                            472 ; overlayable items in internal ram 
                            473 ;--------------------------------------------------------
                            474 	.area OSEG    (OVR,DATA)
                            475 ;--------------------------------------------------------
                            476 ; indirectly addressable internal ram data
                            477 ;--------------------------------------------------------
                            478 	.area ISEG    (DATA)
                            479 ;--------------------------------------------------------
                            480 ; absolute internal ram data
                            481 ;--------------------------------------------------------
                            482 	.area IABS    (ABS,DATA)
                            483 	.area IABS    (ABS,DATA)
                            484 ;--------------------------------------------------------
                            485 ; bit data
                            486 ;--------------------------------------------------------
                            487 	.area BSEG    (BIT)
                            488 ;--------------------------------------------------------
                            489 ; paged external ram data
                            490 ;--------------------------------------------------------
                            491 	.area PSEG    (PAG,XDATA)
                            492 ;--------------------------------------------------------
                            493 ; external ram data
                            494 ;--------------------------------------------------------
                            495 	.area XSEG    (XDATA)
                    DF02    496 _MDMCTRL0H	=	0xdf02
                    DF03    497 _MDMCTRL0L	=	0xdf03
                    DF04    498 _MDMCTRL1H	=	0xdf04
                    DF05    499 _MDMCTRL1L	=	0xdf05
                    DF06    500 _RSSIH	=	0xdf06
                    DF07    501 _RSSIL	=	0xdf07
                    DF08    502 _SYNCWORDH	=	0xdf08
                    DF09    503 _SYNCWORDL	=	0xdf09
                    DF0A    504 _TXCTRLH	=	0xdf0a
                    DF0B    505 _TXCTRLL	=	0xdf0b
                    DF0C    506 _RXCTRL0H	=	0xdf0c
                    DF0D    507 _RXCTRL0L	=	0xdf0d
                    DF0E    508 _RXCTRL1H	=	0xdf0e
                    DF0F    509 _RXCTRL1L	=	0xdf0f
                    DF10    510 _FSCTRLH	=	0xdf10
                    DF11    511 _FSCTRLL	=	0xdf11
                    DF12    512 _CSPX	=	0xdf12
                    DF13    513 _CSPY	=	0xdf13
                    DF14    514 _CSPZ	=	0xdf14
                    DF15    515 _CSPCTRL	=	0xdf15
                    DF16    516 _CSPT	=	0xdf16
                    DF17    517 _RFPWR	=	0xdf17
                    DF20    518 _FSMTCH	=	0xdf20
                    DF21    519 _FSMTCL	=	0xdf21
                    DF22    520 _MANANDH	=	0xdf22
                    DF23    521 _MANANDL	=	0xdf23
                    DF24    522 _MANORH	=	0xdf24
                    DF25    523 _MANORL	=	0xdf25
                    DF26    524 _AGCCTRLH	=	0xdf26
                    DF27    525 _AGCCTRLL	=	0xdf27
                    DF39    526 _FSMSTATE	=	0xdf39
                    DF3A    527 _ADCTSTH	=	0xdf3a
                    DF3B    528 _ADCTSTL	=	0xdf3b
                    DF3C    529 _DACTSTH	=	0xdf3c
                    DF3D    530 _DACTSTL	=	0xdf3d
                    DF43    531 _IEEE_ADDR0	=	0xdf43
                    DF44    532 _IEEE_ADDR1	=	0xdf44
                    DF45    533 _IEEE_ADDR2	=	0xdf45
                    DF46    534 _IEEE_ADDR3	=	0xdf46
                    DF47    535 _IEEE_ADDR4	=	0xdf47
                    DF48    536 _IEEE_ADDR5	=	0xdf48
                    DF49    537 _IEEE_ADDR6	=	0xdf49
                    DF4A    538 _IEEE_ADDR7	=	0xdf4a
                    DF4B    539 _PANIDH	=	0xdf4b
                    DF4C    540 _PANIDL	=	0xdf4c
                    DF4D    541 _SHORTADDRH	=	0xdf4d
                    DF4E    542 _SHORTADDRL	=	0xdf4e
                    DF4F    543 _IOCFG0	=	0xdf4f
                    DF50    544 _IOCFG1	=	0xdf50
                    DF51    545 _IOCFG2	=	0xdf51
                    DF52    546 _IOCFG3	=	0xdf52
                    DF53    547 _RXFIFOCNT	=	0xdf53
                    DF54    548 _FSMTC1	=	0xdf54
                    DF60    549 _CHVER	=	0xdf60
                    DF61    550 _CHIPID	=	0xdf61
                    DF62    551 _RFSTATUS	=	0xdf62
                    DFC1    552 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    553 _RFD_SHADOW	=	0xdfd9
                    DFF9    554 _U1BUF_SHADOW	=	0xdff9
                    DFBA    555 _ADC_SHADOW	=	0xdfba
                            556 ;--------------------------------------------------------
                            557 ; absolute external ram data
                            558 ;--------------------------------------------------------
                            559 	.area XABS    (ABS,XDATA)
                            560 ;--------------------------------------------------------
                            561 ; external initialized ram data
                            562 ;--------------------------------------------------------
                            563 	.area XISEG   (XDATA)
                            564 	.area HOME    (CODE)
                            565 	.area GSINIT0 (CODE)
                            566 	.area GSINIT1 (CODE)
                            567 	.area GSINIT2 (CODE)
                            568 	.area GSINIT3 (CODE)
                            569 	.area GSINIT4 (CODE)
                            570 	.area GSINIT5 (CODE)
                            571 	.area GSINIT  (CODE)
                            572 	.area GSFINAL (CODE)
                            573 	.area CSEG    (CODE)
                            574 ;--------------------------------------------------------
                            575 ; global & static initialisations
                            576 ;--------------------------------------------------------
                            577 	.area HOME    (CODE)
                            578 	.area GSINIT  (CODE)
                            579 	.area GSFINAL (CODE)
                            580 	.area GSINIT  (CODE)
                            581 ;--------------------------------------------------------
                            582 ; Home
                            583 ;--------------------------------------------------------
                            584 	.area HOME    (CODE)
                            585 	.area HOME    (CODE)
                            586 ;--------------------------------------------------------
                            587 ; code
                            588 ;--------------------------------------------------------
                            589 	.area CSEG    (CODE)
                            590 ;------------------------------------------------------------
                            591 ;Allocation info for local variables in function 'cc2430_rf_command'
                            592 ;------------------------------------------------------------
                            593 ;command                   Allocated to registers r2 
                            594 ;fifo_count                Allocated to registers r3 
                            595 ;------------------------------------------------------------
                            596 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:128: cc2430_rf_command(uint8_t command)
                            597 ;	-----------------------------------------
                            598 ;	 function cc2430_rf_command
                            599 ;	-----------------------------------------
   0000                     600 _cc2430_rf_command:
                    0002    601 	ar2 = 0x02
                    0003    602 	ar3 = 0x03
                    0004    603 	ar4 = 0x04
                    0005    604 	ar5 = 0x05
                    0006    605 	ar6 = 0x06
                    0007    606 	ar7 = 0x07
                    0000    607 	ar0 = 0x00
                    0001    608 	ar1 = 0x01
   0000 AA 82               609 	mov	r2,dpl
                            610 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:130: if (command >= 0xE0) { /*immediate strobe*/
   0002 BA E0 00            611 	cjne	r2,#0xE0,00126$
   0005                     612 00126$:
   0005 40 32               613 	jc	00115$
                            614 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:132: switch (command) { /*hardware bug workaround*/
   0007 BA E2 02            615 	cjne	r2,#0xE2,00128$
   000A 80 08               616 	sjmp	00103$
   000C                     617 00128$:
   000C BA E3 02            618 	cjne	r2,#0xE3,00129$
   000F 80 03               619 	sjmp	00103$
   0011                     620 00129$:
   0011 BA E5 22            621 	cjne	r2,#0xE5,00106$
                            622 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:135: case ISTXON:
   0014                     623 00103$:
                            624 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:136: fifo_count = RXFIFOCNT;
   0014 90 DF 53            625 	mov	dptr,#_RXFIFOCNT
   0017 E0                  626 	movx	a,@dptr
   0018 FB                  627 	mov	r3,a
                            628 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:137: RFST = command;
   0019 8A E1               629 	mov	_RFST,r2
                            630 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:138: clock_delay(2);
   001B 90 00 02            631 	mov	dptr,#0x0002
   001E C0 03               632 	push	ar3
   0020 12s00r00            633 	lcall	_clock_delay
   0023 D0 03               634 	pop	ar3
                            635 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:139: if (fifo_count != RXFIFOCNT) {
   0025 90 DF 53            636 	mov	dptr,#_RXFIFOCNT
   0028 E0                  637 	movx	a,@dptr
   0029 FC                  638 	mov	r4,a
   002A EB                  639 	mov	a,r3
   002B B5 04 01            640 	cjne	a,ar4,00132$
   002E 22                  641 	ret
   002F                     642 00132$:
                            643 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:140: RFST = ISFLUSHRX;
   002F 75 E1 E6            644 	mov	_RFST,#0xE6
                            645 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:141: RFST = ISFLUSHRX;
   0032 75 E1 E6            646 	mov	_RFST,#0xE6
                            647 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:143: break;
                            648 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:145: default:
   0035 22                  649 	ret
   0036                     650 00106$:
                            651 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:146: RFST = command;
   0036 8A E1               652 	mov	_RFST,r2
                            653 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:147: }
   0038 22                  654 	ret
   0039                     655 00115$:
                            656 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:148: } else if (command == SSTART) {
   0039 BA DE 10            657 	cjne	r2,#0xDE,00112$
                            658 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:149: RFIF &= ~IRQ_CSP_STOP; /*clear IRQ flag*/
   003C 53 E9 FD            659 	anl	_RFIF,#0xFD
                            660 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:150: RFST = SSTOP; /*make sure there is a stop in the end*/
   003F 75 E1 DF            661 	mov	_RFST,#0xDF
                            662 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:151: RFST = ISSTART; /*start execution*/
   0042 75 E1 FE            663 	mov	_RFST,#0xFE
                            664 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:152: while ((RFIF & IRQ_CSP_STOP) == 0);
   0045                     665 00108$:
   0045 E5 E9               666 	mov	a,_RFIF
   0047 20 E1 04            667 	jb	acc.1,00117$
   004A 80 F9               668 	sjmp	00108$
   004C                     669 00112$:
                            670 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:154: RFST = command; /*write command*/
   004C 8A E1               671 	mov	_RFST,r2
   004E                     672 00117$:
   004E 22                  673 	ret
                            674 ;------------------------------------------------------------
                            675 ;Allocation info for local variables in function 'init'
                            676 ;------------------------------------------------------------
                            677 ;rv                        Allocated to registers r2 r3 
                            678 ;------------------------------------------------------------
                            679 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:162: init(void)
                            680 ;	-----------------------------------------
                            681 ;	 function init
                            682 ;	-----------------------------------------
   004F                     683 _init:
                            684 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:164: int rv = cc2430_rf_init();
                            685 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:168: return rv;
   004F 02s00r00            686 	ljmp	_cc2430_rf_init
                            687 ;------------------------------------------------------------
                            688 ;Allocation info for local variables in function 'prepare'
                            689 ;------------------------------------------------------------
                            690 ;len                       Allocated to stack - offset -4
                            691 ;data                      Allocated to registers r2 r3 r4 
                            692 ;------------------------------------------------------------
                            693 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:172: prepare(const void *data, unsigned short len)
                            694 ;	-----------------------------------------
                            695 ;	 function prepare
                            696 ;	-----------------------------------------
   0052                     697 _prepare:
   0052 C0*00               698 	push	_bp
   0054 85 81*00            699 	mov	_bp,sp
   0057 AA 82               700 	mov	r2,dpl
   0059 AB 83               701 	mov	r3,dph
   005B AC F0               702 	mov	r4,b
                            703 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:174: return cc2430_rf_prepare(data,len);
   005D E5*00               704 	mov	a,_bp
   005F 24 FC               705 	add	a,#0xfc
   0061 F8                  706 	mov	r0,a
   0062 E6                  707 	mov	a,@r0
   0063 C0 E0               708 	push	acc
   0065 08                  709 	inc	r0
   0066 E6                  710 	mov	a,@r0
   0067 C0 E0               711 	push	acc
   0069 8A 82               712 	mov	dpl,r2
   006B 8B 83               713 	mov	dph,r3
   006D 8C F0               714 	mov	b,r4
   006F 12s00r00            715 	lcall	_cc2430_rf_prepare
   0072 AA 82               716 	mov	r2,dpl
   0074 AB 83               717 	mov	r3,dph
   0076 15 81               718 	dec	sp
   0078 15 81               719 	dec	sp
   007A 8A 82               720 	mov	dpl,r2
   007C 8B 83               721 	mov	dph,r3
   007E D0*00               722 	pop	_bp
   0080 22                  723 	ret
                            724 ;------------------------------------------------------------
                            725 ;Allocation info for local variables in function 'transmit'
                            726 ;------------------------------------------------------------
                            727 ;len                       Allocated to registers 
                            728 ;------------------------------------------------------------
                            729 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:178: transmit(unsigned short len)
                            730 ;	-----------------------------------------
                            731 ;	 function transmit
                            732 ;	-----------------------------------------
   0081                     733 _transmit:
                            734 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:180: return cc2430_rf_transmit();
   0081 02s00r00            735 	ljmp	_cc2430_rf_transmit
                            736 ;------------------------------------------------------------
                            737 ;Allocation info for local variables in function 'off'
                            738 ;------------------------------------------------------------
                            739 ;------------------------------------------------------------
                            740 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:184: off(void)
                            741 ;	-----------------------------------------
                            742 ;	 function off
                            743 ;	-----------------------------------------
   0084                     744 _off:
                            745 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:186: return cc2430_rf_rx_disable();
   0084 02s00r00            746 	ljmp	_cc2430_rf_rx_disable
                            747 ;------------------------------------------------------------
                            748 ;Allocation info for local variables in function 'on'
                            749 ;------------------------------------------------------------
                            750 ;------------------------------------------------------------
                            751 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:190: on(void)
                            752 ;	-----------------------------------------
                            753 ;	 function on
                            754 ;	-----------------------------------------
   0087                     755 _on:
                            756 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:192: return cc2430_rf_rx_enable();
   0087 02s00r00            757 	ljmp	_cc2430_rf_rx_enable
                            758 ;------------------------------------------------------------
                            759 ;Allocation info for local variables in function 'send'
                            760 ;------------------------------------------------------------
                            761 ;payload_len               Allocated to stack - offset -4
                            762 ;payload                   Allocated to registers r2 r3 r4 
                            763 ;------------------------------------------------------------
                            764 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:196: send(void *payload, unsigned short payload_len)
                            765 ;	-----------------------------------------
                            766 ;	 function send
                            767 ;	-----------------------------------------
   008A                     768 _send:
   008A C0*00               769 	push	_bp
   008C 85 81*00            770 	mov	_bp,sp
   008F AA 82               771 	mov	r2,dpl
   0091 AB 83               772 	mov	r3,dph
   0093 AC F0               773 	mov	r4,b
                            774 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:198: cc2430_rf_prepare(payload, payload_len);
   0095 E5*00               775 	mov	a,_bp
   0097 24 FC               776 	add	a,#0xfc
   0099 F8                  777 	mov	r0,a
   009A E6                  778 	mov	a,@r0
   009B C0 E0               779 	push	acc
   009D 08                  780 	inc	r0
   009E E6                  781 	mov	a,@r0
   009F C0 E0               782 	push	acc
   00A1 8A 82               783 	mov	dpl,r2
   00A3 8B 83               784 	mov	dph,r3
   00A5 8C F0               785 	mov	b,r4
   00A7 12s00r00            786 	lcall	_cc2430_rf_prepare
   00AA 15 81               787 	dec	sp
   00AC 15 81               788 	dec	sp
                            789 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:199: return cc2430_rf_transmit();
   00AE 12s00r00            790 	lcall	_cc2430_rf_transmit
   00B1 D0*00               791 	pop	_bp
   00B3 22                  792 	ret
                            793 ;------------------------------------------------------------
                            794 ;Allocation info for local variables in function 'read'
                            795 ;------------------------------------------------------------
                            796 ;bufsize                   Allocated to stack - offset -4
                            797 ;buf                       Allocated to registers r2 r3 r4 
                            798 ;------------------------------------------------------------
                            799 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:203: read(void *buf, unsigned short bufsize)
                            800 ;	-----------------------------------------
                            801 ;	 function read
                            802 ;	-----------------------------------------
   00B4                     803 _read:
   00B4 C0*00               804 	push	_bp
   00B6 85 81*00            805 	mov	_bp,sp
   00B9 AA 82               806 	mov	r2,dpl
   00BB AB 83               807 	mov	r3,dph
   00BD AC F0               808 	mov	r4,b
                            809 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:205: return cc2430_rf_read(buf, bufsize);
   00BF E5*00               810 	mov	a,_bp
   00C1 24 FC               811 	add	a,#0xfc
   00C3 F8                  812 	mov	r0,a
   00C4 E6                  813 	mov	a,@r0
   00C5 C0 E0               814 	push	acc
   00C7 08                  815 	inc	r0
   00C8 E6                  816 	mov	a,@r0
   00C9 C0 E0               817 	push	acc
   00CB 8A 82               818 	mov	dpl,r2
   00CD 8B 83               819 	mov	dph,r3
   00CF 8C F0               820 	mov	b,r4
   00D1 12s00r00            821 	lcall	_cc2430_rf_read
   00D4 AA 82               822 	mov	r2,dpl
   00D6 AB 83               823 	mov	r3,dph
   00D8 15 81               824 	dec	sp
   00DA 15 81               825 	dec	sp
   00DC 8A 82               826 	mov	dpl,r2
   00DE 8B 83               827 	mov	dph,r3
   00E0 D0*00               828 	pop	_bp
   00E2 22                  829 	ret
                            830 ;------------------------------------------------------------
                            831 ;Allocation info for local variables in function 'channel_clear'
                            832 ;------------------------------------------------------------
                            833 ;------------------------------------------------------------
                            834 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:209: channel_clear(void)
                            835 ;	-----------------------------------------
                            836 ;	 function channel_clear
                            837 ;	-----------------------------------------
   00E3                     838 _channel_clear:
                            839 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:211: return cc2430_rf_cca_check(0, 0);
   00E3 E4                  840 	clr	a
   00E4 C0 E0               841 	push	acc
   00E6 75 82 00            842 	mov	dpl,#0x00
   00E9 12s00r00            843 	lcall	_cc2430_rf_cca_check
   00EC AA 82               844 	mov	r2,dpl
   00EE AB 83               845 	mov	r3,dph
   00F0 15 81               846 	dec	sp
   00F2 8A 82               847 	mov	dpl,r2
   00F4 8B 83               848 	mov	dph,r3
   00F6 22                  849 	ret
                            850 ;------------------------------------------------------------
                            851 ;Allocation info for local variables in function 'receiving_packet'
                            852 ;------------------------------------------------------------
                            853 ;------------------------------------------------------------
                            854 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:215: receiving_packet(void)
                            855 ;	-----------------------------------------
                            856 ;	 function receiving_packet
                            857 ;	-----------------------------------------
   00F7                     858 _receiving_packet:
                            859 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:217: return cc2430_rf_receiving_packet();
   00F7 02s00r00            860 	ljmp	_cc2430_rf_receiving_packet
                            861 ;------------------------------------------------------------
                            862 ;Allocation info for local variables in function 'pending_packet'
                            863 ;------------------------------------------------------------
                            864 ;------------------------------------------------------------
                            865 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:221: pending_packet(void)
                            866 ;	-----------------------------------------
                            867 ;	 function pending_packet
                            868 ;	-----------------------------------------
   00FA                     869 _pending_packet:
                            870 ;	../../../cpu/cc2430/dev/cc2430_rf_intr.c:223: return cc2430_rf_pending_packet();
   00FA 02s00r00            871 	ljmp	_cc2430_rf_pending_packet
                            872 	.area CSEG    (CODE)
                            873 	.area CONST   (CODE)
   0000                     874 _cc2430_rf_driver:
   0000r4Fs00               875 	.byte _init,(_init >> 8)
   0002r52s00               876 	.byte _prepare,(_prepare >> 8)
   0004r81s00               877 	.byte _transmit,(_transmit >> 8)
   0006r8As00               878 	.byte _send,(_send >> 8)
   0008rB4s00               879 	.byte _read,(_read >> 8)
   000ArE3s00               880 	.byte _channel_clear,(_channel_clear >> 8)
   000CrF7s00               881 	.byte _receiving_packet,(_receiving_packet >> 8)
   000ErFAs00               882 	.byte _pending_packet,(_pending_packet >> 8)
   0010r87s00               883 	.byte _on,(_on >> 8)
   0012r84s00               884 	.byte _off,(_off >> 8)
                            885 	.area XINIT   (CODE)
                            886 	.area CABS    (ABS,CODE)
