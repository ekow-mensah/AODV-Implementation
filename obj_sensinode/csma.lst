                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:26:05 2018
                              5 ;--------------------------------------------------------
                              6 	.module csma
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _csma_driver
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
   0000                      57 _packet_memb_memb_count:
   0000                      58 	.ds 8
   0008                      59 _packet_memb_memb_mem:
   0008                      60 	.ds 288
   0128                      61 _send_packet_seqno_1_1:
   0128                      62 	.ds 2
                             63 ;--------------------------------------------------------
                             64 ; absolute external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XABS    (ABS,XDATA)
                             67 ;--------------------------------------------------------
                             68 ; external initialized ram data
                             69 ;--------------------------------------------------------
                             70 	.area XISEG   (XDATA)
   0000                      71 _packet_memb:
   0000                      72 	.ds 10
                             73 	.area HOME    (CODE)
                             74 	.area GSINIT0 (CODE)
                             75 	.area GSINIT1 (CODE)
                             76 	.area GSINIT2 (CODE)
                             77 	.area GSINIT3 (CODE)
                             78 	.area GSINIT4 (CODE)
                             79 	.area GSINIT5 (CODE)
                             80 	.area GSINIT  (CODE)
                             81 	.area GSFINAL (CODE)
                             82 	.area CSEG    (CODE)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT  (CODE)
                             88 	.area GSFINAL (CODE)
                             89 	.area GSINIT  (CODE)
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area HOME    (CODE)
                             94 	.area HOME    (CODE)
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area CSEG    (CODE)
                             99 ;------------------------------------------------------------
                            100 ;Allocation info for local variables in function 'retransmit_packet'
                            101 ;------------------------------------------------------------
                            102 ;ptr                       Allocated to registers r2 r3 r4 
                            103 ;q                         Allocated to registers 
                            104 ;------------------------------------------------------------
                            105 ;	../../../core/net/mac/csma.c:94: retransmit_packet(void *ptr)
                            106 ;	-----------------------------------------
                            107 ;	 function retransmit_packet
                            108 ;	-----------------------------------------
   0000                     109 _retransmit_packet:
                    0002    110 	ar2 = 0x02
                    0003    111 	ar3 = 0x03
                    0004    112 	ar4 = 0x04
                    0005    113 	ar5 = 0x05
                    0006    114 	ar6 = 0x06
                    0007    115 	ar7 = 0x07
                    0000    116 	ar0 = 0x00
                    0001    117 	ar1 = 0x01
   0000 AA 82               118 	mov	r2,dpl
   0002 AB 83               119 	mov	r3,dph
   0004 AC F0               120 	mov	r4,b
                            121 ;	../../../core/net/mac/csma.c:98: queuebuf_to_packetbuf(q->buf);
   0006 74 03               122 	mov	a,#0x03
   0008 2A                  123 	add	a,r2
   0009 FD                  124 	mov	r5,a
   000A E4                  125 	clr	a
   000B 3B                  126 	addc	a,r3
   000C FE                  127 	mov	r6,a
   000D 8C 07               128 	mov	ar7,r4
   000F 8D 82               129 	mov	dpl,r5
   0011 8E 83               130 	mov	dph,r6
   0013 8F F0               131 	mov	b,r7
   0015 12s00r00            132 	lcall	__gptrget
   0018 FD                  133 	mov	r5,a
   0019 A3                  134 	inc	dptr
   001A 12s00r00            135 	lcall	__gptrget
   001D FE                  136 	mov	r6,a
   001E A3                  137 	inc	dptr
   001F 12s00r00            138 	lcall	__gptrget
   0022 FF                  139 	mov	r7,a
   0023 8D 82               140 	mov	dpl,r5
   0025 8E 83               141 	mov	dph,r6
   0027 8F F0               142 	mov	b,r7
   0029 C0 02               143 	push	ar2
   002B C0 03               144 	push	ar3
   002D C0 04               145 	push	ar4
   002F 12s00r00            146 	lcall	_queuebuf_to_packetbuf
   0032 D0 04               147 	pop	ar4
   0034 D0 03               148 	pop	ar3
   0036 D0 02               149 	pop	ar2
                            150 ;	../../../core/net/mac/csma.c:100: NETSTACK_RDC.send(packet_sent, q);
   0038 90s00r05            151 	mov	dptr,#(_nullrdc_driver + 0x0005)
   003B E4                  152 	clr	a
   003C 93                  153 	movc	a,@a+dptr
   003D FD                  154 	mov	r5,a
   003E A3                  155 	inc	dptr
   003F E4                  156 	clr	a
   0040 93                  157 	movc	a,@a+dptr
   0041 FE                  158 	mov	r6,a
   0042 C0 05               159 	push	ar5
   0044 C0 06               160 	push	ar6
   0046 C0 02               161 	push	ar2
   0048 C0 03               162 	push	ar3
   004A C0 04               163 	push	ar4
   004C 74r5C               164 	mov	a,#00103$
   004E C0 E0               165 	push	acc
   0050 74s00               166 	mov	a,#(00103$ >> 8)
   0052 C0 E0               167 	push	acc
   0054 C0 05               168 	push	ar5
   0056 C0 06               169 	push	ar6
   0058 90s00rD0            170 	mov	dptr,#_packet_sent
   005B 22                  171 	ret
   005C                     172 00103$:
   005C 15 81               173 	dec	sp
   005E 15 81               174 	dec	sp
   0060 15 81               175 	dec	sp
   0062 D0 06               176 	pop	ar6
   0064 D0 05               177 	pop	ar5
   0066 22                  178 	ret
                            179 ;------------------------------------------------------------
                            180 ;Allocation info for local variables in function 'free_packet'
                            181 ;------------------------------------------------------------
                            182 ;q                         Allocated to registers r2 r3 r4 
                            183 ;------------------------------------------------------------
                            184 ;	../../../core/net/mac/csma.c:104: free_packet(struct queued_packet *q)
                            185 ;	-----------------------------------------
                            186 ;	 function free_packet
                            187 ;	-----------------------------------------
   0067                     188 _free_packet:
   0067 AA 82               189 	mov	r2,dpl
   0069 AB 83               190 	mov	r3,dph
   006B AC F0               191 	mov	r4,b
                            192 ;	../../../core/net/mac/csma.c:106: queuebuf_free(q->buf);
   006D 74 03               193 	mov	a,#0x03
   006F 2A                  194 	add	a,r2
   0070 FD                  195 	mov	r5,a
   0071 E4                  196 	clr	a
   0072 3B                  197 	addc	a,r3
   0073 FE                  198 	mov	r6,a
   0074 8C 07               199 	mov	ar7,r4
   0076 8D 82               200 	mov	dpl,r5
   0078 8E 83               201 	mov	dph,r6
   007A 8F F0               202 	mov	b,r7
   007C 12s00r00            203 	lcall	__gptrget
   007F FD                  204 	mov	r5,a
   0080 A3                  205 	inc	dptr
   0081 12s00r00            206 	lcall	__gptrget
   0084 FE                  207 	mov	r6,a
   0085 A3                  208 	inc	dptr
   0086 12s00r00            209 	lcall	__gptrget
   0089 FF                  210 	mov	r7,a
   008A 8D 82               211 	mov	dpl,r5
   008C 8E 83               212 	mov	dph,r6
   008E 8F F0               213 	mov	b,r7
   0090 C0 02               214 	push	ar2
   0092 C0 03               215 	push	ar3
   0094 C0 04               216 	push	ar4
   0096 12s00r00            217 	lcall	_queuebuf_free
   0099 D0 04               218 	pop	ar4
   009B D0 03               219 	pop	ar3
   009D D0 02               220 	pop	ar2
                            221 ;	../../../core/net/mac/csma.c:107: memb_free(&packet_memb, q);
   009F C0 02               222 	push	ar2
   00A1 C0 03               223 	push	ar3
   00A3 C0 04               224 	push	ar4
   00A5 C0 02               225 	push	ar2
   00A7 C0 03               226 	push	ar3
   00A9 C0 04               227 	push	ar4
   00AB 90s00r00            228 	mov	dptr,#_packet_memb
   00AE 75 F0 00            229 	mov	b,#0x00
   00B1 12s00r00            230 	lcall	_memb_free
   00B4 15 81               231 	dec	sp
   00B6 15 81               232 	dec	sp
   00B8 15 81               233 	dec	sp
   00BA D0 04               234 	pop	ar4
   00BC D0 03               235 	pop	ar3
   00BE D0 02               236 	pop	ar2
                            237 ;	../../../core/net/mac/csma.c:108: ctimer_stop(&q->retransmit_timer);
   00C0 74 06               238 	mov	a,#0x06
   00C2 2A                  239 	add	a,r2
   00C3 FA                  240 	mov	r2,a
   00C4 E4                  241 	clr	a
   00C5 3B                  242 	addc	a,r3
   00C6 FB                  243 	mov	r3,a
   00C7 8A 82               244 	mov	dpl,r2
   00C9 8B 83               245 	mov	dph,r3
   00CB 8C F0               246 	mov	b,r4
   00CD 02s00r00            247 	ljmp	_ctimer_stop
                            248 ;------------------------------------------------------------
                            249 ;Allocation info for local variables in function 'packet_sent'
                            250 ;------------------------------------------------------------
                            251 ;status                    Allocated to stack - offset -4
                            252 ;num_transmissions         Allocated to stack - offset -6
                            253 ;ptr                       Allocated to registers r2 r3 r4 
                            254 ;q                         Allocated to stack - offset 1
                            255 ;time                      Allocated to stack - offset 4
                            256 ;sent                      Allocated to stack - offset 6
                            257 ;cptr                      Allocated to stack - offset 8
                            258 ;num_tx                    Allocated to registers r6 r2 
                            259 ;sloc0                     Allocated to stack - offset 11
                            260 ;------------------------------------------------------------
                            261 ;	../../../core/net/mac/csma.c:112: packet_sent(void *ptr, int status, int num_transmissions)
                            262 ;	-----------------------------------------
                            263 ;	 function packet_sent
                            264 ;	-----------------------------------------
   00D0                     265 _packet_sent:
   00D0 C0*00               266 	push	_bp
   00D2 E5 81               267 	mov	a,sp
   00D4 F5*00               268 	mov	_bp,a
   00D6 24 0D               269 	add	a,#0x0d
   00D8 F5 81               270 	mov	sp,a
   00DA AA 82               271 	mov	r2,dpl
   00DC AB 83               272 	mov	r3,dph
   00DE AC F0               273 	mov	r4,b
                            274 ;	../../../core/net/mac/csma.c:114: struct queued_packet *q = ptr;
   00E0 A8*00               275 	mov	r0,_bp
   00E2 08                  276 	inc	r0
   00E3 A6 02               277 	mov	@r0,ar2
   00E5 08                  278 	inc	r0
   00E6 A6 03               279 	mov	@r0,ar3
   00E8 08                  280 	inc	r0
   00E9 A6 04               281 	mov	@r0,ar4
                            282 ;	../../../core/net/mac/csma.c:120: switch(status) {
   00EB E5*00               283 	mov	a,_bp
   00ED 24 FC               284 	add	a,#0xfc
   00EF F8                  285 	mov	r0,a
   00F0 B6 00 06            286 	cjne	@r0,#0x00,00138$
   00F3 08                  287 	inc	r0
   00F4 B6 00 02            288 	cjne	@r0,#0x00,00138$
   00F7 80 2C               289 	sjmp	00102$
   00F9                     290 00138$:
   00F9 E5*00               291 	mov	a,_bp
   00FB 24 FC               292 	add	a,#0xfc
   00FD F8                  293 	mov	r0,a
   00FE B6 01 06            294 	cjne	@r0,#0x01,00139$
   0101 08                  295 	inc	r0
   0102 B6 00 02            296 	cjne	@r0,#0x00,00139$
   0105 80 43               297 	sjmp	00103$
   0107                     298 00139$:
   0107 E5*00               299 	mov	a,_bp
   0109 24 FC               300 	add	a,#0xfc
   010B F8                  301 	mov	r0,a
   010C B6 02 06            302 	cjne	@r0,#0x02,00140$
   010F 08                  303 	inc	r0
   0110 B6 00 02            304 	cjne	@r0,#0x00,00140$
   0113 80 10               305 	sjmp	00102$
   0115                     306 00140$:
   0115 E5*00               307 	mov	a,_bp
   0117 24 FC               308 	add	a,#0xfc
   0119 F8                  309 	mov	r0,a
   011A B6 03 06            310 	cjne	@r0,#0x03,00141$
   011D 08                  311 	inc	r0
   011E B6 00 02            312 	cjne	@r0,#0x00,00141$
   0121 80 5C               313 	sjmp	00104$
   0123                     314 00141$:
                            315 ;	../../../core/net/mac/csma.c:122: case MAC_TX_NOACK:
   0123 80 76               316 	sjmp	00105$
   0125                     317 00102$:
                            318 ;	../../../core/net/mac/csma.c:123: q->transmissions++;
   0125 A8*00               319 	mov	r0,_bp
   0127 08                  320 	inc	r0
   0128 74 20               321 	mov	a,#0x20
   012A 26                  322 	add	a,@r0
   012B FA                  323 	mov	r2,a
   012C E4                  324 	clr	a
   012D 08                  325 	inc	r0
   012E 36                  326 	addc	a,@r0
   012F FB                  327 	mov	r3,a
   0130 08                  328 	inc	r0
   0131 86 04               329 	mov	ar4,@r0
   0133 8A 82               330 	mov	dpl,r2
   0135 8B 83               331 	mov	dph,r3
   0137 8C F0               332 	mov	b,r4
   0139 12s00r00            333 	lcall	__gptrget
   013C FD                  334 	mov	r5,a
   013D 0D                  335 	inc	r5
   013E 8A 82               336 	mov	dpl,r2
   0140 8B 83               337 	mov	dph,r3
   0142 8C F0               338 	mov	b,r4
   0144 ED                  339 	mov	a,r5
   0145 12s00r00            340 	lcall	__gptrput
                            341 ;	../../../core/net/mac/csma.c:124: break;
                            342 ;	../../../core/net/mac/csma.c:125: case MAC_TX_COLLISION:
   0148 80 51               343 	sjmp	00105$
   014A                     344 00103$:
                            345 ;	../../../core/net/mac/csma.c:126: q->collisions++;
   014A E5*00               346 	mov	a,_bp
   014C 24 0B               347 	add	a,#0x0b
   014E F8                  348 	mov	r0,a
   014F 74 22               349 	mov	a,#0x22
   0151 2A                  350 	add	a,r2
   0152 F6                  351 	mov	@r0,a
   0153 E4                  352 	clr	a
   0154 3B                  353 	addc	a,r3
   0155 08                  354 	inc	r0
   0156 F6                  355 	mov	@r0,a
   0157 08                  356 	inc	r0
   0158 A6 04               357 	mov	@r0,ar4
   015A E5*00               358 	mov	a,_bp
   015C 24 0B               359 	add	a,#0x0b
   015E F8                  360 	mov	r0,a
   015F 86 82               361 	mov	dpl,@r0
   0161 08                  362 	inc	r0
   0162 86 83               363 	mov	dph,@r0
   0164 08                  364 	inc	r0
   0165 86 F0               365 	mov	b,@r0
   0167 12s00r00            366 	lcall	__gptrget
   016A FD                  367 	mov	r5,a
   016B 0D                  368 	inc	r5
   016C E5*00               369 	mov	a,_bp
   016E 24 0B               370 	add	a,#0x0b
   0170 F8                  371 	mov	r0,a
   0171 86 82               372 	mov	dpl,@r0
   0173 08                  373 	inc	r0
   0174 86 83               374 	mov	dph,@r0
   0176 08                  375 	inc	r0
   0177 86 F0               376 	mov	b,@r0
   0179 ED                  377 	mov	a,r5
   017A 12s00r00            378 	lcall	__gptrput
                            379 ;	../../../core/net/mac/csma.c:127: break;
                            380 ;	../../../core/net/mac/csma.c:128: case MAC_TX_DEFERRED:
   017D 80 1C               381 	sjmp	00105$
   017F                     382 00104$:
                            383 ;	../../../core/net/mac/csma.c:129: q->deferrals++;
   017F 74 23               384 	mov	a,#0x23
   0181 2A                  385 	add	a,r2
   0182 FA                  386 	mov	r2,a
   0183 E4                  387 	clr	a
   0184 3B                  388 	addc	a,r3
   0185 FB                  389 	mov	r3,a
   0186 8A 82               390 	mov	dpl,r2
   0188 8B 83               391 	mov	dph,r3
   018A 8C F0               392 	mov	b,r4
   018C 12s00r00            393 	lcall	__gptrget
   018F FD                  394 	mov	r5,a
   0190 0D                  395 	inc	r5
   0191 8A 82               396 	mov	dpl,r2
   0193 8B 83               397 	mov	dph,r3
   0195 8C F0               398 	mov	b,r4
   0197 ED                  399 	mov	a,r5
   0198 12s00r00            400 	lcall	__gptrput
                            401 ;	../../../core/net/mac/csma.c:131: }
   019B                     402 00105$:
                            403 ;	../../../core/net/mac/csma.c:133: sent = q->sent;
   019B A8*00               404 	mov	r0,_bp
   019D 08                  405 	inc	r0
   019E 74 1B               406 	mov	a,#0x1B
   01A0 26                  407 	add	a,@r0
   01A1 FA                  408 	mov	r2,a
   01A2 E4                  409 	clr	a
   01A3 08                  410 	inc	r0
   01A4 36                  411 	addc	a,@r0
   01A5 FB                  412 	mov	r3,a
   01A6 08                  413 	inc	r0
   01A7 86 04               414 	mov	ar4,@r0
   01A9 8A 82               415 	mov	dpl,r2
   01AB 8B 83               416 	mov	dph,r3
   01AD 8C F0               417 	mov	b,r4
   01AF 12s00r00            418 	lcall	__gptrget
   01B2 FA                  419 	mov	r2,a
   01B3 A3                  420 	inc	dptr
   01B4 12s00r00            421 	lcall	__gptrget
   01B7 FB                  422 	mov	r3,a
   01B8 E5*00               423 	mov	a,_bp
   01BA 24 06               424 	add	a,#0x06
   01BC F8                  425 	mov	r0,a
   01BD A6 02               426 	mov	@r0,ar2
   01BF 08                  427 	inc	r0
   01C0 A6 03               428 	mov	@r0,ar3
                            429 ;	../../../core/net/mac/csma.c:134: cptr = q->cptr;
   01C2 A8*00               430 	mov	r0,_bp
   01C4 08                  431 	inc	r0
   01C5 74 1D               432 	mov	a,#0x1D
   01C7 26                  433 	add	a,@r0
   01C8 FC                  434 	mov	r4,a
   01C9 E4                  435 	clr	a
   01CA 08                  436 	inc	r0
   01CB 36                  437 	addc	a,@r0
   01CC FD                  438 	mov	r5,a
   01CD 08                  439 	inc	r0
   01CE 86 06               440 	mov	ar6,@r0
   01D0 8C 82               441 	mov	dpl,r4
   01D2 8D 83               442 	mov	dph,r5
   01D4 8E F0               443 	mov	b,r6
   01D6 12s00r00            444 	lcall	__gptrget
   01D9 FC                  445 	mov	r4,a
   01DA A3                  446 	inc	dptr
   01DB 12s00r00            447 	lcall	__gptrget
   01DE FD                  448 	mov	r5,a
   01DF A3                  449 	inc	dptr
   01E0 12s00r00            450 	lcall	__gptrget
   01E3 FE                  451 	mov	r6,a
   01E4 E5*00               452 	mov	a,_bp
   01E6 24 08               453 	add	a,#0x08
   01E8 F8                  454 	mov	r0,a
   01E9 A6 04               455 	mov	@r0,ar4
   01EB 08                  456 	inc	r0
   01EC A6 05               457 	mov	@r0,ar5
   01EE 08                  458 	inc	r0
   01EF A6 06               459 	mov	@r0,ar6
                            460 ;	../../../core/net/mac/csma.c:135: num_tx = q->transmissions;
   01F1 A8*00               461 	mov	r0,_bp
   01F3 08                  462 	inc	r0
   01F4 74 20               463 	mov	a,#0x20
   01F6 26                  464 	add	a,@r0
   01F7 FF                  465 	mov	r7,a
   01F8 E4                  466 	clr	a
   01F9 08                  467 	inc	r0
   01FA 36                  468 	addc	a,@r0
   01FB FC                  469 	mov	r4,a
   01FC 08                  470 	inc	r0
   01FD 86 05               471 	mov	ar5,@r0
   01FF 8F 82               472 	mov	dpl,r7
   0201 8C 83               473 	mov	dph,r4
   0203 8D F0               474 	mov	b,r5
   0205 12s00r00            475 	lcall	__gptrget
   0208 FE                  476 	mov	r6,a
   0209 7A 00               477 	mov	r2,#0x00
                            478 ;	../../../core/net/mac/csma.c:137: if(status == MAC_TX_COLLISION ||
   020B E5*00               479 	mov	a,_bp
   020D 24 FC               480 	add	a,#0xfc
   020F F8                  481 	mov	r0,a
   0210 B6 01 06            482 	cjne	@r0,#0x01,00142$
   0213 08                  483 	inc	r0
   0214 B6 00 02            484 	cjne	@r0,#0x00,00142$
   0217 80 11               485 	sjmp	00109$
   0219                     486 00142$:
                            487 ;	../../../core/net/mac/csma.c:138: status == MAC_TX_NOACK) {
   0219 E5*00               488 	mov	a,_bp
   021B 24 FC               489 	add	a,#0xfc
   021D F8                  490 	mov	r0,a
   021E B6 02 06            491 	cjne	@r0,#0x02,00143$
   0221 08                  492 	inc	r0
   0222 B6 00 02            493 	cjne	@r0,#0x00,00143$
   0225 80 03               494 	sjmp	00144$
   0227                     495 00143$:
   0227 02s03rF5            496 	ljmp	00122$
   022A                     497 00144$:
                            498 ;	../../../core/net/mac/csma.c:152: }
   022A                     499 00109$:
                            500 ;	../../../core/net/mac/csma.c:156: time = NETSTACK_RDC.channel_check_interval();
   022A C0 06               501 	push	ar6
   022C C0 02               502 	push	ar2
   022E 90s00r0D            503 	mov	dptr,#(_nullrdc_driver + 0x000d)
   0231 E4                  504 	clr	a
   0232 93                  505 	movc	a,@a+dptr
   0233 FB                  506 	mov	r3,a
   0234 A3                  507 	inc	dptr
   0235 E4                  508 	clr	a
   0236 93                  509 	movc	a,@a+dptr
   0237 FA                  510 	mov	r2,a
   0238 C0 04               511 	push	ar4
   023A C0 05               512 	push	ar5
   023C C0 06               513 	push	ar6
   023E C0 07               514 	push	ar7
   0240 8B 82               515 	mov	dpl,r3
   0242 8A 83               516 	mov	dph,r2
   0244 12s00r00            517 	lcall	__sdcc_call_dptr
   0247 AB 82               518 	mov	r3,dpl
   0249 AA 83               519 	mov	r2,dph
   024B D0 07               520 	pop	ar7
   024D D0 06               521 	pop	ar6
   024F D0 05               522 	pop	ar5
   0251 D0 04               523 	pop	ar4
   0253 E5*00               524 	mov	a,_bp
   0255 24 04               525 	add	a,#0x04
   0257 F8                  526 	mov	r0,a
   0258 A6 03               527 	mov	@r0,ar3
   025A 08                  528 	inc	r0
   025B A6 02               529 	mov	@r0,ar2
                            530 ;	../../../core/net/mac/csma.c:161: if(time == 0) {
   025D D0 02               531 	pop	ar2
   025F D0 06               532 	pop	ar6
   0261 E5*00               533 	mov	a,_bp
   0263 24 04               534 	add	a,#0x04
   0265 F8                  535 	mov	r0,a
   0266 E6                  536 	mov	a,@r0
   0267 08                  537 	inc	r0
   0268 46                  538 	orl	a,@r0
   0269 70 0A               539 	jnz	00111$
                            540 ;	../../../core/net/mac/csma.c:162: time = CLOCK_SECOND / NETSTACK_RDC_CHANNEL_CHECK_RATE;
   026B E5*00               541 	mov	a,_bp
   026D 24 04               542 	add	a,#0x04
   026F F8                  543 	mov	r0,a
   0270 76 20               544 	mov	@r0,#0x20
   0272 08                  545 	inc	r0
   0273 76 00               546 	mov	@r0,#0x00
   0275                     547 00111$:
                            548 ;	../../../core/net/mac/csma.c:168: time = time + (random_rand() % ((q->transmissions + 1) * 3 * time));
   0275 C0 06               549 	push	ar6
   0277 C0 02               550 	push	ar2
   0279 C0 04               551 	push	ar4
   027B C0 05               552 	push	ar5
   027D C0 06               553 	push	ar6
   027F C0 07               554 	push	ar7
   0281 12s00r00            555 	lcall	_random_rand
   0284 AB 82               556 	mov	r3,dpl
   0286 AA 83               557 	mov	r2,dph
   0288 D0 07               558 	pop	ar7
   028A D0 06               559 	pop	ar6
   028C D0 05               560 	pop	ar5
   028E D0 04               561 	pop	ar4
   0290 8F 82               562 	mov	dpl,r7
   0292 8C 83               563 	mov	dph,r4
   0294 8D F0               564 	mov	b,r5
   0296 12s00r00            565 	lcall	__gptrget
   0299 FF                  566 	mov	r7,a
   029A 7C 00               567 	mov	r4,#0x00
   029C 74 01               568 	mov	a,#0x01
   029E 2F                  569 	add	a,r7
   029F FD                  570 	mov	r5,a
   02A0 E4                  571 	clr	a
   02A1 3C                  572 	addc	a,r4
   02A2 FE                  573 	mov	r6,a
   02A3 C0 02               574 	push	ar2
   02A5 C0 03               575 	push	ar3
   02A7 C0 04               576 	push	ar4
   02A9 C0 07               577 	push	ar7
   02AB C0 05               578 	push	ar5
   02AD C0 06               579 	push	ar6
   02AF 90 00 03            580 	mov	dptr,#0x0003
   02B2 12s00r00            581 	lcall	__mulint
   02B5 AD 82               582 	mov	r5,dpl
   02B7 AE 83               583 	mov	r6,dph
   02B9 15 81               584 	dec	sp
   02BB 15 81               585 	dec	sp
   02BD E5*00               586 	mov	a,_bp
   02BF 24 04               587 	add	a,#0x04
   02C1 F8                  588 	mov	r0,a
   02C2 E6                  589 	mov	a,@r0
   02C3 C0 E0               590 	push	acc
   02C5 08                  591 	inc	r0
   02C6 E6                  592 	mov	a,@r0
   02C7 C0 E0               593 	push	acc
   02C9 8D 82               594 	mov	dpl,r5
   02CB 8E 83               595 	mov	dph,r6
   02CD 12s00r00            596 	lcall	__mulint
   02D0 AD 82               597 	mov	r5,dpl
   02D2 AE 83               598 	mov	r6,dph
   02D4 15 81               599 	dec	sp
   02D6 15 81               600 	dec	sp
   02D8 D0 07               601 	pop	ar7
   02DA D0 04               602 	pop	ar4
   02DC D0 03               603 	pop	ar3
   02DE D0 02               604 	pop	ar2
   02E0 C0 04               605 	push	ar4
   02E2 C0 06               606 	push	ar6
   02E4 C0 07               607 	push	ar7
   02E6 C0 05               608 	push	ar5
   02E8 C0 06               609 	push	ar6
   02EA 8B 82               610 	mov	dpl,r3
   02EC 8A 83               611 	mov	dph,r2
   02EE 12s00r00            612 	lcall	__moduint
   02F1 AA 82               613 	mov	r2,dpl
   02F3 AB 83               614 	mov	r3,dph
   02F5 15 81               615 	dec	sp
   02F7 15 81               616 	dec	sp
   02F9 D0 07               617 	pop	ar7
   02FB D0 06               618 	pop	ar6
   02FD D0 04               619 	pop	ar4
   02FF E5*00               620 	mov	a,_bp
   0301 24 04               621 	add	a,#0x04
   0303 F8                  622 	mov	r0,a
   0304 EA                  623 	mov	a,r2
   0305 26                  624 	add	a,@r0
   0306 F6                  625 	mov	@r0,a
   0307 EB                  626 	mov	a,r3
   0308 08                  627 	inc	r0
   0309 36                  628 	addc	a,@r0
   030A F6                  629 	mov	@r0,a
                            630 ;	../../../core/net/mac/csma.c:170: if(q->transmissions + q->collisions < q->max_transmissions) {
   030B A8*00               631 	mov	r0,_bp
   030D 08                  632 	inc	r0
   030E 74 22               633 	mov	a,#0x22
   0310 26                  634 	add	a,@r0
   0311 FA                  635 	mov	r2,a
   0312 E4                  636 	clr	a
   0313 08                  637 	inc	r0
   0314 36                  638 	addc	a,@r0
   0315 FB                  639 	mov	r3,a
   0316 08                  640 	inc	r0
   0317 86 05               641 	mov	ar5,@r0
   0319 8A 82               642 	mov	dpl,r2
   031B 8B 83               643 	mov	dph,r3
   031D 8D F0               644 	mov	b,r5
   031F 12s00r00            645 	lcall	__gptrget
   0322 7B 00               646 	mov	r3,#0x00
   0324 2F                  647 	add	a,r7
   0325 FF                  648 	mov	r7,a
   0326 EB                  649 	mov	a,r3
   0327 3C                  650 	addc	a,r4
   0328 FC                  651 	mov	r4,a
   0329 A8*00               652 	mov	r0,_bp
   032B 08                  653 	inc	r0
   032C 74 21               654 	mov	a,#0x21
   032E 26                  655 	add	a,@r0
   032F FA                  656 	mov	r2,a
   0330 E4                  657 	clr	a
   0331 08                  658 	inc	r0
   0332 36                  659 	addc	a,@r0
   0333 FB                  660 	mov	r3,a
   0334 08                  661 	inc	r0
   0335 86 05               662 	mov	ar5,@r0
   0337 8A 82               663 	mov	dpl,r2
   0339 8B 83               664 	mov	dph,r3
   033B 8D F0               665 	mov	b,r5
   033D 12s00r00            666 	lcall	__gptrget
   0340 FA                  667 	mov	r2,a
   0341 7B 00               668 	mov	r3,#0x00
   0343 C3                  669 	clr	c
   0344 EF                  670 	mov	a,r7
   0345 9A                  671 	subb	a,r2
   0346 EC                  672 	mov	a,r4
   0347 64 80               673 	xrl	a,#0x80
   0349 8B F0               674 	mov	b,r3
   034B 63 F0 80            675 	xrl	b,#0x80
   034E 95 F0               676 	subb	a,b
   0350 D0 02               677 	pop	ar2
   0352 D0 06               678 	pop	ar6
   0354 50 42               679 	jnc	00115$
                            680 ;	../../../core/net/mac/csma.c:172: ctimer_set(&q->retransmit_timer, time,
   0356 A8*00               681 	mov	r0,_bp
   0358 08                  682 	inc	r0
   0359 74 06               683 	mov	a,#0x06
   035B 26                  684 	add	a,@r0
   035C FB                  685 	mov	r3,a
   035D E4                  686 	clr	a
   035E 08                  687 	inc	r0
   035F 36                  688 	addc	a,@r0
   0360 FC                  689 	mov	r4,a
   0361 08                  690 	inc	r0
   0362 86 05               691 	mov	ar5,@r0
   0364 A8*00               692 	mov	r0,_bp
   0366 08                  693 	inc	r0
   0367 E6                  694 	mov	a,@r0
   0368 C0 E0               695 	push	acc
   036A 08                  696 	inc	r0
   036B E6                  697 	mov	a,@r0
   036C C0 E0               698 	push	acc
   036E 08                  699 	inc	r0
   036F E6                  700 	mov	a,@r0
   0370 C0 E0               701 	push	acc
   0372 74r00               702 	mov	a,#_retransmit_packet
   0374 C0 E0               703 	push	acc
   0376 74s00               704 	mov	a,#(_retransmit_packet >> 8)
   0378 C0 E0               705 	push	acc
   037A E5*00               706 	mov	a,_bp
   037C 24 04               707 	add	a,#0x04
   037E F8                  708 	mov	r0,a
   037F E6                  709 	mov	a,@r0
   0380 C0 E0               710 	push	acc
   0382 08                  711 	inc	r0
   0383 E6                  712 	mov	a,@r0
   0384 C0 E0               713 	push	acc
   0386 8B 82               714 	mov	dpl,r3
   0388 8C 83               715 	mov	dph,r4
   038A 8D F0               716 	mov	b,r5
   038C 12s00r00            717 	lcall	_ctimer_set
   038F E5 81               718 	mov	a,sp
   0391 24 F9               719 	add	a,#0xf9
   0393 F5 81               720 	mov	sp,a
   0395 02s04r57            721 	ljmp	00125$
   0398                     722 00115$:
                            723 ;	../../../core/net/mac/csma.c:176: free_packet(q);
   0398 A8*00               724 	mov	r0,_bp
   039A 08                  725 	inc	r0
   039B 86 82               726 	mov	dpl,@r0
   039D 08                  727 	inc	r0
   039E 86 83               728 	mov	dph,@r0
   03A0 08                  729 	inc	r0
   03A1 86 F0               730 	mov	b,@r0
   03A3 C0 02               731 	push	ar2
   03A5 C0 06               732 	push	ar6
   03A7 12s00r67            733 	lcall	_free_packet
   03AA D0 06               734 	pop	ar6
   03AC D0 02               735 	pop	ar2
                            736 ;	../../../core/net/mac/csma.c:178: if(sent) {
   03AE E5*00               737 	mov	a,_bp
   03B0 24 06               738 	add	a,#0x06
   03B2 F8                  739 	mov	r0,a
   03B3 E6                  740 	mov	a,@r0
   03B4 08                  741 	inc	r0
   03B5 46                  742 	orl	a,@r0
   03B6 70 03               743 	jnz	00148$
   03B8 02s04r57            744 	ljmp	00125$
   03BB                     745 00148$:
                            746 ;	../../../core/net/mac/csma.c:179: sent(cptr, status, num_tx);
   03BB C0 06               747 	push	ar6
   03BD C0 02               748 	push	ar2
   03BF E5*00               749 	mov	a,_bp
   03C1 24 FC               750 	add	a,#0xfc
   03C3 F8                  751 	mov	r0,a
   03C4 E6                  752 	mov	a,@r0
   03C5 C0 E0               753 	push	acc
   03C7 08                  754 	inc	r0
   03C8 E6                  755 	mov	a,@r0
   03C9 C0 E0               756 	push	acc
   03CB 74rED               757 	mov	a,#00149$
   03CD C0 E0               758 	push	acc
   03CF 74s03               759 	mov	a,#(00149$ >> 8)
   03D1 C0 E0               760 	push	acc
   03D3 E5*00               761 	mov	a,_bp
   03D5 24 06               762 	add	a,#0x06
   03D7 F8                  763 	mov	r0,a
   03D8 E6                  764 	mov	a,@r0
   03D9 C0 E0               765 	push	acc
   03DB 08                  766 	inc	r0
   03DC E6                  767 	mov	a,@r0
   03DD C0 E0               768 	push	acc
   03DF E5*00               769 	mov	a,_bp
   03E1 24 08               770 	add	a,#0x08
   03E3 F8                  771 	mov	r0,a
   03E4 86 82               772 	mov	dpl,@r0
   03E6 08                  773 	inc	r0
   03E7 86 83               774 	mov	dph,@r0
   03E9 08                  775 	inc	r0
   03EA 86 F0               776 	mov	b,@r0
   03EC 22                  777 	ret
   03ED                     778 00149$:
   03ED E5 81               779 	mov	a,sp
   03EF 24 FC               780 	add	a,#0xfc
   03F1 F5 81               781 	mov	sp,a
   03F3 80 62               782 	sjmp	00125$
   03F5                     783 00122$:
                            784 ;	../../../core/net/mac/csma.c:185: } else if(status == MAC_TX_OK) {
   03F5 E5*00               785 	mov	a,_bp
   03F7 24 FC               786 	add	a,#0xfc
   03F9 F8                  787 	mov	r0,a
   03FA E6                  788 	mov	a,@r0
   03FB 08                  789 	inc	r0
   03FC 46                  790 	orl	a,@r0
   03FD 70 58               791 	jnz	00125$
                            792 ;	../../../core/net/mac/csma.c:187: free_packet(q);
   03FF A8*00               793 	mov	r0,_bp
   0401 08                  794 	inc	r0
   0402 86 82               795 	mov	dpl,@r0
   0404 08                  796 	inc	r0
   0405 86 83               797 	mov	dph,@r0
   0407 08                  798 	inc	r0
   0408 86 F0               799 	mov	b,@r0
   040A C0 02               800 	push	ar2
   040C C0 06               801 	push	ar6
   040E 12s00r67            802 	lcall	_free_packet
   0411 D0 06               803 	pop	ar6
   0413 D0 02               804 	pop	ar2
                            805 ;	../../../core/net/mac/csma.c:189: if(sent) {
   0415 E5*00               806 	mov	a,_bp
   0417 24 06               807 	add	a,#0x06
   0419 F8                  808 	mov	r0,a
   041A E6                  809 	mov	a,@r0
   041B 08                  810 	inc	r0
   041C 46                  811 	orl	a,@r0
   041D 60 38               812 	jz	00125$
                            813 ;	../../../core/net/mac/csma.c:190: sent(cptr, status, num_tx);
   041F C0 06               814 	push	ar6
   0421 C0 02               815 	push	ar2
   0423 E5*00               816 	mov	a,_bp
   0425 24 FC               817 	add	a,#0xfc
   0427 F8                  818 	mov	r0,a
   0428 E6                  819 	mov	a,@r0
   0429 C0 E0               820 	push	acc
   042B 08                  821 	inc	r0
   042C E6                  822 	mov	a,@r0
   042D C0 E0               823 	push	acc
   042F 74r51               824 	mov	a,#00152$
   0431 C0 E0               825 	push	acc
   0433 74s04               826 	mov	a,#(00152$ >> 8)
   0435 C0 E0               827 	push	acc
   0437 E5*00               828 	mov	a,_bp
   0439 24 06               829 	add	a,#0x06
   043B F8                  830 	mov	r0,a
   043C E6                  831 	mov	a,@r0
   043D C0 E0               832 	push	acc
   043F 08                  833 	inc	r0
   0440 E6                  834 	mov	a,@r0
   0441 C0 E0               835 	push	acc
   0443 E5*00               836 	mov	a,_bp
   0445 24 08               837 	add	a,#0x08
   0447 F8                  838 	mov	r0,a
   0448 86 82               839 	mov	dpl,@r0
   044A 08                  840 	inc	r0
   044B 86 83               841 	mov	dph,@r0
   044D 08                  842 	inc	r0
   044E 86 F0               843 	mov	b,@r0
   0450 22                  844 	ret
   0451                     845 00152$:
   0451 E5 81               846 	mov	a,sp
   0453 24 FC               847 	add	a,#0xfc
   0455 F5 81               848 	mov	sp,a
   0457                     849 00125$:
   0457 85*00 81            850 	mov	sp,_bp
   045A D0*00               851 	pop	_bp
   045C 22                  852 	ret
                            853 ;------------------------------------------------------------
                            854 ;Allocation info for local variables in function 'send_packet'
                            855 ;------------------------------------------------------------
                            856 ;ptr                       Allocated to stack - offset -5
                            857 ;sent                      Allocated to registers r2 r3 
                            858 ;q                         Allocated to stack - offset 1
                            859 ;seqno                     Allocated with name '_send_packet_seqno_1_1'
                            860 ;------------------------------------------------------------
                            861 ;	../../../core/net/mac/csma.c:199: send_packet(mac_callback_t sent, void *ptr)
                            862 ;	-----------------------------------------
                            863 ;	 function send_packet
                            864 ;	-----------------------------------------
   045D                     865 _send_packet:
   045D C0*00               866 	push	_bp
   045F 85 81*00            867 	mov	_bp,sp
   0462 05 81               868 	inc	sp
   0464 05 81               869 	inc	sp
   0466 05 81               870 	inc	sp
   0468 AA 82               871 	mov	r2,dpl
   046A AB 83               872 	mov	r3,dph
                            873 ;	../../../core/net/mac/csma.c:204: packetbuf_set_attr(PACKETBUF_ATTR_MAC_SEQNO, seqno++);
   046C 90s01r28            874 	mov	dptr,#_send_packet_seqno_1_1
   046F E0                  875 	movx	a,@dptr
   0470 FC                  876 	mov	r4,a
   0471 A3                  877 	inc	dptr
   0472 E0                  878 	movx	a,@dptr
   0473 FD                  879 	mov	r5,a
   0474 90s01r28            880 	mov	dptr,#_send_packet_seqno_1_1
   0477 74 01               881 	mov	a,#0x01
   0479 2C                  882 	add	a,r4
   047A F0                  883 	movx	@dptr,a
   047B E4                  884 	clr	a
   047C 3D                  885 	addc	a,r5
   047D A3                  886 	inc	dptr
   047E F0                  887 	movx	@dptr,a
   047F C0 02               888 	push	ar2
   0481 C0 03               889 	push	ar3
   0483 C0 04               890 	push	ar4
   0485 C0 05               891 	push	ar5
   0487 75 82 0A            892 	mov	dpl,#0x0A
   048A 12s00r00            893 	lcall	_packetbuf_set_attr
   048D 15 81               894 	dec	sp
   048F 15 81               895 	dec	sp
                            896 ;	../../../core/net/mac/csma.c:207: q = memb_alloc(&packet_memb);
   0491 90s00r00            897 	mov	dptr,#_packet_memb
   0494 75 F0 00            898 	mov	b,#0x00
   0497 12s00r00            899 	lcall	_memb_alloc
   049A AC 82               900 	mov	r4,dpl
   049C AD 83               901 	mov	r5,dph
   049E AE F0               902 	mov	r6,b
   04A0 D0 03               903 	pop	ar3
   04A2 D0 02               904 	pop	ar2
   04A4 A8*00               905 	mov	r0,_bp
   04A6 08                  906 	inc	r0
   04A7 A6 04               907 	mov	@r0,ar4
   04A9 08                  908 	inc	r0
   04AA A6 05               909 	mov	@r0,ar5
   04AC 08                  910 	inc	r0
   04AD A6 06               911 	mov	@r0,ar6
                            912 ;	../../../core/net/mac/csma.c:208: if(q != NULL) {
   04AF A8*00               913 	mov	r0,_bp
   04B1 08                  914 	inc	r0
   04B2 E6                  915 	mov	a,@r0
   04B3 08                  916 	inc	r0
   04B4 46                  917 	orl	a,@r0
   04B5 08                  918 	inc	r0
   04B6 46                  919 	orl	a,@r0
   04B7 70 03               920 	jnz	00113$
   04B9 02s06r5D            921 	ljmp	00107$
   04BC                     922 00113$:
                            923 ;	../../../core/net/mac/csma.c:209: q->buf = queuebuf_new_from_packetbuf();
   04BC C0 02               924 	push	ar2
   04BE C0 03               925 	push	ar3
   04C0 A8*00               926 	mov	r0,_bp
   04C2 08                  927 	inc	r0
   04C3 74 03               928 	mov	a,#0x03
   04C5 26                  929 	add	a,@r0
   04C6 FF                  930 	mov	r7,a
   04C7 E4                  931 	clr	a
   04C8 08                  932 	inc	r0
   04C9 36                  933 	addc	a,@r0
   04CA FA                  934 	mov	r2,a
   04CB 08                  935 	inc	r0
   04CC 86 03               936 	mov	ar3,@r0
   04CE C0 02               937 	push	ar2
   04D0 C0 03               938 	push	ar3
   04D2 C0 07               939 	push	ar7
   04D4 12s00r00            940 	lcall	_queuebuf_new_from_packetbuf
   04D7 AC 82               941 	mov	r4,dpl
   04D9 AD 83               942 	mov	r5,dph
   04DB AE F0               943 	mov	r6,b
   04DD D0 07               944 	pop	ar7
   04DF D0 03               945 	pop	ar3
   04E1 D0 02               946 	pop	ar2
   04E3 8F 82               947 	mov	dpl,r7
   04E5 8A 83               948 	mov	dph,r2
   04E7 8B F0               949 	mov	b,r3
   04E9 EC                  950 	mov	a,r4
   04EA 12s00r00            951 	lcall	__gptrput
   04ED A3                  952 	inc	dptr
   04EE ED                  953 	mov	a,r5
   04EF 12s00r00            954 	lcall	__gptrput
   04F2 A3                  955 	inc	dptr
   04F3 EE                  956 	mov	a,r6
   04F4 12s00r00            957 	lcall	__gptrput
                            958 ;	../../../core/net/mac/csma.c:210: if(q != NULL) {
   04F7 D0 03               959 	pop	ar3
   04F9 D0 02               960 	pop	ar2
   04FB A8*00               961 	mov	r0,_bp
   04FD 08                  962 	inc	r0
   04FE E6                  963 	mov	a,@r0
   04FF 08                  964 	inc	r0
   0500 46                  965 	orl	a,@r0
   0501 08                  966 	inc	r0
   0502 46                  967 	orl	a,@r0
   0503 70 03               968 	jnz	00114$
   0505 02s06r38            969 	ljmp	00105$
   0508                     970 00114$:
                            971 ;	../../../core/net/mac/csma.c:211: if(packetbuf_attr(PACKETBUF_ATTR_MAX_MAC_TRANSMISSIONS) == 0) {
   0508 75 82 09            972 	mov	dpl,#0x09
   050B C0 02               973 	push	ar2
   050D C0 03               974 	push	ar3
   050F 12s00r00            975 	lcall	_packetbuf_attr
   0512 E5 82               976 	mov	a,dpl
   0514 85 83 F0            977 	mov	b,dph
   0517 D0 03               978 	pop	ar3
   0519 D0 02               979 	pop	ar2
   051B 45 F0               980 	orl	a,b
   051D 70 1B               981 	jnz	00102$
                            982 ;	../../../core/net/mac/csma.c:213: q->max_transmissions = CSMA_MAX_MAC_TRANSMISSIONS;
   051F A8*00               983 	mov	r0,_bp
   0521 08                  984 	inc	r0
   0522 74 21               985 	mov	a,#0x21
   0524 26                  986 	add	a,@r0
   0525 FC                  987 	mov	r4,a
   0526 E4                  988 	clr	a
   0527 08                  989 	inc	r0
   0528 36                  990 	addc	a,@r0
   0529 FD                  991 	mov	r5,a
   052A 08                  992 	inc	r0
   052B 86 06               993 	mov	ar6,@r0
   052D 8C 82               994 	mov	dpl,r4
   052F 8D 83               995 	mov	dph,r5
   0531 8E F0               996 	mov	b,r6
   0533 74 01               997 	mov	a,#0x01
   0535 12s00r00            998 	lcall	__gptrput
   0538 80 38               999 	sjmp	00103$
   053A                    1000 00102$:
                           1001 ;	../../../core/net/mac/csma.c:215: q->max_transmissions =
   053A C0 02              1002 	push	ar2
   053C C0 03              1003 	push	ar3
   053E A8*00              1004 	mov	r0,_bp
   0540 08                 1005 	inc	r0
   0541 74 21              1006 	mov	a,#0x21
   0543 26                 1007 	add	a,@r0
   0544 FC                 1008 	mov	r4,a
   0545 E4                 1009 	clr	a
   0546 08                 1010 	inc	r0
   0547 36                 1011 	addc	a,@r0
   0548 FD                 1012 	mov	r5,a
   0549 08                 1013 	inc	r0
   054A 86 06              1014 	mov	ar6,@r0
                           1015 ;	../../../core/net/mac/csma.c:216: packetbuf_attr(PACKETBUF_ATTR_MAX_MAC_TRANSMISSIONS);
   054C 75 82 09           1016 	mov	dpl,#0x09
   054F C0 03              1017 	push	ar3
   0551 C0 04              1018 	push	ar4
   0553 C0 05              1019 	push	ar5
   0555 C0 06              1020 	push	ar6
   0557 12s00r00           1021 	lcall	_packetbuf_attr
   055A AF 82              1022 	mov	r7,dpl
   055C D0 06              1023 	pop	ar6
   055E D0 05              1024 	pop	ar5
   0560 D0 04              1025 	pop	ar4
   0562 D0 03              1026 	pop	ar3
   0564 8C 82              1027 	mov	dpl,r4
   0566 8D 83              1028 	mov	dph,r5
   0568 8E F0              1029 	mov	b,r6
   056A EF                 1030 	mov	a,r7
   056B 12s00r00           1031 	lcall	__gptrput
                           1032 ;	../../../core/net/mac/csma.c:229: NETSTACK_RDC.send(sent, ptr);
   056E D0 03              1033 	pop	ar3
   0570 D0 02              1034 	pop	ar2
                           1035 ;	../../../core/net/mac/csma.c:216: packetbuf_attr(PACKETBUF_ATTR_MAX_MAC_TRANSMISSIONS);
   0572                    1036 00103$:
                           1037 ;	../../../core/net/mac/csma.c:218: q->transmissions = 0;
   0572 A8*00              1038 	mov	r0,_bp
   0574 08                 1039 	inc	r0
   0575 74 20              1040 	mov	a,#0x20
   0577 26                 1041 	add	a,@r0
   0578 FC                 1042 	mov	r4,a
   0579 E4                 1043 	clr	a
   057A 08                 1044 	inc	r0
   057B 36                 1045 	addc	a,@r0
   057C FD                 1046 	mov	r5,a
   057D 08                 1047 	inc	r0
   057E 86 06              1048 	mov	ar6,@r0
   0580 8C 82              1049 	mov	dpl,r4
   0582 8D 83              1050 	mov	dph,r5
   0584 8E F0              1051 	mov	b,r6
   0586 E4                 1052 	clr	a
   0587 12s00r00           1053 	lcall	__gptrput
                           1054 ;	../../../core/net/mac/csma.c:219: q->collisions = 0;
   058A A8*00              1055 	mov	r0,_bp
   058C 08                 1056 	inc	r0
   058D 74 22              1057 	mov	a,#0x22
   058F 26                 1058 	add	a,@r0
   0590 FC                 1059 	mov	r4,a
   0591 E4                 1060 	clr	a
   0592 08                 1061 	inc	r0
   0593 36                 1062 	addc	a,@r0
   0594 FD                 1063 	mov	r5,a
   0595 08                 1064 	inc	r0
   0596 86 06              1065 	mov	ar6,@r0
   0598 8C 82              1066 	mov	dpl,r4
   059A 8D 83              1067 	mov	dph,r5
   059C 8E F0              1068 	mov	b,r6
   059E E4                 1069 	clr	a
   059F 12s00r00           1070 	lcall	__gptrput
                           1071 ;	../../../core/net/mac/csma.c:220: q->deferrals = 0;
   05A2 A8*00              1072 	mov	r0,_bp
   05A4 08                 1073 	inc	r0
   05A5 74 23              1074 	mov	a,#0x23
   05A7 26                 1075 	add	a,@r0
   05A8 FC                 1076 	mov	r4,a
   05A9 E4                 1077 	clr	a
   05AA 08                 1078 	inc	r0
   05AB 36                 1079 	addc	a,@r0
   05AC FD                 1080 	mov	r5,a
   05AD 08                 1081 	inc	r0
   05AE 86 06              1082 	mov	ar6,@r0
   05B0 8C 82              1083 	mov	dpl,r4
   05B2 8D 83              1084 	mov	dph,r5
   05B4 8E F0              1085 	mov	b,r6
   05B6 E4                 1086 	clr	a
   05B7 12s00r00           1087 	lcall	__gptrput
                           1088 ;	../../../core/net/mac/csma.c:221: q->sent = sent;
   05BA A8*00              1089 	mov	r0,_bp
   05BC 08                 1090 	inc	r0
   05BD 74 1B              1091 	mov	a,#0x1B
   05BF 26                 1092 	add	a,@r0
   05C0 FC                 1093 	mov	r4,a
   05C1 E4                 1094 	clr	a
   05C2 08                 1095 	inc	r0
   05C3 36                 1096 	addc	a,@r0
   05C4 FD                 1097 	mov	r5,a
   05C5 08                 1098 	inc	r0
   05C6 86 06              1099 	mov	ar6,@r0
   05C8 8C 82              1100 	mov	dpl,r4
   05CA 8D 83              1101 	mov	dph,r5
   05CC 8E F0              1102 	mov	b,r6
   05CE EA                 1103 	mov	a,r2
   05CF 12s00r00           1104 	lcall	__gptrput
   05D2 A3                 1105 	inc	dptr
   05D3 EB                 1106 	mov	a,r3
   05D4 12s00r00           1107 	lcall	__gptrput
                           1108 ;	../../../core/net/mac/csma.c:222: q->cptr = ptr;
   05D7 A8*00              1109 	mov	r0,_bp
   05D9 08                 1110 	inc	r0
   05DA 74 1D              1111 	mov	a,#0x1D
   05DC 26                 1112 	add	a,@r0
   05DD FC                 1113 	mov	r4,a
   05DE E4                 1114 	clr	a
   05DF 08                 1115 	inc	r0
   05E0 36                 1116 	addc	a,@r0
   05E1 FD                 1117 	mov	r5,a
   05E2 08                 1118 	inc	r0
   05E3 86 06              1119 	mov	ar6,@r0
   05E5 8C 82              1120 	mov	dpl,r4
   05E7 8D 83              1121 	mov	dph,r5
   05E9 8E F0              1122 	mov	b,r6
   05EB E5*00              1123 	mov	a,_bp
   05ED 24 FB              1124 	add	a,#0xfb
   05EF F8                 1125 	mov	r0,a
   05F0 E6                 1126 	mov	a,@r0
   05F1 12s00r00           1127 	lcall	__gptrput
   05F4 A3                 1128 	inc	dptr
   05F5 08                 1129 	inc	r0
   05F6 E6                 1130 	mov	a,@r0
   05F7 12s00r00           1131 	lcall	__gptrput
   05FA A3                 1132 	inc	dptr
   05FB 08                 1133 	inc	r0
   05FC E6                 1134 	mov	a,@r0
   05FD 12s00r00           1135 	lcall	__gptrput
                           1136 ;	../../../core/net/mac/csma.c:223: NETSTACK_RDC.send(packet_sent, q);
   0600 90s00r05           1137 	mov	dptr,#(_nullrdc_driver + 0x0005)
   0603 E4                 1138 	clr	a
   0604 93                 1139 	movc	a,@a+dptr
   0605 FC                 1140 	mov	r4,a
   0606 A3                 1141 	inc	dptr
   0607 E4                 1142 	clr	a
   0608 93                 1143 	movc	a,@a+dptr
   0609 FD                 1144 	mov	r5,a
   060A C0 04              1145 	push	ar4
   060C C0 05              1146 	push	ar5
   060E A8*00              1147 	mov	r0,_bp
   0610 08                 1148 	inc	r0
   0611 E6                 1149 	mov	a,@r0
   0612 C0 E0              1150 	push	acc
   0614 08                 1151 	inc	r0
   0615 E6                 1152 	mov	a,@r0
   0616 C0 E0              1153 	push	acc
   0618 08                 1154 	inc	r0
   0619 E6                 1155 	mov	a,@r0
   061A C0 E0              1156 	push	acc
   061C 74r2C              1157 	mov	a,#00116$
   061E C0 E0              1158 	push	acc
   0620 74s06              1159 	mov	a,#(00116$ >> 8)
   0622 C0 E0              1160 	push	acc
   0624 C0 04              1161 	push	ar4
   0626 C0 05              1162 	push	ar5
   0628 90s00rD0           1163 	mov	dptr,#_packet_sent
   062B 22                 1164 	ret
   062C                    1165 00116$:
   062C 15 81              1166 	dec	sp
   062E 15 81              1167 	dec	sp
   0630 15 81              1168 	dec	sp
   0632 D0 05              1169 	pop	ar5
   0634 D0 04              1170 	pop	ar4
                           1171 ;	../../../core/net/mac/csma.c:224: return;
   0636 80 5E              1172 	sjmp	00108$
   0638                    1173 00105$:
                           1174 ;	../../../core/net/mac/csma.c:226: memb_free(&packet_memb, q);
   0638 C0 02              1175 	push	ar2
   063A C0 03              1176 	push	ar3
   063C A8*00              1177 	mov	r0,_bp
   063E 08                 1178 	inc	r0
   063F E6                 1179 	mov	a,@r0
   0640 C0 E0              1180 	push	acc
   0642 08                 1181 	inc	r0
   0643 E6                 1182 	mov	a,@r0
   0644 C0 E0              1183 	push	acc
   0646 08                 1184 	inc	r0
   0647 E6                 1185 	mov	a,@r0
   0648 C0 E0              1186 	push	acc
   064A 90s00r00           1187 	mov	dptr,#_packet_memb
   064D 75 F0 00           1188 	mov	b,#0x00
   0650 12s00r00           1189 	lcall	_memb_free
   0653 15 81              1190 	dec	sp
   0655 15 81              1191 	dec	sp
   0657 15 81              1192 	dec	sp
   0659 D0 03              1193 	pop	ar3
   065B D0 02              1194 	pop	ar2
   065D                    1195 00107$:
                           1196 ;	../../../core/net/mac/csma.c:229: NETSTACK_RDC.send(sent, ptr);
   065D 90s00r05           1197 	mov	dptr,#(_nullrdc_driver + 0x0005)
   0660 E4                 1198 	clr	a
   0661 93                 1199 	movc	a,@a+dptr
   0662 FC                 1200 	mov	r4,a
   0663 A3                 1201 	inc	dptr
   0664 E4                 1202 	clr	a
   0665 93                 1203 	movc	a,@a+dptr
   0666 FD                 1204 	mov	r5,a
   0667 C0 04              1205 	push	ar4
   0669 C0 05              1206 	push	ar5
   066B E5*00              1207 	mov	a,_bp
   066D 24 FB              1208 	add	a,#0xfb
   066F F8                 1209 	mov	r0,a
   0670 E6                 1210 	mov	a,@r0
   0671 C0 E0              1211 	push	acc
   0673 08                 1212 	inc	r0
   0674 E6                 1213 	mov	a,@r0
   0675 C0 E0              1214 	push	acc
   0677 08                 1215 	inc	r0
   0678 E6                 1216 	mov	a,@r0
   0679 C0 E0              1217 	push	acc
   067B 74r8C              1218 	mov	a,#00117$
   067D C0 E0              1219 	push	acc
   067F 74s06              1220 	mov	a,#(00117$ >> 8)
   0681 C0 E0              1221 	push	acc
   0683 C0 04              1222 	push	ar4
   0685 C0 05              1223 	push	ar5
   0687 8A 82              1224 	mov	dpl,r2
   0689 8B 83              1225 	mov	dph,r3
   068B 22                 1226 	ret
   068C                    1227 00117$:
   068C 15 81              1228 	dec	sp
   068E 15 81              1229 	dec	sp
   0690 15 81              1230 	dec	sp
   0692 D0 05              1231 	pop	ar5
   0694 D0 04              1232 	pop	ar4
   0696                    1233 00108$:
   0696 85*00 81           1234 	mov	sp,_bp
   0699 D0*00              1235 	pop	_bp
   069B 22                 1236 	ret
                           1237 ;------------------------------------------------------------
                           1238 ;Allocation info for local variables in function 'input_packet'
                           1239 ;------------------------------------------------------------
                           1240 ;------------------------------------------------------------
                           1241 ;	../../../core/net/mac/csma.c:233: input_packet(void)
                           1242 ;	-----------------------------------------
                           1243 ;	 function input_packet
                           1244 ;	-----------------------------------------
   069C                    1245 _input_packet:
                           1246 ;	../../../core/net/mac/csma.c:235: NETSTACK_NETWORK.input();
   069C 90s00r05           1247 	mov	dptr,#(_rime_driver + 0x0005)
   069F E4                 1248 	clr	a
   06A0 93                 1249 	movc	a,@a+dptr
   06A1 FA                 1250 	mov	r2,a
   06A2 A3                 1251 	inc	dptr
   06A3 E4                 1252 	clr	a
   06A4 93                 1253 	movc	a,@a+dptr
   06A5 FB                 1254 	mov	r3,a
   06A6 C0 02              1255 	push	ar2
   06A8 C0 03              1256 	push	ar3
   06AA 8A 82              1257 	mov	dpl,r2
   06AC 8B 83              1258 	mov	dph,r3
   06AE 12s00r00           1259 	lcall	__sdcc_call_dptr
   06B1 D0 03              1260 	pop	ar3
   06B3 D0 02              1261 	pop	ar2
   06B5 22                 1262 	ret
                           1263 ;------------------------------------------------------------
                           1264 ;Allocation info for local variables in function 'on'
                           1265 ;------------------------------------------------------------
                           1266 ;------------------------------------------------------------
                           1267 ;	../../../core/net/mac/csma.c:239: on(void)
                           1268 ;	-----------------------------------------
                           1269 ;	 function on
                           1270 ;	-----------------------------------------
   06B6                    1271 _on:
                           1272 ;	../../../core/net/mac/csma.c:241: return NETSTACK_RDC.on();
   06B6 90s00r09           1273 	mov	dptr,#(_nullrdc_driver + 0x0009)
   06B9 E4                 1274 	clr	a
   06BA 93                 1275 	movc	a,@a+dptr
   06BB FA                 1276 	mov	r2,a
   06BC A3                 1277 	inc	dptr
   06BD E4                 1278 	clr	a
   06BE 93                 1279 	movc	a,@a+dptr
   06BF FB                 1280 	mov	r3,a
   06C0 8A 82              1281 	mov	dpl,r2
   06C2 8B 83              1282 	mov	dph,r3
   06C4 02s00r00           1283 	ljmp	__sdcc_call_dptr
                           1284 ;------------------------------------------------------------
                           1285 ;Allocation info for local variables in function 'off'
                           1286 ;------------------------------------------------------------
                           1287 ;keep_radio_on             Allocated to registers r2 r3 
                           1288 ;------------------------------------------------------------
                           1289 ;	../../../core/net/mac/csma.c:245: off(int keep_radio_on)
                           1290 ;	-----------------------------------------
                           1291 ;	 function off
                           1292 ;	-----------------------------------------
   06C7                    1293 _off:
   06C7 AA 82              1294 	mov	r2,dpl
   06C9 AB 83              1295 	mov	r3,dph
                           1296 ;	../../../core/net/mac/csma.c:247: return NETSTACK_RDC.off(keep_radio_on);
   06CB 90s00r0B           1297 	mov	dptr,#(_nullrdc_driver + 0x000b)
   06CE E4                 1298 	clr	a
   06CF 93                 1299 	movc	a,@a+dptr
   06D0 FC                 1300 	mov	r4,a
   06D1 A3                 1301 	inc	dptr
   06D2 E4                 1302 	clr	a
   06D3 93                 1303 	movc	a,@a+dptr
   06D4 FD                 1304 	mov	r5,a
   06D5 74rE6              1305 	mov	a,#00103$
   06D7 C0 E0              1306 	push	acc
   06D9 74s06              1307 	mov	a,#(00103$ >> 8)
   06DB C0 E0              1308 	push	acc
   06DD C0 04              1309 	push	ar4
   06DF C0 05              1310 	push	ar5
   06E1 8A 82              1311 	mov	dpl,r2
   06E3 8B 83              1312 	mov	dph,r3
   06E5 22                 1313 	ret
   06E6                    1314 00103$:
   06E6 22                 1315 	ret
                           1316 ;------------------------------------------------------------
                           1317 ;Allocation info for local variables in function 'channel_check_interval'
                           1318 ;------------------------------------------------------------
                           1319 ;------------------------------------------------------------
                           1320 ;	../../../core/net/mac/csma.c:251: channel_check_interval(void)
                           1321 ;	-----------------------------------------
                           1322 ;	 function channel_check_interval
                           1323 ;	-----------------------------------------
   06E7                    1324 _channel_check_interval:
                           1325 ;	../../../core/net/mac/csma.c:253: if(NETSTACK_RDC.channel_check_interval) {
   06E7 90s00r0D           1326 	mov	dptr,#(_nullrdc_driver + 0x000d)
   06EA E4                 1327 	clr	a
   06EB 93                 1328 	movc	a,@a+dptr
   06EC FA                 1329 	mov	r2,a
   06ED A3                 1330 	inc	dptr
   06EE E4                 1331 	clr	a
   06EF 93                 1332 	movc	a,@a+dptr
   06F0 FB                 1333 	mov	r3,a
   06F1 4A                 1334 	orl	a,r2
   06F2 60 07              1335 	jz	00102$
                           1336 ;	../../../core/net/mac/csma.c:254: return NETSTACK_RDC.channel_check_interval();
   06F4 8A 82              1337 	mov	dpl,r2
   06F6 8B 83              1338 	mov	dph,r3
                           1339 ;	../../../core/net/mac/csma.c:256: return 0;
   06F8 02s00r00           1340 	ljmp	__sdcc_call_dptr
   06FB                    1341 00102$:
   06FB 90 00 00           1342 	mov	dptr,#0x0000
   06FE 22                 1343 	ret
                           1344 ;------------------------------------------------------------
                           1345 ;Allocation info for local variables in function 'init'
                           1346 ;------------------------------------------------------------
                           1347 ;------------------------------------------------------------
                           1348 ;	../../../core/net/mac/csma.c:260: init(void)
                           1349 ;	-----------------------------------------
                           1350 ;	 function init
                           1351 ;	-----------------------------------------
   06FF                    1352 _init:
                           1353 ;	../../../core/net/mac/csma.c:262: memb_init(&packet_memb);
   06FF 90s00r00           1354 	mov	dptr,#_packet_memb
   0702 75 F0 00           1355 	mov	b,#0x00
   0705 02s00r00           1356 	ljmp	_memb_init
                           1357 	.area CSEG    (CODE)
                           1358 	.area CONST   (CODE)
   0000                    1359 _csma_driver:
   0000r0Fs00 80           1360 	.byte _str_0,(_str_0 >> 8),#0x80
   0003rFFs06              1361 	.byte _init,(_init >> 8)
   0005r5Ds04              1362 	.byte _send_packet,(_send_packet >> 8)
   0007r9Cs06              1363 	.byte _input_packet,(_input_packet >> 8)
   0009rB6s06              1364 	.byte _on,(_on >> 8)
   000BrC7s06              1365 	.byte _off,(_off >> 8)
   000DrE7s06              1366 	.byte _channel_check_interval,(_channel_check_interval >> 8)
   000F                    1367 _str_0:
   000F 43 53 4D 41        1368 	.ascii "CSMA"
   0013 00                 1369 	.db 0x00
                           1370 	.area XINIT   (CODE)
   0000                    1371 __xinit__packet_memb:
   0000 24 00              1372 	.byte #0x24,#0x00	; 36
   0002 08 00              1373 	.byte #0x08,#0x00	; 8
   0004r00s00 00           1374 	.byte _packet_memb_memb_count,(_packet_memb_memb_count >> 8),#0x00
   0007r08s00 00           1375 	.byte _packet_memb_memb_mem,(_packet_memb_memb_mem >> 8),#0x00
                           1376 	.area CABS    (ABS,CODE)
