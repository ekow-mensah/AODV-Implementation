                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:25:53 2018
                              5 ;--------------------------------------------------------
                              6 	.module lpp
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _lpp_driver
                             13 	.globl _IRCON2_P2IF
                             14 	.globl _IRCON2_UTX0IF
                             15 	.globl _IRCON2_UTX1IF
                             16 	.globl _IRCON2_P1IF
                             17 	.globl _IRCON2_WDTIF
                             18 	.globl _CY
                             19 	.globl _AC
                             20 	.globl _F0
                             21 	.globl _RS1
                             22 	.globl _RS0
                             23 	.globl _OV
                             24 	.globl _F1
                             25 	.globl _P
                             26 	.globl _IRCON_DMAIF
                             27 	.globl _IRCON_T1IF
                             28 	.globl _IRCON_T2IF
                             29 	.globl _IRCON_T3IF
                             30 	.globl _IRCON_T4IF
                             31 	.globl _IRCON_P0IF
                             32 	.globl _IRCON_STIF
                             33 	.globl _IEN1_DMAIE
                             34 	.globl _IEN1_T1IE
                             35 	.globl _IEN1_T2IE
                             36 	.globl _IEN1_T3IE
                             37 	.globl _IEN1_T4IE
                             38 	.globl _IEN1_P0IE
                             39 	.globl _IEN0_RFERRIE
                             40 	.globl _IEN0_ADCIE
                             41 	.globl _IEN0_URX0IE
                             42 	.globl _IEN0_URX1IE
                             43 	.globl _IEN0_ENCIE
                             44 	.globl _IEN0_STIE
                             45 	.globl _IEN0_EA
                             46 	.globl _EA
                             47 	.globl _P2_4
                             48 	.globl _P2_3
                             49 	.globl _P2_2
                             50 	.globl _P2_1
                             51 	.globl _P2_0
                             52 	.globl _S0CON_ENCIF_0
                             53 	.globl _S0CON_ENCIF_1
                             54 	.globl _P1_7
                             55 	.globl _P1_6
                             56 	.globl _P1_5
                             57 	.globl _P1_4
                             58 	.globl _P1_3
                             59 	.globl _P1_2
                             60 	.globl _P1_1
                             61 	.globl _P1_0
                             62 	.globl _TCON_IT0
                             63 	.globl _TCON_RFERRIF
                             64 	.globl _TCON_IT1
                             65 	.globl _TCON_URX0IF
                             66 	.globl _TCON_ADCIF
                             67 	.globl _TCON_URX1IF
                             68 	.globl _P0_0
                             69 	.globl _P0_1
                             70 	.globl _P0_2
                             71 	.globl _P0_3
                             72 	.globl _P0_4
                             73 	.globl _P0_5
                             74 	.globl _P0_6
                             75 	.globl _P0_7
                             76 	.globl _P2DIR
                             77 	.globl _P1DIR
                             78 	.globl _P0DIR
                             79 	.globl _U1GCR
                             80 	.globl _U1UCR
                             81 	.globl _U1BAUD
                             82 	.globl _U1BUF
                             83 	.globl _U1CSR
                             84 	.globl _P2INP
                             85 	.globl _P1INP
                             86 	.globl _P2SEL
                             87 	.globl _P1SEL
                             88 	.globl _P0SEL
                             89 	.globl _ADCCFG
                             90 	.globl _PERCFG
                             91 	.globl _B
                             92 	.globl _T4CC1
                             93 	.globl _T4CCTL1
                             94 	.globl _T4CC0
                             95 	.globl _T4CCTL0
                             96 	.globl _T4CTL
                             97 	.globl _T4CNT
                             98 	.globl _RFIF
                             99 	.globl _IRCON2
                            100 	.globl _T1CCTL2
                            101 	.globl _T1CCTL1
                            102 	.globl _T1CCTL0
                            103 	.globl _T1CTL
                            104 	.globl _T1CNTH
                            105 	.globl _T1CNTL
                            106 	.globl _RFST
                            107 	.globl _ACC
                            108 	.globl _T1CC2H
                            109 	.globl _T1CC2L
                            110 	.globl _T1CC1H
                            111 	.globl _T1CC1L
                            112 	.globl _T1CC0H
                            113 	.globl _T1CC0L
                            114 	.globl _RFD
                            115 	.globl _TIMIF
                            116 	.globl _DMAREQ
                            117 	.globl _DMAARM
                            118 	.globl _DMA0CFGH
                            119 	.globl _DMA0CFGL
                            120 	.globl _DMA1CFGH
                            121 	.globl _DMA1CFGL
                            122 	.globl _DMAIRQ
                            123 	.globl _PSW
                            124 	.globl _T3CC1
                            125 	.globl _T3CCTL1
                            126 	.globl _T3CC0
                            127 	.globl _T3CCTL0
                            128 	.globl _T3CTL
                            129 	.globl _T3CNT
                            130 	.globl _WDCTL
                            131 	.globl _T2CON
                            132 	.globl _MEMCTR
                            133 	.globl _CLKCON
                            134 	.globl _U0GCR
                            135 	.globl _U0UCR
                            136 	.globl _T2CNF
                            137 	.globl _U0BAUD
                            138 	.globl _U0BUF
                            139 	.globl _IRCON
                            140 	.globl _SLEEP
                            141 	.globl _RNDH
                            142 	.globl _RNDL
                            143 	.globl _ADCH
                            144 	.globl _ADCL
                            145 	.globl _IP1
                            146 	.globl _IEN1
                            147 	.globl _RCCTL
                            148 	.globl _ADCCON3
                            149 	.globl _ADCCON2
                            150 	.globl _ADCCON1
                            151 	.globl _ENCCS
                            152 	.globl _ENCDO
                            153 	.globl _ENCDI
                            154 	.globl _FWDATA
                            155 	.globl _FCTL
                            156 	.globl _FADDRH
                            157 	.globl _FADDRL
                            158 	.globl _FWT
                            159 	.globl _IP0
                            160 	.globl _IEN0
                            161 	.globl _IE
                            162 	.globl _T2THD
                            163 	.globl _T2TLD
                            164 	.globl _T2CAPHPH
                            165 	.globl _T2CAPLPL
                            166 	.globl _T2OF2
                            167 	.globl _T2OF1
                            168 	.globl _T2OF0
                            169 	.globl _P2
                            170 	.globl _PSBANK
                            171 	.globl _FMAP
                            172 	.globl _T2PEROF2
                            173 	.globl _T2PEROF1
                            174 	.globl _T2PEROF0
                            175 	.globl _S1CON
                            176 	.globl _IEN2
                            177 	.globl _HSRC
                            178 	.globl _S0CON
                            179 	.globl _ST2
                            180 	.globl _ST1
                            181 	.globl _ST0
                            182 	.globl _T2CMP
                            183 	.globl __XPAGE
                            184 	.globl _DPS
                            185 	.globl _RFIM
                            186 	.globl _P1
                            187 	.globl _P0INP
                            188 	.globl _P1IEN
                            189 	.globl _PICTL
                            190 	.globl _P2IFG
                            191 	.globl _P1IFG
                            192 	.globl _P0IFG
                            193 	.globl _TCON
                            194 	.globl _PCON
                            195 	.globl _U0CSR
                            196 	.globl _DPH1
                            197 	.globl _DPL1
                            198 	.globl _DPH0
                            199 	.globl _DPL0
                            200 	.globl _SP
                            201 	.globl _P0
                            202 	.globl _ADC_SHADOW
                            203 	.globl _U1BUF_SHADOW
                            204 	.globl _RFD_SHADOW
                            205 	.globl _U0BUF_SHADOW
                            206 	.globl _RFSTATUS
                            207 	.globl _CHIPID
                            208 	.globl _CHVER
                            209 	.globl _FSMTC1
                            210 	.globl _RXFIFOCNT
                            211 	.globl _IOCFG3
                            212 	.globl _IOCFG2
                            213 	.globl _IOCFG1
                            214 	.globl _IOCFG0
                            215 	.globl _SHORTADDRL
                            216 	.globl _SHORTADDRH
                            217 	.globl _PANIDL
                            218 	.globl _PANIDH
                            219 	.globl _IEEE_ADDR7
                            220 	.globl _IEEE_ADDR6
                            221 	.globl _IEEE_ADDR5
                            222 	.globl _IEEE_ADDR4
                            223 	.globl _IEEE_ADDR3
                            224 	.globl _IEEE_ADDR2
                            225 	.globl _IEEE_ADDR1
                            226 	.globl _IEEE_ADDR0
                            227 	.globl _DACTSTL
                            228 	.globl _DACTSTH
                            229 	.globl _ADCTSTL
                            230 	.globl _ADCTSTH
                            231 	.globl _FSMSTATE
                            232 	.globl _AGCCTRLL
                            233 	.globl _AGCCTRLH
                            234 	.globl _MANORL
                            235 	.globl _MANORH
                            236 	.globl _MANANDL
                            237 	.globl _MANANDH
                            238 	.globl _FSMTCL
                            239 	.globl _FSMTCH
                            240 	.globl _RFPWR
                            241 	.globl _CSPT
                            242 	.globl _CSPCTRL
                            243 	.globl _CSPZ
                            244 	.globl _CSPY
                            245 	.globl _CSPX
                            246 	.globl _FSCTRLL
                            247 	.globl _FSCTRLH
                            248 	.globl _RXCTRL1L
                            249 	.globl _RXCTRL1H
                            250 	.globl _RXCTRL0L
                            251 	.globl _RXCTRL0H
                            252 	.globl _TXCTRLL
                            253 	.globl _TXCTRLH
                            254 	.globl _SYNCWORDL
                            255 	.globl _SYNCWORDH
                            256 	.globl _RSSIL
                            257 	.globl _RSSIH
                            258 	.globl _MDMCTRL1L
                            259 	.globl _MDMCTRL1H
                            260 	.globl _MDMCTRL0L
                            261 	.globl _MDMCTRL0H
                            262 ;--------------------------------------------------------
                            263 ; special function registers
                            264 ;--------------------------------------------------------
                            265 	.area RSEG    (ABS,DATA)
   0000                     266 	.org 0x0000
                    0080    267 _P0	=	0x0080
                    0081    268 _SP	=	0x0081
                    0082    269 _DPL0	=	0x0082
                    0083    270 _DPH0	=	0x0083
                    0084    271 _DPL1	=	0x0084
                    0085    272 _DPH1	=	0x0085
                    0086    273 _U0CSR	=	0x0086
                    0087    274 _PCON	=	0x0087
                    0088    275 _TCON	=	0x0088
                    0089    276 _P0IFG	=	0x0089
                    008A    277 _P1IFG	=	0x008a
                    008B    278 _P2IFG	=	0x008b
                    008C    279 _PICTL	=	0x008c
                    008D    280 _P1IEN	=	0x008d
                    008F    281 _P0INP	=	0x008f
                    0090    282 _P1	=	0x0090
                    0091    283 _RFIM	=	0x0091
                    0092    284 _DPS	=	0x0092
                    0093    285 __XPAGE	=	0x0093
                    0094    286 _T2CMP	=	0x0094
                    0095    287 _ST0	=	0x0095
                    0096    288 _ST1	=	0x0096
                    0097    289 _ST2	=	0x0097
                    0098    290 _S0CON	=	0x0098
                    0099    291 _HSRC	=	0x0099
                    009A    292 _IEN2	=	0x009a
                    009B    293 _S1CON	=	0x009b
                    009C    294 _T2PEROF0	=	0x009c
                    009D    295 _T2PEROF1	=	0x009d
                    009E    296 _T2PEROF2	=	0x009e
                    009F    297 _FMAP	=	0x009f
                    009F    298 _PSBANK	=	0x009f
                    00A0    299 _P2	=	0x00a0
                    00A1    300 _T2OF0	=	0x00a1
                    00A2    301 _T2OF1	=	0x00a2
                    00A3    302 _T2OF2	=	0x00a3
                    00A4    303 _T2CAPLPL	=	0x00a4
                    00A5    304 _T2CAPHPH	=	0x00a5
                    00A6    305 _T2TLD	=	0x00a6
                    00A7    306 _T2THD	=	0x00a7
                    00A8    307 _IE	=	0x00a8
                    00A8    308 _IEN0	=	0x00a8
                    00A9    309 _IP0	=	0x00a9
                    00AB    310 _FWT	=	0x00ab
                    00AC    311 _FADDRL	=	0x00ac
                    00AD    312 _FADDRH	=	0x00ad
                    00AE    313 _FCTL	=	0x00ae
                    00AF    314 _FWDATA	=	0x00af
                    00B1    315 _ENCDI	=	0x00b1
                    00B2    316 _ENCDO	=	0x00b2
                    00B3    317 _ENCCS	=	0x00b3
                    00B4    318 _ADCCON1	=	0x00b4
                    00B5    319 _ADCCON2	=	0x00b5
                    00B6    320 _ADCCON3	=	0x00b6
                    00B7    321 _RCCTL	=	0x00b7
                    00B8    322 _IEN1	=	0x00b8
                    00B9    323 _IP1	=	0x00b9
                    00BA    324 _ADCL	=	0x00ba
                    00BB    325 _ADCH	=	0x00bb
                    00BC    326 _RNDL	=	0x00bc
                    00BD    327 _RNDH	=	0x00bd
                    00BE    328 _SLEEP	=	0x00be
                    00C0    329 _IRCON	=	0x00c0
                    00C1    330 _U0BUF	=	0x00c1
                    00C2    331 _U0BAUD	=	0x00c2
                    00C3    332 _T2CNF	=	0x00c3
                    00C4    333 _U0UCR	=	0x00c4
                    00C5    334 _U0GCR	=	0x00c5
                    00C6    335 _CLKCON	=	0x00c6
                    00C7    336 _MEMCTR	=	0x00c7
                    00C8    337 _T2CON	=	0x00c8
                    00C9    338 _WDCTL	=	0x00c9
                    00CA    339 _T3CNT	=	0x00ca
                    00CB    340 _T3CTL	=	0x00cb
                    00CC    341 _T3CCTL0	=	0x00cc
                    00CD    342 _T3CC0	=	0x00cd
                    00CE    343 _T3CCTL1	=	0x00ce
                    00CF    344 _T3CC1	=	0x00cf
                    00D0    345 _PSW	=	0x00d0
                    00D1    346 _DMAIRQ	=	0x00d1
                    00D2    347 _DMA1CFGL	=	0x00d2
                    00D3    348 _DMA1CFGH	=	0x00d3
                    00D4    349 _DMA0CFGL	=	0x00d4
                    00D5    350 _DMA0CFGH	=	0x00d5
                    00D6    351 _DMAARM	=	0x00d6
                    00D7    352 _DMAREQ	=	0x00d7
                    00D8    353 _TIMIF	=	0x00d8
                    00D9    354 _RFD	=	0x00d9
                    00DA    355 _T1CC0L	=	0x00da
                    00DB    356 _T1CC0H	=	0x00db
                    00DC    357 _T1CC1L	=	0x00dc
                    00DD    358 _T1CC1H	=	0x00dd
                    00DE    359 _T1CC2L	=	0x00de
                    00DF    360 _T1CC2H	=	0x00df
                    00E0    361 _ACC	=	0x00e0
                    00E1    362 _RFST	=	0x00e1
                    00E2    363 _T1CNTL	=	0x00e2
                    00E3    364 _T1CNTH	=	0x00e3
                    00E4    365 _T1CTL	=	0x00e4
                    00E5    366 _T1CCTL0	=	0x00e5
                    00E6    367 _T1CCTL1	=	0x00e6
                    00E7    368 _T1CCTL2	=	0x00e7
                    00E8    369 _IRCON2	=	0x00e8
                    00E9    370 _RFIF	=	0x00e9
                    00EA    371 _T4CNT	=	0x00ea
                    00EB    372 _T4CTL	=	0x00eb
                    00EC    373 _T4CCTL0	=	0x00ec
                    00ED    374 _T4CC0	=	0x00ed
                    00EE    375 _T4CCTL1	=	0x00ee
                    00EF    376 _T4CC1	=	0x00ef
                    00F0    377 _B	=	0x00f0
                    00F1    378 _PERCFG	=	0x00f1
                    00F2    379 _ADCCFG	=	0x00f2
                    00F3    380 _P0SEL	=	0x00f3
                    00F4    381 _P1SEL	=	0x00f4
                    00F5    382 _P2SEL	=	0x00f5
                    00F6    383 _P1INP	=	0x00f6
                    00F7    384 _P2INP	=	0x00f7
                    00F8    385 _U1CSR	=	0x00f8
                    00F9    386 _U1BUF	=	0x00f9
                    00FA    387 _U1BAUD	=	0x00fa
                    00FB    388 _U1UCR	=	0x00fb
                    00FC    389 _U1GCR	=	0x00fc
                    00FD    390 _P0DIR	=	0x00fd
                    00FE    391 _P1DIR	=	0x00fe
                    00FF    392 _P2DIR	=	0x00ff
                            393 ;--------------------------------------------------------
                            394 ; special function bits
                            395 ;--------------------------------------------------------
                            396 	.area RSEG    (ABS,DATA)
   0000                     397 	.org 0x0000
                    0087    398 _P0_7	=	0x0087
                    0086    399 _P0_6	=	0x0086
                    0085    400 _P0_5	=	0x0085
                    0084    401 _P0_4	=	0x0084
                    0083    402 _P0_3	=	0x0083
                    0082    403 _P0_2	=	0x0082
                    0081    404 _P0_1	=	0x0081
                    0080    405 _P0_0	=	0x0080
                    008F    406 _TCON_URX1IF	=	0x008f
                    008D    407 _TCON_ADCIF	=	0x008d
                    008B    408 _TCON_URX0IF	=	0x008b
                    008A    409 _TCON_IT1	=	0x008a
                    0089    410 _TCON_RFERRIF	=	0x0089
                    0088    411 _TCON_IT0	=	0x0088
                    0090    412 _P1_0	=	0x0090
                    0091    413 _P1_1	=	0x0091
                    0092    414 _P1_2	=	0x0092
                    0093    415 _P1_3	=	0x0093
                    0094    416 _P1_4	=	0x0094
                    0095    417 _P1_5	=	0x0095
                    0096    418 _P1_6	=	0x0096
                    0097    419 _P1_7	=	0x0097
                    0099    420 _S0CON_ENCIF_1	=	0x0099
                    0098    421 _S0CON_ENCIF_0	=	0x0098
                    00A0    422 _P2_0	=	0x00a0
                    00A1    423 _P2_1	=	0x00a1
                    00A2    424 _P2_2	=	0x00a2
                    00A3    425 _P2_3	=	0x00a3
                    00A4    426 _P2_4	=	0x00a4
                    00AF    427 _EA	=	0x00af
                    00AF    428 _IEN0_EA	=	0x00af
                    00AD    429 _IEN0_STIE	=	0x00ad
                    00AC    430 _IEN0_ENCIE	=	0x00ac
                    00AB    431 _IEN0_URX1IE	=	0x00ab
                    00AA    432 _IEN0_URX0IE	=	0x00aa
                    00A9    433 _IEN0_ADCIE	=	0x00a9
                    00A8    434 _IEN0_RFERRIE	=	0x00a8
                    00BD    435 _IEN1_P0IE	=	0x00bd
                    00BC    436 _IEN1_T4IE	=	0x00bc
                    00BB    437 _IEN1_T3IE	=	0x00bb
                    00BA    438 _IEN1_T2IE	=	0x00ba
                    00B9    439 _IEN1_T1IE	=	0x00b9
                    00B8    440 _IEN1_DMAIE	=	0x00b8
                    00C7    441 _IRCON_STIF	=	0x00c7
                    00C5    442 _IRCON_P0IF	=	0x00c5
                    00C4    443 _IRCON_T4IF	=	0x00c4
                    00C3    444 _IRCON_T3IF	=	0x00c3
                    00C2    445 _IRCON_T2IF	=	0x00c2
                    00C1    446 _IRCON_T1IF	=	0x00c1
                    00C0    447 _IRCON_DMAIF	=	0x00c0
                    00D0    448 _P	=	0x00d0
                    00D1    449 _F1	=	0x00d1
                    00D2    450 _OV	=	0x00d2
                    00D3    451 _RS0	=	0x00d3
                    00D4    452 _RS1	=	0x00d4
                    00D5    453 _F0	=	0x00d5
                    00D6    454 _AC	=	0x00d6
                    00D7    455 _CY	=	0x00d7
                    00EC    456 _IRCON2_WDTIF	=	0x00ec
                    00EB    457 _IRCON2_P1IF	=	0x00eb
                    00EA    458 _IRCON2_UTX1IF	=	0x00ea
                    00E9    459 _IRCON2_UTX0IF	=	0x00e9
                    00E8    460 _IRCON2_P2IF	=	0x00e8
                            461 ;--------------------------------------------------------
                            462 ; overlayable register banks
                            463 ;--------------------------------------------------------
                            464 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     465 	.ds 8
                            466 ;--------------------------------------------------------
                            467 ; internal ram data
                            468 ;--------------------------------------------------------
                            469 	.area DSEG    (DATA)
                            470 ;--------------------------------------------------------
                            471 ; overlayable items in internal ram 
                            472 ;--------------------------------------------------------
                            473 	.area OSEG    (OVR,DATA)
                            474 ;--------------------------------------------------------
                            475 ; indirectly addressable internal ram data
                            476 ;--------------------------------------------------------
                            477 	.area ISEG    (DATA)
                            478 ;--------------------------------------------------------
                            479 ; absolute internal ram data
                            480 ;--------------------------------------------------------
                            481 	.area IABS    (ABS,DATA)
                            482 	.area IABS    (ABS,DATA)
                            483 ;--------------------------------------------------------
                            484 ; bit data
                            485 ;--------------------------------------------------------
                            486 	.area BSEG    (BIT)
                            487 ;--------------------------------------------------------
                            488 ; paged external ram data
                            489 ;--------------------------------------------------------
                            490 	.area PSEG    (PAG,XDATA)
                            491 ;--------------------------------------------------------
                            492 ; external ram data
                            493 ;--------------------------------------------------------
                            494 	.area XSEG    (XDATA)
                    DF02    495 _MDMCTRL0H	=	0xdf02
                    DF03    496 _MDMCTRL0L	=	0xdf03
                    DF04    497 _MDMCTRL1H	=	0xdf04
                    DF05    498 _MDMCTRL1L	=	0xdf05
                    DF06    499 _RSSIH	=	0xdf06
                    DF07    500 _RSSIL	=	0xdf07
                    DF08    501 _SYNCWORDH	=	0xdf08
                    DF09    502 _SYNCWORDL	=	0xdf09
                    DF0A    503 _TXCTRLH	=	0xdf0a
                    DF0B    504 _TXCTRLL	=	0xdf0b
                    DF0C    505 _RXCTRL0H	=	0xdf0c
                    DF0D    506 _RXCTRL0L	=	0xdf0d
                    DF0E    507 _RXCTRL1H	=	0xdf0e
                    DF0F    508 _RXCTRL1L	=	0xdf0f
                    DF10    509 _FSCTRLH	=	0xdf10
                    DF11    510 _FSCTRLL	=	0xdf11
                    DF12    511 _CSPX	=	0xdf12
                    DF13    512 _CSPY	=	0xdf13
                    DF14    513 _CSPZ	=	0xdf14
                    DF15    514 _CSPCTRL	=	0xdf15
                    DF16    515 _CSPT	=	0xdf16
                    DF17    516 _RFPWR	=	0xdf17
                    DF20    517 _FSMTCH	=	0xdf20
                    DF21    518 _FSMTCL	=	0xdf21
                    DF22    519 _MANANDH	=	0xdf22
                    DF23    520 _MANANDL	=	0xdf23
                    DF24    521 _MANORH	=	0xdf24
                    DF25    522 _MANORL	=	0xdf25
                    DF26    523 _AGCCTRLH	=	0xdf26
                    DF27    524 _AGCCTRLL	=	0xdf27
                    DF39    525 _FSMSTATE	=	0xdf39
                    DF3A    526 _ADCTSTH	=	0xdf3a
                    DF3B    527 _ADCTSTL	=	0xdf3b
                    DF3C    528 _DACTSTH	=	0xdf3c
                    DF3D    529 _DACTSTL	=	0xdf3d
                    DF43    530 _IEEE_ADDR0	=	0xdf43
                    DF44    531 _IEEE_ADDR1	=	0xdf44
                    DF45    532 _IEEE_ADDR2	=	0xdf45
                    DF46    533 _IEEE_ADDR3	=	0xdf46
                    DF47    534 _IEEE_ADDR4	=	0xdf47
                    DF48    535 _IEEE_ADDR5	=	0xdf48
                    DF49    536 _IEEE_ADDR6	=	0xdf49
                    DF4A    537 _IEEE_ADDR7	=	0xdf4a
                    DF4B    538 _PANIDH	=	0xdf4b
                    DF4C    539 _PANIDL	=	0xdf4c
                    DF4D    540 _SHORTADDRH	=	0xdf4d
                    DF4E    541 _SHORTADDRL	=	0xdf4e
                    DF4F    542 _IOCFG0	=	0xdf4f
                    DF50    543 _IOCFG1	=	0xdf50
                    DF51    544 _IOCFG2	=	0xdf51
                    DF52    545 _IOCFG3	=	0xdf52
                    DF53    546 _RXFIFOCNT	=	0xdf53
                    DF54    547 _FSMTC1	=	0xdf54
                    DF60    548 _CHVER	=	0xdf60
                    DF61    549 _CHIPID	=	0xdf61
                    DF62    550 _RFSTATUS	=	0xdf62
                    DFC1    551 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    552 _RFD_SHADOW	=	0xdfd9
                    DFF9    553 _U1BUF_SHADOW	=	0xdff9
                    DFBA    554 _ADC_SHADOW	=	0xdfba
   0000                     555 _lpp_is_on:
   0000                     556 	.ds 1
   0001                     557 _current_packet:
   0001                     558 	.ds 8
   0009                     559 _dutycycle_pt:
   0009                     560 	.ds 2
   000B                     561 _timer:
   000B                     562 	.ds 21
   0020                     563 _queued_packets_memb_memb_count:
   0020                     564 	.ds 4
   0024                     565 _queued_packets_memb_memb_mem:
   0024                     566 	.ds 168
   00CC                     567 _encounter_memb_memb_count:
   00CC                     568 	.ds 4
   00D0                     569 _encounter_memb_memb_mem:
   00D0                     570 	.ds 196
   0194                     571 _is_streaming:
   0194                     572 	.ds 1
   0195                     573 _stream_probe_timer:
   0195                     574 	.ds 21
   01AA                     575 _stream_off_timer:
   01AA                     576 	.ds 21
                            577 ;--------------------------------------------------------
                            578 ; absolute external ram data
                            579 ;--------------------------------------------------------
                            580 	.area XABS    (ABS,XDATA)
                            581 ;--------------------------------------------------------
                            582 ; external initialized ram data
                            583 ;--------------------------------------------------------
                            584 	.area XISEG   (XDATA)
   0000                     585 _is_listening:
   0000                     586 	.ds 1
   0001                     587 _off_time_adjustment:
   0001                     588 	.ds 2
   0003                     589 _off_time:
   0003                     590 	.ds 2
   0005                     591 _pending_packets_list_list:
   0005                     592 	.ds 3
   0008                     593 _pending_packets_list:
   0008                     594 	.ds 3
   000B                     595 _queued_packets_list_list:
   000B                     596 	.ds 3
   000E                     597 _queued_packets_list:
   000E                     598 	.ds 3
   0011                     599 _queued_packets_memb:
   0011                     600 	.ds 10
   001B                     601 _encounter_list_list:
   001B                     602 	.ds 3
   001E                     603 _encounter_list:
   001E                     604 	.ds 3
   0021                     605 _encounter_memb:
   0021                     606 	.ds 10
                            607 	.area HOME    (CODE)
                            608 	.area GSINIT0 (CODE)
                            609 	.area GSINIT1 (CODE)
                            610 	.area GSINIT2 (CODE)
                            611 	.area GSINIT3 (CODE)
                            612 	.area GSINIT4 (CODE)
                            613 	.area GSINIT5 (CODE)
                            614 	.area GSINIT  (CODE)
                            615 	.area GSFINAL (CODE)
                            616 	.area CSEG    (CODE)
                            617 ;--------------------------------------------------------
                            618 ; global & static initialisations
                            619 ;--------------------------------------------------------
                            620 	.area HOME    (CODE)
                            621 	.area GSINIT  (CODE)
                            622 	.area GSFINAL (CODE)
                            623 	.area GSINIT  (CODE)
                            624 ;--------------------------------------------------------
                            625 ; Home
                            626 ;--------------------------------------------------------
                            627 	.area HOME    (CODE)
                            628 	.area HOME    (CODE)
                            629 ;--------------------------------------------------------
                            630 ; code
                            631 ;--------------------------------------------------------
                            632 	.area CSEG    (CODE)
                            633 ;------------------------------------------------------------
                            634 ;Allocation info for local variables in function 'turn_radio_on'
                            635 ;------------------------------------------------------------
                            636 ;------------------------------------------------------------
                            637 ;	../../../core/net/mac/lpp.c:191: turn_radio_on(void)
                            638 ;	-----------------------------------------
                            639 ;	 function turn_radio_on
                            640 ;	-----------------------------------------
   0000                     641 _turn_radio_on:
                    0002    642 	ar2 = 0x02
                    0003    643 	ar3 = 0x03
                    0004    644 	ar4 = 0x04
                    0005    645 	ar5 = 0x05
                    0006    646 	ar6 = 0x06
                    0007    647 	ar7 = 0x07
                    0000    648 	ar0 = 0x00
                    0001    649 	ar1 = 0x01
                            650 ;	../../../core/net/mac/lpp.c:193: NETSTACK_RADIO.on();
   0000 90s00r10            651 	mov	dptr,#(_cc2430_rf_driver + 0x0010)
   0003 E4                  652 	clr	a
   0004 93                  653 	movc	a,@a+dptr
   0005 FA                  654 	mov	r2,a
   0006 A3                  655 	inc	dptr
   0007 E4                  656 	clr	a
   0008 93                  657 	movc	a,@a+dptr
   0009 FB                  658 	mov	r3,a
   000A C0 02               659 	push	ar2
   000C C0 03               660 	push	ar3
   000E 8A 82               661 	mov	dpl,r2
   0010 8B 83               662 	mov	dph,r3
   0012 12s00r00            663 	lcall	__sdcc_call_dptr
   0015 D0 03               664 	pop	ar3
   0017 D0 02               665 	pop	ar2
   0019 22                  666 	ret
                            667 ;------------------------------------------------------------
                            668 ;Allocation info for local variables in function 'turn_radio_off'
                            669 ;------------------------------------------------------------
                            670 ;------------------------------------------------------------
                            671 ;	../../../core/net/mac/lpp.c:198: turn_radio_off(void)
                            672 ;	-----------------------------------------
                            673 ;	 function turn_radio_off
                            674 ;	-----------------------------------------
   001A                     675 _turn_radio_off:
                            676 ;	../../../core/net/mac/lpp.c:200: if(lpp_is_on && is_streaming == 0) {
   001A 90s00r00            677 	mov	dptr,#_lpp_is_on
   001D E0                  678 	movx	a,@dptr
   001E FA                  679 	mov	r2,a
   001F 60 20               680 	jz	00104$
   0021 90s01r94            681 	mov	dptr,#_is_streaming
   0024 E0                  682 	movx	a,@dptr
   0025 FA                  683 	mov	r2,a
   0026 70 19               684 	jnz	00104$
                            685 ;	../../../core/net/mac/lpp.c:201: NETSTACK_RADIO.off();
   0028 90s00r12            686 	mov	dptr,#(_cc2430_rf_driver + 0x0012)
   002B E4                  687 	clr	a
   002C 93                  688 	movc	a,@a+dptr
   002D FA                  689 	mov	r2,a
   002E A3                  690 	inc	dptr
   002F E4                  691 	clr	a
   0030 93                  692 	movc	a,@a+dptr
   0031 FB                  693 	mov	r3,a
   0032 C0 02               694 	push	ar2
   0034 C0 03               695 	push	ar3
   0036 8A 82               696 	mov	dpl,r2
   0038 8B 83               697 	mov	dph,r3
   003A 12s00r00            698 	lcall	__sdcc_call_dptr
   003D D0 03               699 	pop	ar3
   003F D0 02               700 	pop	ar2
   0041                     701 00104$:
   0041 22                  702 	ret
                            703 ;------------------------------------------------------------
                            704 ;Allocation info for local variables in function 'remove_encounter'
                            705 ;------------------------------------------------------------
                            706 ;encounter                 Allocated to registers r2 r3 r4 
                            707 ;e                         Allocated to registers 
                            708 ;------------------------------------------------------------
                            709 ;	../../../core/net/mac/lpp.c:207: remove_encounter(void *encounter)
                            710 ;	-----------------------------------------
                            711 ;	 function remove_encounter
                            712 ;	-----------------------------------------
   0042                     713 _remove_encounter:
   0042 AA 82               714 	mov	r2,dpl
   0044 AB 83               715 	mov	r3,dph
   0046 AC F0               716 	mov	r4,b
                            717 ;	../../../core/net/mac/lpp.c:211: ctimer_stop(&e->remove_timer);
   0048 74 07               718 	mov	a,#0x07
   004A 2A                  719 	add	a,r2
   004B FD                  720 	mov	r5,a
   004C E4                  721 	clr	a
   004D 3B                  722 	addc	a,r3
   004E FE                  723 	mov	r6,a
   004F 8C 07               724 	mov	ar7,r4
   0051 8D 82               725 	mov	dpl,r5
   0053 8E 83               726 	mov	dph,r6
   0055 8F F0               727 	mov	b,r7
   0057 C0 02               728 	push	ar2
   0059 C0 03               729 	push	ar3
   005B C0 04               730 	push	ar4
   005D 12s00r00            731 	lcall	_ctimer_stop
   0060 D0 04               732 	pop	ar4
   0062 D0 03               733 	pop	ar3
   0064 D0 02               734 	pop	ar2
                            735 ;	../../../core/net/mac/lpp.c:212: ctimer_stop(&e->turn_on_radio_timer);
   0066 74 1C               736 	mov	a,#0x1C
   0068 2A                  737 	add	a,r2
   0069 FD                  738 	mov	r5,a
   006A E4                  739 	clr	a
   006B 3B                  740 	addc	a,r3
   006C FE                  741 	mov	r6,a
   006D 8C 07               742 	mov	ar7,r4
   006F 8D 82               743 	mov	dpl,r5
   0071 8E 83               744 	mov	dph,r6
   0073 8F F0               745 	mov	b,r7
   0075 C0 02               746 	push	ar2
   0077 C0 03               747 	push	ar3
   0079 C0 04               748 	push	ar4
   007B 12s00r00            749 	lcall	_ctimer_stop
   007E D0 04               750 	pop	ar4
   0080 D0 03               751 	pop	ar3
   0082 D0 02               752 	pop	ar2
                            753 ;	../../../core/net/mac/lpp.c:213: list_remove(encounter_list, e);
   0084 90s00r1E            754 	mov	dptr,#_encounter_list
   0087 E0                  755 	movx	a,@dptr
   0088 FD                  756 	mov	r5,a
   0089 A3                  757 	inc	dptr
   008A E0                  758 	movx	a,@dptr
   008B FE                  759 	mov	r6,a
   008C A3                  760 	inc	dptr
   008D E0                  761 	movx	a,@dptr
   008E FF                  762 	mov	r7,a
   008F C0 02               763 	push	ar2
   0091 C0 03               764 	push	ar3
   0093 C0 04               765 	push	ar4
   0095 C0 02               766 	push	ar2
   0097 C0 03               767 	push	ar3
   0099 C0 04               768 	push	ar4
   009B 8D 82               769 	mov	dpl,r5
   009D 8E 83               770 	mov	dph,r6
   009F 8F F0               771 	mov	b,r7
   00A1 12s00r00            772 	lcall	_list_remove
   00A4 15 81               773 	dec	sp
   00A6 15 81               774 	dec	sp
   00A8 15 81               775 	dec	sp
                            776 ;	../../../core/net/mac/lpp.c:214: memb_free(&encounter_memb, e);
   00AA 90s00r21            777 	mov	dptr,#_encounter_memb
   00AD 75 F0 00            778 	mov	b,#0x00
   00B0 12s00r00            779 	lcall	_memb_free
   00B3 15 81               780 	dec	sp
   00B5 15 81               781 	dec	sp
   00B7 15 81               782 	dec	sp
   00B9 22                  783 	ret
                            784 ;------------------------------------------------------------
                            785 ;Allocation info for local variables in function 'register_encounter'
                            786 ;------------------------------------------------------------
                            787 ;time                      Allocated to stack - offset -4
                            788 ;neighbor                  Allocated to stack - offset 1
                            789 ;e                         Allocated to registers r5 r6 r7 
                            790 ;------------------------------------------------------------
                            791 ;	../../../core/net/mac/lpp.c:218: register_encounter(rimeaddr_t *neighbor, clock_time_t time)
                            792 ;	-----------------------------------------
                            793 ;	 function register_encounter
                            794 ;	-----------------------------------------
   00BA                     795 _register_encounter:
   00BA C0*00               796 	push	_bp
   00BC 85 81*00            797 	mov	_bp,sp
   00BF C0 82               798 	push	dpl
   00C1 C0 83               799 	push	dph
   00C3 C0 F0               800 	push	b
                            801 ;	../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   00C5 90s00r1E            802 	mov	dptr,#_encounter_list
   00C8 E0                  803 	movx	a,@dptr
   00C9 FD                  804 	mov	r5,a
   00CA A3                  805 	inc	dptr
   00CB E0                  806 	movx	a,@dptr
   00CC FE                  807 	mov	r6,a
   00CD A3                  808 	inc	dptr
   00CE E0                  809 	movx	a,@dptr
   00CF FF                  810 	mov	r7,a
   00D0 8D 82               811 	mov	dpl,r5
   00D2 8E 83               812 	mov	dph,r6
   00D4 8F F0               813 	mov	b,r7
   00D6 12s00r00            814 	lcall	_list_head
   00D9 AD 82               815 	mov	r5,dpl
   00DB AE 83               816 	mov	r6,dph
   00DD AF F0               817 	mov	r7,b
   00DF                     818 00103$:
   00DF BD 00 09            819 	cjne	r5,#0x00,00118$
   00E2 BE 00 06            820 	cjne	r6,#0x00,00118$
   00E5 BF 00 03            821 	cjne	r7,#0x00,00118$
   00E8 02s01r94            822 	ljmp	00106$
   00EB                     823 00118$:
                            824 ;	../../../core/net/mac/lpp.c:224: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
   00EB 74 03               825 	mov	a,#0x03
   00ED 2D                  826 	add	a,r5
   00EE FA                  827 	mov	r2,a
   00EF E4                  828 	clr	a
   00F0 3E                  829 	addc	a,r6
   00F1 FB                  830 	mov	r3,a
   00F2 8F 04               831 	mov	ar4,r7
   00F4 C0 05               832 	push	ar5
   00F6 C0 06               833 	push	ar6
   00F8 C0 07               834 	push	ar7
   00FA C0 02               835 	push	ar2
   00FC C0 03               836 	push	ar3
   00FE C0 04               837 	push	ar4
   0100 A8*00               838 	mov	r0,_bp
   0102 08                  839 	inc	r0
   0103 86 82               840 	mov	dpl,@r0
   0105 08                  841 	inc	r0
   0106 86 83               842 	mov	dph,@r0
   0108 08                  843 	inc	r0
   0109 86 F0               844 	mov	b,@r0
   010B 12s00r00            845 	lcall	_rimeaddr_cmp
   010E AA 82               846 	mov	r2,dpl
   0110 AB 83               847 	mov	r3,dph
   0112 15 81               848 	dec	sp
   0114 15 81               849 	dec	sp
   0116 15 81               850 	dec	sp
   0118 D0 07               851 	pop	ar7
   011A D0 06               852 	pop	ar6
   011C D0 05               853 	pop	ar5
   011E EA                  854 	mov	a,r2
   011F 4B                  855 	orl	a,r3
   0120 60 5A               856 	jz	00105$
                            857 ;	../../../core/net/mac/lpp.c:225: e->time = time;
   0122 74 05               858 	mov	a,#0x05
   0124 2D                  859 	add	a,r5
   0125 FA                  860 	mov	r2,a
   0126 E4                  861 	clr	a
   0127 3E                  862 	addc	a,r6
   0128 FB                  863 	mov	r3,a
   0129 8F 04               864 	mov	ar4,r7
   012B 8A 82               865 	mov	dpl,r2
   012D 8B 83               866 	mov	dph,r3
   012F 8C F0               867 	mov	b,r4
   0131 E5*00               868 	mov	a,_bp
   0133 24 FC               869 	add	a,#0xfc
   0135 F8                  870 	mov	r0,a
   0136 E6                  871 	mov	a,@r0
   0137 12s00r00            872 	lcall	__gptrput
   013A A3                  873 	inc	dptr
   013B 08                  874 	inc	r0
   013C E6                  875 	mov	a,@r0
   013D 12s00r00            876 	lcall	__gptrput
                            877 ;	../../../core/net/mac/lpp.c:226: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
   0140 74 07               878 	mov	a,#0x07
   0142 2D                  879 	add	a,r5
   0143 FA                  880 	mov	r2,a
   0144 E4                  881 	clr	a
   0145 3E                  882 	addc	a,r6
   0146 FB                  883 	mov	r3,a
   0147 8F 04               884 	mov	ar4,r7
   0149 C0 05               885 	push	ar5
   014B C0 06               886 	push	ar6
   014D C0 07               887 	push	ar7
   014F C0 05               888 	push	ar5
   0151 C0 06               889 	push	ar6
   0153 C0 07               890 	push	ar7
   0155 74r42               891 	mov	a,#_remove_encounter
   0157 C0 E0               892 	push	acc
   0159 74s00               893 	mov	a,#(_remove_encounter >> 8)
   015B C0 E0               894 	push	acc
   015D 74 F0               895 	mov	a,#0xF0
   015F C0 E0               896 	push	acc
   0161 74 01               897 	mov	a,#0x01
   0163 C0 E0               898 	push	acc
   0165 8A 82               899 	mov	dpl,r2
   0167 8B 83               900 	mov	dph,r3
   0169 8C F0               901 	mov	b,r4
   016B 12s00r00            902 	lcall	_ctimer_set
   016E E5 81               903 	mov	a,sp
   0170 24 F9               904 	add	a,#0xf9
   0172 F5 81               905 	mov	sp,a
   0174 D0 07               906 	pop	ar7
   0176 D0 06               907 	pop	ar6
   0178 D0 05               908 	pop	ar5
                            909 ;	../../../core/net/mac/lpp.c:227: break;
   017A 80 18               910 	sjmp	00106$
   017C                     911 00105$:
                            912 ;	../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   017C 8D 82               913 	mov	dpl,r5
   017E 8E 83               914 	mov	dph,r6
   0180 8F F0               915 	mov	b,r7
   0182 12s00r00            916 	lcall	_list_item_next
   0185 AA 82               917 	mov	r2,dpl
   0187 AB 83               918 	mov	r3,dph
   0189 AC F0               919 	mov	r4,b
   018B 8A 05               920 	mov	ar5,r2
   018D 8B 06               921 	mov	ar6,r3
   018F 8C 07               922 	mov	ar7,r4
   0191 02s00rDF            923 	ljmp	00103$
   0194                     924 00106$:
                            925 ;	../../../core/net/mac/lpp.c:231: if(e == NULL) {
   0194 BD 00 08            926 	cjne	r5,#0x00,00120$
   0197 BE 00 05            927 	cjne	r6,#0x00,00120$
   019A BF 00 02            928 	cjne	r7,#0x00,00120$
   019D 80 03               929 	sjmp	00121$
   019F                     930 00120$:
   019F 02s02r61            931 	ljmp	00111$
   01A2                     932 00121$:
                            933 ;	../../../core/net/mac/lpp.c:232: e = memb_alloc(&encounter_memb);
   01A2 90s00r21            934 	mov	dptr,#_encounter_memb
   01A5 75 F0 00            935 	mov	b,#0x00
   01A8 12s00r00            936 	lcall	_memb_alloc
   01AB AA 82               937 	mov	r2,dpl
   01AD AB 83               938 	mov	r3,dph
   01AF AC F0               939 	mov	r4,b
   01B1 8A 05               940 	mov	ar5,r2
   01B3 8B 06               941 	mov	ar6,r3
   01B5 8C 07               942 	mov	ar7,r4
                            943 ;	../../../core/net/mac/lpp.c:233: if(e == NULL) {
   01B7 BD 00 09            944 	cjne	r5,#0x00,00108$
   01BA BE 00 06            945 	cjne	r6,#0x00,00108$
   01BD BF 00 03            946 	cjne	r7,#0x00,00108$
                            947 ;	../../../core/net/mac/lpp.c:235: return;
   01C0 02s02r61            948 	ljmp	00111$
   01C3                     949 00108$:
                            950 ;	../../../core/net/mac/lpp.c:237: rimeaddr_copy(&e->neighbor, neighbor);
   01C3 74 03               951 	mov	a,#0x03
   01C5 2D                  952 	add	a,r5
   01C6 FA                  953 	mov	r2,a
   01C7 E4                  954 	clr	a
   01C8 3E                  955 	addc	a,r6
   01C9 FB                  956 	mov	r3,a
   01CA 8F 04               957 	mov	ar4,r7
   01CC C0 05               958 	push	ar5
   01CE C0 06               959 	push	ar6
   01D0 C0 07               960 	push	ar7
   01D2 A8*00               961 	mov	r0,_bp
   01D4 08                  962 	inc	r0
   01D5 E6                  963 	mov	a,@r0
   01D6 C0 E0               964 	push	acc
   01D8 08                  965 	inc	r0
   01D9 E6                  966 	mov	a,@r0
   01DA C0 E0               967 	push	acc
   01DC 08                  968 	inc	r0
   01DD E6                  969 	mov	a,@r0
   01DE C0 E0               970 	push	acc
   01E0 8A 82               971 	mov	dpl,r2
   01E2 8B 83               972 	mov	dph,r3
   01E4 8C F0               973 	mov	b,r4
   01E6 12s00r00            974 	lcall	_rimeaddr_copy
   01E9 15 81               975 	dec	sp
   01EB 15 81               976 	dec	sp
   01ED 15 81               977 	dec	sp
   01EF D0 07               978 	pop	ar7
   01F1 D0 06               979 	pop	ar6
   01F3 D0 05               980 	pop	ar5
                            981 ;	../../../core/net/mac/lpp.c:238: e->time = time;
   01F5 74 05               982 	mov	a,#0x05
   01F7 2D                  983 	add	a,r5
   01F8 FA                  984 	mov	r2,a
   01F9 E4                  985 	clr	a
   01FA 3E                  986 	addc	a,r6
   01FB FB                  987 	mov	r3,a
   01FC 8F 04               988 	mov	ar4,r7
   01FE 8A 82               989 	mov	dpl,r2
   0200 8B 83               990 	mov	dph,r3
   0202 8C F0               991 	mov	b,r4
   0204 E5*00               992 	mov	a,_bp
   0206 24 FC               993 	add	a,#0xfc
   0208 F8                  994 	mov	r0,a
   0209 E6                  995 	mov	a,@r0
   020A 12s00r00            996 	lcall	__gptrput
   020D A3                  997 	inc	dptr
   020E 08                  998 	inc	r0
   020F E6                  999 	mov	a,@r0
   0210 12s00r00           1000 	lcall	__gptrput
                           1001 ;	../../../core/net/mac/lpp.c:239: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
   0213 74 07              1002 	mov	a,#0x07
   0215 2D                 1003 	add	a,r5
   0216 FA                 1004 	mov	r2,a
   0217 E4                 1005 	clr	a
   0218 3E                 1006 	addc	a,r6
   0219 FB                 1007 	mov	r3,a
   021A 8F 04              1008 	mov	ar4,r7
   021C C0 05              1009 	push	ar5
   021E C0 06              1010 	push	ar6
   0220 C0 07              1011 	push	ar7
   0222 C0 05              1012 	push	ar5
   0224 C0 06              1013 	push	ar6
   0226 C0 07              1014 	push	ar7
   0228 74r42              1015 	mov	a,#_remove_encounter
   022A C0 E0              1016 	push	acc
   022C 74s00              1017 	mov	a,#(_remove_encounter >> 8)
   022E C0 E0              1018 	push	acc
   0230 74 F0              1019 	mov	a,#0xF0
   0232 C0 E0              1020 	push	acc
   0234 74 01              1021 	mov	a,#0x01
   0236 C0 E0              1022 	push	acc
   0238 8A 82              1023 	mov	dpl,r2
   023A 8B 83              1024 	mov	dph,r3
   023C 8C F0              1025 	mov	b,r4
   023E 12s00r00           1026 	lcall	_ctimer_set
   0241 E5 81              1027 	mov	a,sp
   0243 24 F9              1028 	add	a,#0xf9
   0245 F5 81              1029 	mov	sp,a
                           1030 ;	../../../core/net/mac/lpp.c:240: list_add(encounter_list, e);
   0247 90s00r1E           1031 	mov	dptr,#_encounter_list
   024A E0                 1032 	movx	a,@dptr
   024B FA                 1033 	mov	r2,a
   024C A3                 1034 	inc	dptr
   024D E0                 1035 	movx	a,@dptr
   024E FB                 1036 	mov	r3,a
   024F A3                 1037 	inc	dptr
   0250 E0                 1038 	movx	a,@dptr
   0251 FC                 1039 	mov	r4,a
   0252 8A 82              1040 	mov	dpl,r2
   0254 8B 83              1041 	mov	dph,r3
   0256 8C F0              1042 	mov	b,r4
   0258 12s00r00           1043 	lcall	_list_add
   025B 15 81              1044 	dec	sp
   025D 15 81              1045 	dec	sp
   025F 15 81              1046 	dec	sp
   0261                    1047 00111$:
   0261 85*00 81           1048 	mov	sp,_bp
   0264 D0*00              1049 	pop	_bp
   0266 22                 1050 	ret
                           1051 ;------------------------------------------------------------
                           1052 ;Allocation info for local variables in function 'turn_radio_on_callback'
                           1053 ;------------------------------------------------------------
                           1054 ;packet                    Allocated to registers r2 r3 r4 
                           1055 ;p                         Allocated to registers 
                           1056 ;------------------------------------------------------------
                           1057 ;	../../../core/net/mac/lpp.c:245: turn_radio_on_callback(void *packet)
                           1058 ;	-----------------------------------------
                           1059 ;	 function turn_radio_on_callback
                           1060 ;	-----------------------------------------
   0267                    1061 _turn_radio_on_callback:
   0267 AA 82              1062 	mov	r2,dpl
   0269 AB 83              1063 	mov	r3,dph
   026B AC F0              1064 	mov	r4,b
                           1065 ;	../../../core/net/mac/lpp.c:249: list_remove(pending_packets_list, p);
   026D 90s00r08           1066 	mov	dptr,#_pending_packets_list
   0270 E0                 1067 	movx	a,@dptr
   0271 FD                 1068 	mov	r5,a
   0272 A3                 1069 	inc	dptr
   0273 E0                 1070 	movx	a,@dptr
   0274 FE                 1071 	mov	r6,a
   0275 A3                 1072 	inc	dptr
   0276 E0                 1073 	movx	a,@dptr
   0277 FF                 1074 	mov	r7,a
   0278 C0 02              1075 	push	ar2
   027A C0 03              1076 	push	ar3
   027C C0 04              1077 	push	ar4
   027E C0 02              1078 	push	ar2
   0280 C0 03              1079 	push	ar3
   0282 C0 04              1080 	push	ar4
   0284 8D 82              1081 	mov	dpl,r5
   0286 8E 83              1082 	mov	dph,r6
   0288 8F F0              1083 	mov	b,r7
   028A 12s00r00           1084 	lcall	_list_remove
   028D 15 81              1085 	dec	sp
   028F 15 81              1086 	dec	sp
   0291 15 81              1087 	dec	sp
                           1088 ;	../../../core/net/mac/lpp.c:250: list_add(queued_packets_list, p);
   0293 90s00r0E           1089 	mov	dptr,#_queued_packets_list
   0296 E0                 1090 	movx	a,@dptr
   0297 FD                 1091 	mov	r5,a
   0298 A3                 1092 	inc	dptr
   0299 E0                 1093 	movx	a,@dptr
   029A FE                 1094 	mov	r6,a
   029B A3                 1095 	inc	dptr
   029C E0                 1096 	movx	a,@dptr
   029D FF                 1097 	mov	r7,a
   029E 8D 82              1098 	mov	dpl,r5
   02A0 8E 83              1099 	mov	dph,r6
   02A2 8F F0              1100 	mov	b,r7
   02A4 12s00r00           1101 	lcall	_list_add
   02A7 15 81              1102 	dec	sp
   02A9 15 81              1103 	dec	sp
   02AB 15 81              1104 	dec	sp
                           1105 ;	../../../core/net/mac/lpp.c:251: turn_radio_on();
   02AD 02s00r00           1106 	ljmp	_turn_radio_on
                           1107 ;------------------------------------------------------------
                           1108 ;Allocation info for local variables in function 'stream_off'
                           1109 ;------------------------------------------------------------
                           1110 ;dummy                     Allocated to registers 
                           1111 ;------------------------------------------------------------
                           1112 ;	../../../core/net/mac/lpp.c:257: stream_off(void *dummy)
                           1113 ;	-----------------------------------------
                           1114 ;	 function stream_off
                           1115 ;	-----------------------------------------
   02B0                    1116 _stream_off:
                           1117 ;	../../../core/net/mac/lpp.c:259: is_streaming = 0;
   02B0 90s01r94           1118 	mov	dptr,#_is_streaming
   02B3 E4                 1119 	clr	a
   02B4 F0                 1120 	movx	@dptr,a
   02B5 22                 1121 	ret
                           1122 ;------------------------------------------------------------
                           1123 ;Allocation info for local variables in function 'turn_radio_on_for_neighbor'
                           1124 ;------------------------------------------------------------
                           1125 ;i                         Allocated to stack - offset -5
                           1126 ;neighbor                  Allocated to stack - offset 1
                           1127 ;e                         Allocated to registers r5 r6 r7 
                           1128 ;wait                      Allocated to stack - offset 4
                           1129 ;now                       Allocated to stack - offset 6
                           1130 ;------------------------------------------------------------
                           1131 ;	../../../core/net/mac/lpp.c:272: turn_radio_on_for_neighbor(rimeaddr_t *neighbor, struct queue_list_item *i)
                           1132 ;	-----------------------------------------
                           1133 ;	 function turn_radio_on_for_neighbor
                           1134 ;	-----------------------------------------
   02B6                    1135 _turn_radio_on_for_neighbor:
   02B6 C0*00              1136 	push	_bp
   02B8 85 81*00           1137 	mov	_bp,sp
   02BB C0 82              1138 	push	dpl
   02BD C0 83              1139 	push	dph
   02BF C0 F0              1140 	push	b
   02C1 E5 81              1141 	mov	a,sp
   02C3 24 07              1142 	add	a,#0x07
   02C5 F5 81              1143 	mov	sp,a
                           1144 ;	../../../core/net/mac/lpp.c:277: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
   02C7 75 82 0E           1145 	mov	dpl,#0x0E
   02CA 12s00r00           1146 	lcall	_packetbuf_attr
   02CD AD 82              1147 	mov	r5,dpl
   02CF AE 83              1148 	mov	r6,dph
   02D1 BD 02 5E           1149 	cjne	r5,#0x02,00102$
   02D4 BE 00 5B           1150 	cjne	r6,#0x00,00102$
                           1151 ;	../../../core/net/mac/lpp.c:279: is_streaming = 1;
   02D7 90s01r94           1152 	mov	dptr,#_is_streaming
   02DA 74 01              1153 	mov	a,#0x01
   02DC F0                 1154 	movx	@dptr,a
                           1155 ;	../../../core/net/mac/lpp.c:280: turn_radio_on();
   02DD 12s00r00           1156 	lcall	_turn_radio_on
                           1157 ;	../../../core/net/mac/lpp.c:281: list_add(queued_packets_list, i);
   02E0 90s00r0E           1158 	mov	dptr,#_queued_packets_list
   02E3 E0                 1159 	movx	a,@dptr
   02E4 FD                 1160 	mov	r5,a
   02E5 A3                 1161 	inc	dptr
   02E6 E0                 1162 	movx	a,@dptr
   02E7 FE                 1163 	mov	r6,a
   02E8 A3                 1164 	inc	dptr
   02E9 E0                 1165 	movx	a,@dptr
   02EA FF                 1166 	mov	r7,a
   02EB E5*00              1167 	mov	a,_bp
   02ED 24 FB              1168 	add	a,#0xfb
   02EF F8                 1169 	mov	r0,a
   02F0 E6                 1170 	mov	a,@r0
   02F1 C0 E0              1171 	push	acc
   02F3 08                 1172 	inc	r0
   02F4 E6                 1173 	mov	a,@r0
   02F5 C0 E0              1174 	push	acc
   02F7 08                 1175 	inc	r0
   02F8 E6                 1176 	mov	a,@r0
   02F9 C0 E0              1177 	push	acc
   02FB 8D 82              1178 	mov	dpl,r5
   02FD 8E 83              1179 	mov	dph,r6
   02FF 8F F0              1180 	mov	b,r7
   0301 12s00r00           1181 	lcall	_list_add
   0304 15 81              1182 	dec	sp
   0306 15 81              1183 	dec	sp
   0308 15 81              1184 	dec	sp
                           1185 ;	../../../core/net/mac/lpp.c:282: ctimer_set(&stream_off_timer, STREAM_OFF_TIME,
   030A E4                 1186 	clr	a
   030B C0 E0              1187 	push	acc
   030D C0 E0              1188 	push	acc
   030F C0 E0              1189 	push	acc
   0311 74rB0              1190 	mov	a,#_stream_off
   0313 C0 E0              1191 	push	acc
   0315 74s02              1192 	mov	a,#(_stream_off >> 8)
   0317 C0 E0              1193 	push	acc
   0319 74 40              1194 	mov	a,#0x40
   031B C0 E0              1195 	push	acc
   031D E4                 1196 	clr	a
   031E C0 E0              1197 	push	acc
   0320 90s01rAA           1198 	mov	dptr,#_stream_off_timer
   0323 75 F0 00           1199 	mov	b,#0x00
   0326 12s00r00           1200 	lcall	_ctimer_set
   0329 E5 81              1201 	mov	a,sp
   032B 24 F9              1202 	add	a,#0xf9
   032D F5 81              1203 	mov	sp,a
                           1204 ;	../../../core/net/mac/lpp.c:284: return;
   032F 02s04rE5           1205 	ljmp	00111$
   0332                    1206 00102$:
                           1207 ;	../../../core/net/mac/lpp.c:288: if(rimeaddr_cmp(neighbor, &rimeaddr_null)) {
   0332 74r00              1208 	mov	a,#_rimeaddr_null
   0334 C0 E0              1209 	push	acc
   0336 74s00              1210 	mov	a,#(_rimeaddr_null >> 8)
   0338 C0 E0              1211 	push	acc
   033A 74 80              1212 	mov	a,#0x80
   033C C0 E0              1213 	push	acc
   033E A8*00              1214 	mov	r0,_bp
   0340 08                 1215 	inc	r0
   0341 86 82              1216 	mov	dpl,@r0
   0343 08                 1217 	inc	r0
   0344 86 83              1218 	mov	dph,@r0
   0346 08                 1219 	inc	r0
   0347 86 F0              1220 	mov	b,@r0
   0349 12s00r00           1221 	lcall	_rimeaddr_cmp
   034C AD 82              1222 	mov	r5,dpl
   034E AE 83              1223 	mov	r6,dph
   0350 15 81              1224 	dec	sp
   0352 15 81              1225 	dec	sp
   0354 15 81              1226 	dec	sp
   0356 ED                 1227 	mov	a,r5
   0357 4E                 1228 	orl	a,r6
   0358 60 2D              1229 	jz	00104$
                           1230 ;	../../../core/net/mac/lpp.c:294: list_add(queued_packets_list, i);
   035A 90s00r0E           1231 	mov	dptr,#_queued_packets_list
   035D E0                 1232 	movx	a,@dptr
   035E FD                 1233 	mov	r5,a
   035F A3                 1234 	inc	dptr
   0360 E0                 1235 	movx	a,@dptr
   0361 FE                 1236 	mov	r6,a
   0362 A3                 1237 	inc	dptr
   0363 E0                 1238 	movx	a,@dptr
   0364 FF                 1239 	mov	r7,a
   0365 E5*00              1240 	mov	a,_bp
   0367 24 FB              1241 	add	a,#0xfb
   0369 F8                 1242 	mov	r0,a
   036A E6                 1243 	mov	a,@r0
   036B C0 E0              1244 	push	acc
   036D 08                 1245 	inc	r0
   036E E6                 1246 	mov	a,@r0
   036F C0 E0              1247 	push	acc
   0371 08                 1248 	inc	r0
   0372 E6                 1249 	mov	a,@r0
   0373 C0 E0              1250 	push	acc
   0375 8D 82              1251 	mov	dpl,r5
   0377 8E 83              1252 	mov	dph,r6
   0379 8F F0              1253 	mov	b,r7
   037B 12s00r00           1254 	lcall	_list_add
   037E 15 81              1255 	dec	sp
   0380 15 81              1256 	dec	sp
   0382 15 81              1257 	dec	sp
                           1258 ;	../../../core/net/mac/lpp.c:295: return;
   0384 02s04rE5           1259 	ljmp	00111$
   0387                    1260 00104$:
                           1261 ;	../../../core/net/mac/lpp.c:303: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   0387 90s00r1E           1262 	mov	dptr,#_encounter_list
   038A E0                 1263 	movx	a,@dptr
   038B FD                 1264 	mov	r5,a
   038C A3                 1265 	inc	dptr
   038D E0                 1266 	movx	a,@dptr
   038E FE                 1267 	mov	r6,a
   038F A3                 1268 	inc	dptr
   0390 E0                 1269 	movx	a,@dptr
   0391 FF                 1270 	mov	r7,a
   0392 8D 82              1271 	mov	dpl,r5
   0394 8E 83              1272 	mov	dph,r6
   0396 8F F0              1273 	mov	b,r7
   0398 12s00r00           1274 	lcall	_list_head
   039B AD 82              1275 	mov	r5,dpl
   039D AE 83              1276 	mov	r6,dph
   039F AF F0              1277 	mov	r7,b
   03A1                    1278 00107$:
   03A1 BD 00 09           1279 	cjne	r5,#0x00,00121$
   03A4 BE 00 06           1280 	cjne	r6,#0x00,00121$
   03A7 BF 00 03           1281 	cjne	r7,#0x00,00121$
   03AA 02s04rB8           1282 	ljmp	00110$
   03AD                    1283 00121$:
                           1284 ;	../../../core/net/mac/lpp.c:304: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
   03AD 74 03              1285 	mov	a,#0x03
   03AF 2D                 1286 	add	a,r5
   03B0 FA                 1287 	mov	r2,a
   03B1 E4                 1288 	clr	a
   03B2 3E                 1289 	addc	a,r6
   03B3 FB                 1290 	mov	r3,a
   03B4 8F 04              1291 	mov	ar4,r7
   03B6 C0 05              1292 	push	ar5
   03B8 C0 06              1293 	push	ar6
   03BA C0 07              1294 	push	ar7
   03BC C0 02              1295 	push	ar2
   03BE C0 03              1296 	push	ar3
   03C0 C0 04              1297 	push	ar4
   03C2 A8*00              1298 	mov	r0,_bp
   03C4 08                 1299 	inc	r0
   03C5 86 82              1300 	mov	dpl,@r0
   03C7 08                 1301 	inc	r0
   03C8 86 83              1302 	mov	dph,@r0
   03CA 08                 1303 	inc	r0
   03CB 86 F0              1304 	mov	b,@r0
   03CD 12s00r00           1305 	lcall	_rimeaddr_cmp
   03D0 AA 82              1306 	mov	r2,dpl
   03D2 AB 83              1307 	mov	r3,dph
   03D4 15 81              1308 	dec	sp
   03D6 15 81              1309 	dec	sp
   03D8 15 81              1310 	dec	sp
   03DA D0 07              1311 	pop	ar7
   03DC D0 06              1312 	pop	ar6
   03DE D0 05              1313 	pop	ar5
   03E0 EA                 1314 	mov	a,r2
   03E1 4B                 1315 	orl	a,r3
   03E2 70 03              1316 	jnz	00122$
   03E4 02s04rA0           1317 	ljmp	00109$
   03E7                    1318 00122$:
                           1319 ;	../../../core/net/mac/lpp.c:314: now = clock_time();
   03E7 C0 05              1320 	push	ar5
   03E9 C0 06              1321 	push	ar6
   03EB C0 07              1322 	push	ar7
   03ED 12s00r00           1323 	lcall	_clock_time
   03F0 C8                 1324 	xch	a,r0
   03F1 E5*00              1325 	mov	a,_bp
   03F3 24 06              1326 	add	a,#0x06
   03F5 C8                 1327 	xch	a,r0
   03F6 A6 82              1328 	mov	@r0,dpl
   03F8 08                 1329 	inc	r0
   03F9 A6 83              1330 	mov	@r0,dph
   03FB D0 07              1331 	pop	ar7
   03FD D0 06              1332 	pop	ar6
   03FF D0 05              1333 	pop	ar5
                           1334 ;	../../../core/net/mac/lpp.c:315: wait = (((clock_time_t)(e->time - now)) % (OFF_TIME + LISTEN_TIME)) -
   0401 74 05              1335 	mov	a,#0x05
   0403 2D                 1336 	add	a,r5
   0404 FC                 1337 	mov	r4,a
   0405 E4                 1338 	clr	a
   0406 3E                 1339 	addc	a,r6
   0407 FA                 1340 	mov	r2,a
   0408 8F 03              1341 	mov	ar3,r7
   040A 8C 82              1342 	mov	dpl,r4
   040C 8A 83              1343 	mov	dph,r2
   040E 8B F0              1344 	mov	b,r3
   0410 12s00r00           1345 	lcall	__gptrget
   0413 FC                 1346 	mov	r4,a
   0414 A3                 1347 	inc	dptr
   0415 12s00r00           1348 	lcall	__gptrget
   0418 FA                 1349 	mov	r2,a
   0419 E5*00              1350 	mov	a,_bp
   041B 24 06              1351 	add	a,#0x06
   041D F8                 1352 	mov	r0,a
   041E EC                 1353 	mov	a,r4
   041F C3                 1354 	clr	c
   0420 96                 1355 	subb	a,@r0
   0421 FC                 1356 	mov	r4,a
   0422 EA                 1357 	mov	a,r2
   0423 08                 1358 	inc	r0
   0424 96                 1359 	subb	a,@r0
   0425 53 04 1F           1360 	anl	ar4,#0x1F
   0428 7A 00              1361 	mov	r2,#0x00
   042A E5*00              1362 	mov	a,_bp
   042C 24 04              1363 	add	a,#0x04
   042E F8                 1364 	mov	r0,a
   042F EC                 1365 	mov	a,r4
   0430 24 FE              1366 	add	a,#0xfe
   0432 F6                 1367 	mov	@r0,a
   0433 EA                 1368 	mov	a,r2
   0434 34 FF              1369 	addc	a,#0xff
   0436 08                 1370 	inc	r0
   0437 F6                 1371 	mov	@r0,a
                           1372 ;	../../../core/net/mac/lpp.c:330: ctimer_set(&e->turn_on_radio_timer, wait, turn_radio_on_callback, i);
   0438 74 1C              1373 	mov	a,#0x1C
   043A 2D                 1374 	add	a,r5
   043B FB                 1375 	mov	r3,a
   043C E4                 1376 	clr	a
   043D 3E                 1377 	addc	a,r6
   043E FA                 1378 	mov	r2,a
   043F 8F 04              1379 	mov	ar4,r7
   0441 E5*00              1380 	mov	a,_bp
   0443 24 FB              1381 	add	a,#0xfb
   0445 F8                 1382 	mov	r0,a
   0446 E6                 1383 	mov	a,@r0
   0447 C0 E0              1384 	push	acc
   0449 08                 1385 	inc	r0
   044A E6                 1386 	mov	a,@r0
   044B C0 E0              1387 	push	acc
   044D 08                 1388 	inc	r0
   044E E6                 1389 	mov	a,@r0
   044F C0 E0              1390 	push	acc
   0451 74r67              1391 	mov	a,#_turn_radio_on_callback
   0453 C0 E0              1392 	push	acc
   0455 74s02              1393 	mov	a,#(_turn_radio_on_callback >> 8)
   0457 C0 E0              1394 	push	acc
   0459 E5*00              1395 	mov	a,_bp
   045B 24 04              1396 	add	a,#0x04
   045D F8                 1397 	mov	r0,a
   045E E6                 1398 	mov	a,@r0
   045F C0 E0              1399 	push	acc
   0461 08                 1400 	inc	r0
   0462 E6                 1401 	mov	a,@r0
   0463 C0 E0              1402 	push	acc
   0465 8B 82              1403 	mov	dpl,r3
   0467 8A 83              1404 	mov	dph,r2
   0469 8C F0              1405 	mov	b,r4
   046B 12s00r00           1406 	lcall	_ctimer_set
   046E E5 81              1407 	mov	a,sp
   0470 24 F9              1408 	add	a,#0xf9
   0472 F5 81              1409 	mov	sp,a
                           1410 ;	../../../core/net/mac/lpp.c:331: list_add(pending_packets_list, i);
   0474 90s00r08           1411 	mov	dptr,#_pending_packets_list
   0477 E0                 1412 	movx	a,@dptr
   0478 FA                 1413 	mov	r2,a
   0479 A3                 1414 	inc	dptr
   047A E0                 1415 	movx	a,@dptr
   047B FB                 1416 	mov	r3,a
   047C A3                 1417 	inc	dptr
   047D E0                 1418 	movx	a,@dptr
   047E FC                 1419 	mov	r4,a
   047F E5*00              1420 	mov	a,_bp
   0481 24 FB              1421 	add	a,#0xfb
   0483 F8                 1422 	mov	r0,a
   0484 E6                 1423 	mov	a,@r0
   0485 C0 E0              1424 	push	acc
   0487 08                 1425 	inc	r0
   0488 E6                 1426 	mov	a,@r0
   0489 C0 E0              1427 	push	acc
   048B 08                 1428 	inc	r0
   048C E6                 1429 	mov	a,@r0
   048D C0 E0              1430 	push	acc
   048F 8A 82              1431 	mov	dpl,r2
   0491 8B 83              1432 	mov	dph,r3
   0493 8C F0              1433 	mov	b,r4
   0495 12s00r00           1434 	lcall	_list_add
   0498 15 81              1435 	dec	sp
   049A 15 81              1436 	dec	sp
   049C 15 81              1437 	dec	sp
                           1438 ;	../../../core/net/mac/lpp.c:332: return;
   049E 80 45              1439 	sjmp	00111$
   04A0                    1440 00109$:
                           1441 ;	../../../core/net/mac/lpp.c:303: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   04A0 8D 82              1442 	mov	dpl,r5
   04A2 8E 83              1443 	mov	dph,r6
   04A4 8F F0              1444 	mov	b,r7
   04A6 12s00r00           1445 	lcall	_list_item_next
   04A9 AA 82              1446 	mov	r2,dpl
   04AB AB 83              1447 	mov	r3,dph
   04AD AC F0              1448 	mov	r4,b
   04AF 8A 05              1449 	mov	ar5,r2
   04B1 8B 06              1450 	mov	ar6,r3
   04B3 8C 07              1451 	mov	ar7,r4
   04B5 02s03rA1           1452 	ljmp	00107$
   04B8                    1453 00110$:
                           1454 ;	../../../core/net/mac/lpp.c:341: turn_radio_on();
   04B8 12s00r00           1455 	lcall	_turn_radio_on
                           1456 ;	../../../core/net/mac/lpp.c:342: list_add(queued_packets_list, i);
   04BB 90s00r0E           1457 	mov	dptr,#_queued_packets_list
   04BE E0                 1458 	movx	a,@dptr
   04BF FA                 1459 	mov	r2,a
   04C0 A3                 1460 	inc	dptr
   04C1 E0                 1461 	movx	a,@dptr
   04C2 FB                 1462 	mov	r3,a
   04C3 A3                 1463 	inc	dptr
   04C4 E0                 1464 	movx	a,@dptr
   04C5 FC                 1465 	mov	r4,a
   04C6 E5*00              1466 	mov	a,_bp
   04C8 24 FB              1467 	add	a,#0xfb
   04CA F8                 1468 	mov	r0,a
   04CB E6                 1469 	mov	a,@r0
   04CC C0 E0              1470 	push	acc
   04CE 08                 1471 	inc	r0
   04CF E6                 1472 	mov	a,@r0
   04D0 C0 E0              1473 	push	acc
   04D2 08                 1474 	inc	r0
   04D3 E6                 1475 	mov	a,@r0
   04D4 C0 E0              1476 	push	acc
   04D6 8A 82              1477 	mov	dpl,r2
   04D8 8B 83              1478 	mov	dph,r3
   04DA 8C F0              1479 	mov	b,r4
   04DC 12s00r00           1480 	lcall	_list_add
   04DF 15 81              1481 	dec	sp
   04E1 15 81              1482 	dec	sp
   04E3 15 81              1483 	dec	sp
                           1484 ;	../../../core/net/mac/lpp.c:343: return;
   04E5                    1485 00111$:
   04E5 85*00 81           1486 	mov	sp,_bp
   04E8 D0*00              1487 	pop	_bp
   04EA 22                 1488 	ret
                           1489 ;------------------------------------------------------------
                           1490 ;Allocation info for local variables in function 'remove_queued_packet'
                           1491 ;------------------------------------------------------------
                           1492 ;item                      Allocated to stack - offset 1
                           1493 ;i                         Allocated to stack - offset 4
                           1494 ;sent                      Allocated to stack - offset 7
                           1495 ;ptr                       Allocated to stack - offset 9
                           1496 ;num_transmissions         Allocated to registers r7 r2 
                           1497 ;status                    Allocated to registers r3 r4 
                           1498 ;------------------------------------------------------------
                           1499 ;	../../../core/net/mac/lpp.c:347: remove_queued_packet(void *item)
                           1500 ;	-----------------------------------------
                           1501 ;	 function remove_queued_packet
                           1502 ;	-----------------------------------------
   04EB                    1503 _remove_queued_packet:
   04EB C0*00              1504 	push	_bp
   04ED 85 81*00           1505 	mov	_bp,sp
   04F0 C0 82              1506 	push	dpl
   04F2 C0 83              1507 	push	dph
   04F4 C0 F0              1508 	push	b
   04F6 E5 81              1509 	mov	a,sp
   04F8 24 0B              1510 	add	a,#0x0b
   04FA F5 81              1511 	mov	sp,a
                           1512 ;	../../../core/net/mac/lpp.c:349: struct queue_list_item *i = item;
   04FC A8*00              1513 	mov	r0,_bp
   04FE 08                 1514 	inc	r0
   04FF E5*00              1515 	mov	a,_bp
   0501 24 04              1516 	add	a,#0x04
   0503 F9                 1517 	mov	r1,a
   0504 E6                 1518 	mov	a,@r0
   0505 F7                 1519 	mov	@r1,a
   0506 08                 1520 	inc	r0
   0507 09                 1521 	inc	r1
   0508 E6                 1522 	mov	a,@r0
   0509 F7                 1523 	mov	@r1,a
   050A 08                 1524 	inc	r0
   050B 09                 1525 	inc	r1
   050C E6                 1526 	mov	a,@r0
   050D F7                 1527 	mov	@r1,a
                           1528 ;	../../../core/net/mac/lpp.c:359: queuebuf_to_packetbuf(i->packet);
   050E A8*00              1529 	mov	r0,_bp
   0510 08                 1530 	inc	r0
   0511 74 03              1531 	mov	a,#0x03
   0513 26                 1532 	add	a,@r0
   0514 FD                 1533 	mov	r5,a
   0515 E4                 1534 	clr	a
   0516 08                 1535 	inc	r0
   0517 36                 1536 	addc	a,@r0
   0518 FE                 1537 	mov	r6,a
   0519 08                 1538 	inc	r0
   051A 86 07              1539 	mov	ar7,@r0
   051C 8D 82              1540 	mov	dpl,r5
   051E 8E 83              1541 	mov	dph,r6
   0520 8F F0              1542 	mov	b,r7
   0522 12s00r00           1543 	lcall	__gptrget
   0525 FA                 1544 	mov	r2,a
   0526 A3                 1545 	inc	dptr
   0527 12s00r00           1546 	lcall	__gptrget
   052A FB                 1547 	mov	r3,a
   052B A3                 1548 	inc	dptr
   052C 12s00r00           1549 	lcall	__gptrget
   052F FC                 1550 	mov	r4,a
   0530 8A 82              1551 	mov	dpl,r2
   0532 8B 83              1552 	mov	dph,r3
   0534 8C F0              1553 	mov	b,r4
   0536 C0 05              1554 	push	ar5
   0538 C0 06              1555 	push	ar6
   053A C0 07              1556 	push	ar7
   053C 12s00r00           1557 	lcall	_queuebuf_to_packetbuf
                           1558 ;	../../../core/net/mac/lpp.c:361: ctimer_stop(&i->removal_timer);
   053F A8*00              1559 	mov	r0,_bp
   0541 08                 1560 	inc	r0
   0542 74 06              1561 	mov	a,#0x06
   0544 26                 1562 	add	a,@r0
   0545 FA                 1563 	mov	r2,a
   0546 E4                 1564 	clr	a
   0547 08                 1565 	inc	r0
   0548 36                 1566 	addc	a,@r0
   0549 FB                 1567 	mov	r3,a
   054A 08                 1568 	inc	r0
   054B 86 04              1569 	mov	ar4,@r0
   054D 8A 82              1570 	mov	dpl,r2
   054F 8B 83              1571 	mov	dph,r3
   0551 8C F0              1572 	mov	b,r4
   0553 12s00r00           1573 	lcall	_ctimer_stop
   0556 D0 07              1574 	pop	ar7
   0558 D0 06              1575 	pop	ar6
   055A D0 05              1576 	pop	ar5
                           1577 ;	../../../core/net/mac/lpp.c:362: queuebuf_free(i->packet);
   055C 8D 82              1578 	mov	dpl,r5
   055E 8E 83              1579 	mov	dph,r6
   0560 8F F0              1580 	mov	b,r7
   0562 12s00r00           1581 	lcall	__gptrget
   0565 FD                 1582 	mov	r5,a
   0566 A3                 1583 	inc	dptr
   0567 12s00r00           1584 	lcall	__gptrget
   056A FE                 1585 	mov	r6,a
   056B A3                 1586 	inc	dptr
   056C 12s00r00           1587 	lcall	__gptrget
   056F FF                 1588 	mov	r7,a
   0570 8D 82              1589 	mov	dpl,r5
   0572 8E 83              1590 	mov	dph,r6
   0574 8F F0              1591 	mov	b,r7
   0576 12s00r00           1592 	lcall	_queuebuf_free
                           1593 ;	../../../core/net/mac/lpp.c:363: list_remove(pending_packets_list, i);
   0579 90s00r08           1594 	mov	dptr,#_pending_packets_list
   057C E0                 1595 	movx	a,@dptr
   057D FA                 1596 	mov	r2,a
   057E A3                 1597 	inc	dptr
   057F E0                 1598 	movx	a,@dptr
   0580 FB                 1599 	mov	r3,a
   0581 A3                 1600 	inc	dptr
   0582 E0                 1601 	movx	a,@dptr
   0583 FC                 1602 	mov	r4,a
   0584 A8*00              1603 	mov	r0,_bp
   0586 08                 1604 	inc	r0
   0587 E6                 1605 	mov	a,@r0
   0588 C0 E0              1606 	push	acc
   058A 08                 1607 	inc	r0
   058B E6                 1608 	mov	a,@r0
   058C C0 E0              1609 	push	acc
   058E 08                 1610 	inc	r0
   058F E6                 1611 	mov	a,@r0
   0590 C0 E0              1612 	push	acc
   0592 8A 82              1613 	mov	dpl,r2
   0594 8B 83              1614 	mov	dph,r3
   0596 8C F0              1615 	mov	b,r4
   0598 12s00r00           1616 	lcall	_list_remove
   059B 15 81              1617 	dec	sp
   059D 15 81              1618 	dec	sp
   059F 15 81              1619 	dec	sp
                           1620 ;	../../../core/net/mac/lpp.c:364: list_remove(queued_packets_list, i);
   05A1 90s00r0E           1621 	mov	dptr,#_queued_packets_list
   05A4 E0                 1622 	movx	a,@dptr
   05A5 FA                 1623 	mov	r2,a
   05A6 A3                 1624 	inc	dptr
   05A7 E0                 1625 	movx	a,@dptr
   05A8 FB                 1626 	mov	r3,a
   05A9 A3                 1627 	inc	dptr
   05AA E0                 1628 	movx	a,@dptr
   05AB FC                 1629 	mov	r4,a
   05AC A8*00              1630 	mov	r0,_bp
   05AE 08                 1631 	inc	r0
   05AF E6                 1632 	mov	a,@r0
   05B0 C0 E0              1633 	push	acc
   05B2 08                 1634 	inc	r0
   05B3 E6                 1635 	mov	a,@r0
   05B4 C0 E0              1636 	push	acc
   05B6 08                 1637 	inc	r0
   05B7 E6                 1638 	mov	a,@r0
   05B8 C0 E0              1639 	push	acc
   05BA 8A 82              1640 	mov	dpl,r2
   05BC 8B 83              1641 	mov	dph,r3
   05BE 8C F0              1642 	mov	b,r4
   05C0 12s00r00           1643 	lcall	_list_remove
   05C3 15 81              1644 	dec	sp
   05C5 15 81              1645 	dec	sp
   05C7 15 81              1646 	dec	sp
                           1647 ;	../../../core/net/mac/lpp.c:367: if(list_length(queued_packets_list) == 0 && is_listening == 0) {
   05C9 90s00r0E           1648 	mov	dptr,#_queued_packets_list
   05CC E0                 1649 	movx	a,@dptr
   05CD FA                 1650 	mov	r2,a
   05CE A3                 1651 	inc	dptr
   05CF E0                 1652 	movx	a,@dptr
   05D0 FB                 1653 	mov	r3,a
   05D1 A3                 1654 	inc	dptr
   05D2 E0                 1655 	movx	a,@dptr
   05D3 FC                 1656 	mov	r4,a
   05D4 8A 82              1657 	mov	dpl,r2
   05D6 8B 83              1658 	mov	dph,r3
   05D8 8C F0              1659 	mov	b,r4
   05DA 12s00r00           1660 	lcall	_list_length
   05DD E5 82              1661 	mov	a,dpl
   05DF 85 83 F0           1662 	mov	b,dph
   05E2 45 F0              1663 	orl	a,b
   05E4 70 21              1664 	jnz	00102$
   05E6 90s00r00           1665 	mov	dptr,#_is_listening
   05E9 E0                 1666 	movx	a,@dptr
   05EA FA                 1667 	mov	r2,a
   05EB 70 1A              1668 	jnz	00102$
                           1669 ;	../../../core/net/mac/lpp.c:368: turn_radio_off();
   05ED 12s00r1A           1670 	lcall	_turn_radio_off
                           1671 ;	../../../core/net/mac/lpp.c:369: compower_accumulate(&i->compower);
   05F0 A8*00              1672 	mov	r0,_bp
   05F2 08                 1673 	inc	r0
   05F3 74 1B              1674 	mov	a,#0x1B
   05F5 26                 1675 	add	a,@r0
   05F6 FA                 1676 	mov	r2,a
   05F7 E4                 1677 	clr	a
   05F8 08                 1678 	inc	r0
   05F9 36                 1679 	addc	a,@r0
   05FA FB                 1680 	mov	r3,a
   05FB 08                 1681 	inc	r0
   05FC 86 04              1682 	mov	ar4,@r0
   05FE 8A 82              1683 	mov	dpl,r2
   0600 8B 83              1684 	mov	dph,r3
   0602 8C F0              1685 	mov	b,r4
   0604 12s00r00           1686 	lcall	_compower_accumulate
   0607                    1687 00102$:
                           1688 ;	../../../core/net/mac/lpp.c:372: sent = i->sent_callback;
   0607 E5*00              1689 	mov	a,_bp
   0609 24 04              1690 	add	a,#0x04
   060B F8                 1691 	mov	r0,a
   060C 74 23              1692 	mov	a,#0x23
   060E 26                 1693 	add	a,@r0
   060F FA                 1694 	mov	r2,a
   0610 E4                 1695 	clr	a
   0611 08                 1696 	inc	r0
   0612 36                 1697 	addc	a,@r0
   0613 FB                 1698 	mov	r3,a
   0614 08                 1699 	inc	r0
   0615 86 04              1700 	mov	ar4,@r0
   0617 8A 82              1701 	mov	dpl,r2
   0619 8B 83              1702 	mov	dph,r3
   061B 8C F0              1703 	mov	b,r4
   061D 12s00r00           1704 	lcall	__gptrget
   0620 FA                 1705 	mov	r2,a
   0621 A3                 1706 	inc	dptr
   0622 12s00r00           1707 	lcall	__gptrget
   0625 FB                 1708 	mov	r3,a
   0626 E5*00              1709 	mov	a,_bp
   0628 24 07              1710 	add	a,#0x07
   062A F8                 1711 	mov	r0,a
   062B A6 02              1712 	mov	@r0,ar2
   062D 08                 1713 	inc	r0
   062E A6 03              1714 	mov	@r0,ar3
                           1715 ;	../../../core/net/mac/lpp.c:373: ptr = i->sent_callback_ptr;
   0630 E5*00              1716 	mov	a,_bp
   0632 24 04              1717 	add	a,#0x04
   0634 F8                 1718 	mov	r0,a
   0635 74 25              1719 	mov	a,#0x25
   0637 26                 1720 	add	a,@r0
   0638 FC                 1721 	mov	r4,a
   0639 E4                 1722 	clr	a
   063A 08                 1723 	inc	r0
   063B 36                 1724 	addc	a,@r0
   063C FD                 1725 	mov	r5,a
   063D 08                 1726 	inc	r0
   063E 86 06              1727 	mov	ar6,@r0
   0640 8C 82              1728 	mov	dpl,r4
   0642 8D 83              1729 	mov	dph,r5
   0644 8E F0              1730 	mov	b,r6
   0646 E5*00              1731 	mov	a,_bp
   0648 24 09              1732 	add	a,#0x09
   064A F8                 1733 	mov	r0,a
   064B 12s00r00           1734 	lcall	__gptrget
   064E F6                 1735 	mov	@r0,a
   064F A3                 1736 	inc	dptr
   0650 12s00r00           1737 	lcall	__gptrget
   0653 08                 1738 	inc	r0
   0654 F6                 1739 	mov	@r0,a
   0655 A3                 1740 	inc	dptr
   0656 12s00r00           1741 	lcall	__gptrget
   0659 08                 1742 	inc	r0
   065A F6                 1743 	mov	@r0,a
                           1744 ;	../../../core/net/mac/lpp.c:374: num_transmissions = i->num_transmissions;
   065B E5*00              1745 	mov	a,_bp
   065D 24 04              1746 	add	a,#0x04
   065F F8                 1747 	mov	r0,a
   0660 74 28              1748 	mov	a,#0x28
   0662 26                 1749 	add	a,@r0
   0663 FF                 1750 	mov	r7,a
   0664 E4                 1751 	clr	a
   0665 08                 1752 	inc	r0
   0666 36                 1753 	addc	a,@r0
   0667 FA                 1754 	mov	r2,a
   0668 08                 1755 	inc	r0
   0669 86 03              1756 	mov	ar3,@r0
   066B 8F 82              1757 	mov	dpl,r7
   066D 8A 83              1758 	mov	dph,r2
   066F 8B F0              1759 	mov	b,r3
   0671 12s00r00           1760 	lcall	__gptrget
   0674 FF                 1761 	mov	r7,a
   0675 7A 00              1762 	mov	r2,#0x00
                           1763 ;	../../../core/net/mac/lpp.c:375: memb_free(&queued_packets_memb, i);
   0677 C0 02              1764 	push	ar2
   0679 C0 07              1765 	push	ar7
   067B E5*00              1766 	mov	a,_bp
   067D 24 04              1767 	add	a,#0x04
   067F F8                 1768 	mov	r0,a
   0680 E6                 1769 	mov	a,@r0
   0681 C0 E0              1770 	push	acc
   0683 08                 1771 	inc	r0
   0684 E6                 1772 	mov	a,@r0
   0685 C0 E0              1773 	push	acc
   0687 08                 1774 	inc	r0
   0688 E6                 1775 	mov	a,@r0
   0689 C0 E0              1776 	push	acc
   068B 90s00r11           1777 	mov	dptr,#_queued_packets_memb
   068E 75 F0 00           1778 	mov	b,#0x00
   0691 12s00r00           1779 	lcall	_memb_free
   0694 15 81              1780 	dec	sp
   0696 15 81              1781 	dec	sp
   0698 15 81              1782 	dec	sp
   069A D0 07              1783 	pop	ar7
   069C D0 02              1784 	pop	ar2
                           1785 ;	../../../core/net/mac/lpp.c:376: if(num_transmissions == 0) {
   069E EF                 1786 	mov	a,r7
   069F 4A                 1787 	orl	a,r2
                           1788 ;	../../../core/net/mac/lpp.c:377: status = MAC_TX_ERR;
   06A0 70 05              1789 	jnz	00105$
   06A2 7B 04              1790 	mov	r3,#0x04
   06A4 FC                 1791 	mov	r4,a
   06A5 80 04              1792 	sjmp	00106$
   06A7                    1793 00105$:
                           1794 ;	../../../core/net/mac/lpp.c:379: status = MAC_TX_OK;
   06A7 7B 00              1795 	mov	r3,#0x00
   06A9 7C 00              1796 	mov	r4,#0x00
   06AB                    1797 00106$:
                           1798 ;	../../../core/net/mac/lpp.c:381: mac_call_sent_callback(sent, ptr, status, num_transmissions);
   06AB C0 07              1799 	push	ar7
   06AD C0 02              1800 	push	ar2
   06AF C0 03              1801 	push	ar3
   06B1 C0 04              1802 	push	ar4
   06B3 E5*00              1803 	mov	a,_bp
   06B5 24 09              1804 	add	a,#0x09
   06B7 F8                 1805 	mov	r0,a
   06B8 E6                 1806 	mov	a,@r0
   06B9 C0 E0              1807 	push	acc
   06BB 08                 1808 	inc	r0
   06BC E6                 1809 	mov	a,@r0
   06BD C0 E0              1810 	push	acc
   06BF 08                 1811 	inc	r0
   06C0 E6                 1812 	mov	a,@r0
   06C1 C0 E0              1813 	push	acc
   06C3 E5*00              1814 	mov	a,_bp
   06C5 24 07              1815 	add	a,#0x07
   06C7 F8                 1816 	mov	r0,a
   06C8 86 82              1817 	mov	dpl,@r0
   06CA 08                 1818 	inc	r0
   06CB 86 83              1819 	mov	dph,@r0
   06CD 12s00r00           1820 	lcall	_mac_call_sent_callback
   06D0 E5 81              1821 	mov	a,sp
   06D2 24 F9              1822 	add	a,#0xf9
   06D4 85*00 81           1823 	mov	sp,_bp
   06D7 D0*00              1824 	pop	_bp
   06D9 22                 1825 	ret
                           1826 ;------------------------------------------------------------
                           1827 ;Allocation info for local variables in function 'set_broadcast_flag'
                           1828 ;------------------------------------------------------------
                           1829 ;flag                      Allocated to stack - offset -3
                           1830 ;i                         Allocated to registers r2 r3 r4 
                           1831 ;------------------------------------------------------------
                           1832 ;	../../../core/net/mac/lpp.c:386: set_broadcast_flag(struct queue_list_item *i, uint8_t flag)
                           1833 ;	-----------------------------------------
                           1834 ;	 function set_broadcast_flag
                           1835 ;	-----------------------------------------
   06DA                    1836 _set_broadcast_flag:
   06DA C0*00              1837 	push	_bp
   06DC 85 81*00           1838 	mov	_bp,sp
   06DF AA 82              1839 	mov	r2,dpl
   06E1 AB 83              1840 	mov	r3,dph
   06E3 AC F0              1841 	mov	r4,b
                           1842 ;	../../../core/net/mac/lpp.c:388: i->broadcast_flag = flag;
   06E5 74 29              1843 	mov	a,#0x29
   06E7 2A                 1844 	add	a,r2
   06E8 FD                 1845 	mov	r5,a
   06E9 E4                 1846 	clr	a
   06EA 3B                 1847 	addc	a,r3
   06EB FE                 1848 	mov	r6,a
   06EC 8C 07              1849 	mov	ar7,r4
   06EE 8D 82              1850 	mov	dpl,r5
   06F0 8E 83              1851 	mov	dph,r6
   06F2 8F F0              1852 	mov	b,r7
   06F4 E5*00              1853 	mov	a,_bp
   06F6 24 FD              1854 	add	a,#0xfd
   06F8 F8                 1855 	mov	r0,a
   06F9 E6                 1856 	mov	a,@r0
   06FA 12s00r00           1857 	lcall	__gptrput
                           1858 ;	../../../core/net/mac/lpp.c:389: ctimer_set(&i->removal_timer, PACKET_LIFETIME, remove_queued_packet, i);
   06FD 74 06              1859 	mov	a,#0x06
   06FF 2A                 1860 	add	a,r2
   0700 FD                 1861 	mov	r5,a
   0701 E4                 1862 	clr	a
   0702 3B                 1863 	addc	a,r3
   0703 FE                 1864 	mov	r6,a
   0704 8C 07              1865 	mov	ar7,r4
   0706 C0 02              1866 	push	ar2
   0708 C0 03              1867 	push	ar3
   070A C0 04              1868 	push	ar4
   070C 74rEB              1869 	mov	a,#_remove_queued_packet
   070E C0 E0              1870 	push	acc
   0710 74s04              1871 	mov	a,#(_remove_queued_packet >> 8)
   0712 C0 E0              1872 	push	acc
   0714 74 20              1873 	mov	a,#0x20
   0716 C0 E0              1874 	push	acc
   0718 E4                 1875 	clr	a
   0719 C0 E0              1876 	push	acc
   071B 8D 82              1877 	mov	dpl,r5
   071D 8E 83              1878 	mov	dph,r6
   071F 8F F0              1879 	mov	b,r7
   0721 12s00r00           1880 	lcall	_ctimer_set
   0724 E5 81              1881 	mov	a,sp
   0726 24 F9              1882 	add	a,#0xf9
   0728 F5 81              1883 	mov	sp,a
   072A D0*00              1884 	pop	_bp
   072C 22                 1885 	ret
                           1886 ;------------------------------------------------------------
                           1887 ;Allocation info for local variables in function 'listen_callback'
                           1888 ;------------------------------------------------------------
                           1889 ;periods                   Allocated to registers r2 r3 
                           1890 ;------------------------------------------------------------
                           1891 ;	../../../core/net/mac/lpp.c:394: listen_callback(int periods)
                           1892 ;	-----------------------------------------
                           1893 ;	 function listen_callback
                           1894 ;	-----------------------------------------
   072D                    1895 _listen_callback:
   072D AA 82              1896 	mov	r2,dpl
                           1897 ;	../../../core/net/mac/lpp.c:396: is_listening = periods;
   072F 90s00r00           1898 	mov	dptr,#_is_listening
   0732 EA                 1899 	mov	a,r2
   0733 F0                 1900 	movx	@dptr,a
                           1901 ;	../../../core/net/mac/lpp.c:397: turn_radio_on();
   0734 02s00r00           1902 	ljmp	_turn_radio_on
                           1903 ;------------------------------------------------------------
                           1904 ;Allocation info for local variables in function 'send_probe'
                           1905 ;------------------------------------------------------------
                           1906 ;hdr                       Allocated to registers r2 r3 r4 
                           1907 ;adata                     Allocated to stack - offset 1
                           1908 ;a                         Allocated to stack - offset 4
                           1909 ;hdrlen                    Allocated to registers r5 r6 
                           1910 ;sloc0                     Allocated to stack - offset 7
                           1911 ;sloc1                     Allocated to stack - offset 9
                           1912 ;------------------------------------------------------------
                           1913 ;	../../../core/net/mac/lpp.c:404: send_probe(void)
                           1914 ;	-----------------------------------------
                           1915 ;	 function send_probe
                           1916 ;	-----------------------------------------
   0737                    1917 _send_probe:
   0737 C0*00              1918 	push	_bp
   0739 E5 81              1919 	mov	a,sp
   073B F5*00              1920 	mov	_bp,a
   073D 24 0B              1921 	add	a,#0x0b
   073F F5 81              1922 	mov	sp,a
                           1923 ;	../../../core/net/mac/lpp.c:411: packetbuf_clear();
   0741 12s00r00           1924 	lcall	_packetbuf_clear
                           1925 ;	../../../core/net/mac/lpp.c:412: packetbuf_set_datalen(sizeof(struct lpp_hdr));
   0744 90 00 06           1926 	mov	dptr,#0x0006
   0747 12s00r00           1927 	lcall	_packetbuf_set_datalen
                           1928 ;	../../../core/net/mac/lpp.c:413: hdr = packetbuf_dataptr();
   074A 12s00r00           1929 	lcall	_packetbuf_dataptr
                           1930 ;	../../../core/net/mac/lpp.c:414: hdr->type = TYPE_PROBE;
   074D AA 82              1931 	mov	r2,dpl
   074F AB 83              1932 	mov	r3,dph
   0751 AC F0              1933 	mov	r4,b
   0753 74 01              1934 	mov	a,#0x01
   0755 12s00r00           1935 	lcall	__gptrput
   0758 A3                 1936 	inc	dptr
   0759 E4                 1937 	clr	a
   075A 12s00r00           1938 	lcall	__gptrput
                           1939 ;	../../../core/net/mac/lpp.c:415: rimeaddr_copy(&hdr->sender, &rimeaddr_node_addr);
   075D 74 02              1940 	mov	a,#0x02
   075F 2A                 1941 	add	a,r2
   0760 FD                 1942 	mov	r5,a
   0761 E4                 1943 	clr	a
   0762 3B                 1944 	addc	a,r3
   0763 FE                 1945 	mov	r6,a
   0764 8C 07              1946 	mov	ar7,r4
   0766 C0 02              1947 	push	ar2
   0768 C0 03              1948 	push	ar3
   076A C0 04              1949 	push	ar4
   076C 74r00              1950 	mov	a,#_rimeaddr_node_addr
   076E C0 E0              1951 	push	acc
   0770 74s00              1952 	mov	a,#(_rimeaddr_node_addr >> 8)
   0772 C0 E0              1953 	push	acc
   0774 E4                 1954 	clr	a
   0775 C0 E0              1955 	push	acc
   0777 8D 82              1956 	mov	dpl,r5
   0779 8E 83              1957 	mov	dph,r6
   077B 8F F0              1958 	mov	b,r7
   077D 12s00r00           1959 	lcall	_rimeaddr_copy
   0780 15 81              1960 	dec	sp
   0782 15 81              1961 	dec	sp
   0784 15 81              1962 	dec	sp
   0786 D0 04              1963 	pop	ar4
   0788 D0 03              1964 	pop	ar3
   078A D0 02              1965 	pop	ar2
                           1966 ;	../../../core/net/mac/lpp.c:417: rimeaddr_copy(&hdr->receiver, &rimeaddr_null);
   078C 74 04              1967 	mov	a,#0x04
   078E 2A                 1968 	add	a,r2
   078F FD                 1969 	mov	r5,a
   0790 E4                 1970 	clr	a
   0791 3B                 1971 	addc	a,r3
   0792 FE                 1972 	mov	r6,a
   0793 8C 07              1973 	mov	ar7,r4
   0795 C0 02              1974 	push	ar2
   0797 C0 03              1975 	push	ar3
   0799 C0 04              1976 	push	ar4
   079B 74r00              1977 	mov	a,#_rimeaddr_null
   079D C0 E0              1978 	push	acc
   079F 74s00              1979 	mov	a,#(_rimeaddr_null >> 8)
   07A1 C0 E0              1980 	push	acc
   07A3 74 80              1981 	mov	a,#0x80
   07A5 C0 E0              1982 	push	acc
   07A7 8D 82              1983 	mov	dpl,r5
   07A9 8E 83              1984 	mov	dph,r6
   07AB 8F F0              1985 	mov	b,r7
   07AD 12s00r00           1986 	lcall	_rimeaddr_copy
   07B0 15 81              1987 	dec	sp
   07B2 15 81              1988 	dec	sp
   07B4 15 81              1989 	dec	sp
                           1990 ;	../../../core/net/mac/lpp.c:419: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &rimeaddr_null);
   07B6 74r00              1991 	mov	a,#_rimeaddr_null
   07B8 C0 E0              1992 	push	acc
   07BA 74s00              1993 	mov	a,#(_rimeaddr_null >> 8)
   07BC C0 E0              1994 	push	acc
   07BE 74 80              1995 	mov	a,#0x80
   07C0 C0 E0              1996 	push	acc
   07C2 75 82 19           1997 	mov	dpl,#0x19
   07C5 12s00r00           1998 	lcall	_packetbuf_set_addr
   07C8 15 81              1999 	dec	sp
   07CA 15 81              2000 	dec	sp
   07CC 15 81              2001 	dec	sp
                           2002 ;	../../../core/net/mac/lpp.c:421: int hdrlen = NETSTACK_FRAMER.create();
   07CE 90s00r00           2003 	mov	dptr,#_framer_nullmac
   07D1 E4                 2004 	clr	a
   07D2 93                 2005 	movc	a,@a+dptr
   07D3 FD                 2006 	mov	r5,a
   07D4 A3                 2007 	inc	dptr
   07D5 E4                 2008 	clr	a
   07D6 93                 2009 	movc	a,@a+dptr
   07D7 FE                 2010 	mov	r6,a
   07D8 8D 82              2011 	mov	dpl,r5
   07DA 8E 83              2012 	mov	dph,r6
   07DC 12s00r00           2013 	lcall	__sdcc_call_dptr
   07DF AD 82              2014 	mov	r5,dpl
   07E1 AE 83              2015 	mov	r6,dph
   07E3 D0 04              2016 	pop	ar4
   07E5 D0 03              2017 	pop	ar3
   07E7 D0 02              2018 	pop	ar2
                           2019 ;	../../../core/net/mac/lpp.c:422: if(hdrlen == 0) {
   07E9 ED                 2020 	mov	a,r5
   07EA 4E                 2021 	orl	a,r6
   07EB 70 03              2022 	jnz	00102$
                           2023 ;	../../../core/net/mac/lpp.c:425: return;
   07ED 02s09rF2           2024 	ljmp	00107$
   07F0                    2025 00102$:
                           2026 ;	../../../core/net/mac/lpp.c:430: adata = (struct announcement_msg *)((char *)hdr + sizeof(struct lpp_hdr));
   07F0 A8*00              2027 	mov	r0,_bp
   07F2 08                 2028 	inc	r0
   07F3 74 06              2029 	mov	a,#0x06
   07F5 2A                 2030 	add	a,r2
   07F6 F6                 2031 	mov	@r0,a
   07F7 E4                 2032 	clr	a
   07F8 3B                 2033 	addc	a,r3
   07F9 08                 2034 	inc	r0
   07FA F6                 2035 	mov	@r0,a
   07FB 08                 2036 	inc	r0
   07FC A6 04              2037 	mov	@r0,ar4
                           2038 ;	../../../core/net/mac/lpp.c:432: adata->num = 0;
   07FE A8*00              2039 	mov	r0,_bp
   0800 08                 2040 	inc	r0
   0801 86 82              2041 	mov	dpl,@r0
   0803 08                 2042 	inc	r0
   0804 86 83              2043 	mov	dph,@r0
   0806 08                 2044 	inc	r0
   0807 86 F0              2045 	mov	b,@r0
   0809 E4                 2046 	clr	a
   080A 12s00r00           2047 	lcall	__gptrput
   080D A3                 2048 	inc	dptr
   080E E4                 2049 	clr	a
   080F 12s00r00           2050 	lcall	__gptrput
                           2051 ;	../../../core/net/mac/lpp.c:433: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
   0812 12s00r00           2052 	lcall	_announcement_list
   0815 AD 82              2053 	mov	r5,dpl
   0817 AE 83              2054 	mov	r6,dph
   0819 AF F0              2055 	mov	r7,b
   081B E5*00              2056 	mov	a,_bp
   081D 24 04              2057 	add	a,#0x04
   081F F8                 2058 	mov	r0,a
   0820 A6 05              2059 	mov	@r0,ar5
   0822 08                 2060 	inc	r0
   0823 A6 06              2061 	mov	@r0,ar6
   0825 08                 2062 	inc	r0
   0826 A6 07              2063 	mov	@r0,ar7
   0828 A8*00              2064 	mov	r0,_bp
   082A 08                 2065 	inc	r0
   082B 74 02              2066 	mov	a,#0x02
   082D 26                 2067 	add	a,@r0
   082E FD                 2068 	mov	r5,a
   082F E4                 2069 	clr	a
   0830 08                 2070 	inc	r0
   0831 36                 2071 	addc	a,@r0
   0832 FE                 2072 	mov	r6,a
   0833 08                 2073 	inc	r0
   0834 86 07              2074 	mov	ar7,@r0
   0836                    2075 00103$:
   0836 E5*00              2076 	mov	a,_bp
   0838 24 04              2077 	add	a,#0x04
   083A F8                 2078 	mov	r0,a
   083B B6 00 0B           2079 	cjne	@r0,#0x00,00114$
   083E 08                 2080 	inc	r0
   083F B6 00 07           2081 	cjne	@r0,#0x00,00114$
   0842 08                 2082 	inc	r0
   0843 B6 00 03           2083 	cjne	@r0,#0x00,00114$
   0846 02s09r69           2084 	ljmp	00106$
   0849                    2085 00114$:
                           2086 ;	../../../core/net/mac/lpp.c:434: adata->data[adata->num].id = a->id;
   0849 A8*00              2087 	mov	r0,_bp
   084B 08                 2088 	inc	r0
   084C 86 82              2089 	mov	dpl,@r0
   084E 08                 2090 	inc	r0
   084F 86 83              2091 	mov	dph,@r0
   0851 08                 2092 	inc	r0
   0852 86 F0              2093 	mov	b,@r0
   0854 12s00r00           2094 	lcall	__gptrget
   0857 FA                 2095 	mov	r2,a
   0858 A3                 2096 	inc	dptr
   0859 12s00r00           2097 	lcall	__gptrget
   085C FB                 2098 	mov	r3,a
   085D E5*00              2099 	mov	a,_bp
   085F 24 07              2100 	add	a,#0x07
   0861 F8                 2101 	mov	r0,a
   0862 A6 02              2102 	mov	@r0,ar2
   0864 EB                 2103 	mov	a,r3
   0865 C6                 2104 	xch	a,@r0
   0866 25 E0              2105 	add	a,acc
   0868 C6                 2106 	xch	a,@r0
   0869 33                 2107 	rlc	a
   086A C6                 2108 	xch	a,@r0
   086B 25 E0              2109 	add	a,acc
   086D C6                 2110 	xch	a,@r0
   086E 33                 2111 	rlc	a
   086F 08                 2112 	inc	r0
   0870 F6                 2113 	mov	@r0,a
   0871 E5*00              2114 	mov	a,_bp
   0873 24 07              2115 	add	a,#0x07
   0875 F8                 2116 	mov	r0,a
   0876 E5*00              2117 	mov	a,_bp
   0878 24 09              2118 	add	a,#0x09
   087A F9                 2119 	mov	r1,a
   087B E6                 2120 	mov	a,@r0
   087C 2D                 2121 	add	a,r5
   087D F7                 2122 	mov	@r1,a
   087E 08                 2123 	inc	r0
   087F E6                 2124 	mov	a,@r0
   0880 3E                 2125 	addc	a,r6
   0881 09                 2126 	inc	r1
   0882 F7                 2127 	mov	@r1,a
   0883 09                 2128 	inc	r1
   0884 A7 07              2129 	mov	@r1,ar7
   0886 E5*00              2130 	mov	a,_bp
   0888 24 04              2131 	add	a,#0x04
   088A F8                 2132 	mov	r0,a
   088B 74 03              2133 	mov	a,#0x03
   088D 26                 2134 	add	a,@r0
   088E FA                 2135 	mov	r2,a
   088F E4                 2136 	clr	a
   0890 08                 2137 	inc	r0
   0891 36                 2138 	addc	a,@r0
   0892 FB                 2139 	mov	r3,a
   0893 08                 2140 	inc	r0
   0894 86 04              2141 	mov	ar4,@r0
   0896 8A 82              2142 	mov	dpl,r2
   0898 8B 83              2143 	mov	dph,r3
   089A 8C F0              2144 	mov	b,r4
   089C 12s00r00           2145 	lcall	__gptrget
   089F FA                 2146 	mov	r2,a
   08A0 A3                 2147 	inc	dptr
   08A1 12s00r00           2148 	lcall	__gptrget
   08A4 FB                 2149 	mov	r3,a
   08A5 E5*00              2150 	mov	a,_bp
   08A7 24 09              2151 	add	a,#0x09
   08A9 F8                 2152 	mov	r0,a
   08AA 86 82              2153 	mov	dpl,@r0
   08AC 08                 2154 	inc	r0
   08AD 86 83              2155 	mov	dph,@r0
   08AF 08                 2156 	inc	r0
   08B0 86 F0              2157 	mov	b,@r0
   08B2 EA                 2158 	mov	a,r2
   08B3 12s00r00           2159 	lcall	__gptrput
   08B6 A3                 2160 	inc	dptr
   08B7 EB                 2161 	mov	a,r3
   08B8 12s00r00           2162 	lcall	__gptrput
                           2163 ;	../../../core/net/mac/lpp.c:435: adata->data[adata->num].value = a->value;
   08BB E5*00              2164 	mov	a,_bp
   08BD 24 07              2165 	add	a,#0x07
   08BF F8                 2166 	mov	r0,a
   08C0 E6                 2167 	mov	a,@r0
   08C1 2D                 2168 	add	a,r5
   08C2 FA                 2169 	mov	r2,a
   08C3 08                 2170 	inc	r0
   08C4 E6                 2171 	mov	a,@r0
   08C5 3E                 2172 	addc	a,r6
   08C6 FB                 2173 	mov	r3,a
   08C7 8F 04              2174 	mov	ar4,r7
   08C9 74 02              2175 	mov	a,#0x02
   08CB 2A                 2176 	add	a,r2
   08CC FA                 2177 	mov	r2,a
   08CD E4                 2178 	clr	a
   08CE 3B                 2179 	addc	a,r3
   08CF FB                 2180 	mov	r3,a
   08D0 C0 05              2181 	push	ar5
   08D2 C0 06              2182 	push	ar6
   08D4 C0 07              2183 	push	ar7
   08D6 E5*00              2184 	mov	a,_bp
   08D8 24 04              2185 	add	a,#0x04
   08DA F8                 2186 	mov	r0,a
   08DB 74 05              2187 	mov	a,#0x05
   08DD 26                 2188 	add	a,@r0
   08DE FD                 2189 	mov	r5,a
   08DF E4                 2190 	clr	a
   08E0 08                 2191 	inc	r0
   08E1 36                 2192 	addc	a,@r0
   08E2 FE                 2193 	mov	r6,a
   08E3 08                 2194 	inc	r0
   08E4 86 07              2195 	mov	ar7,@r0
   08E6 8D 82              2196 	mov	dpl,r5
   08E8 8E 83              2197 	mov	dph,r6
   08EA 8F F0              2198 	mov	b,r7
   08EC 12s00r00           2199 	lcall	__gptrget
   08EF FD                 2200 	mov	r5,a
   08F0 A3                 2201 	inc	dptr
   08F1 12s00r00           2202 	lcall	__gptrget
   08F4 FE                 2203 	mov	r6,a
   08F5 8A 82              2204 	mov	dpl,r2
   08F7 8B 83              2205 	mov	dph,r3
   08F9 8C F0              2206 	mov	b,r4
   08FB ED                 2207 	mov	a,r5
   08FC 12s00r00           2208 	lcall	__gptrput
   08FF A3                 2209 	inc	dptr
   0900 EE                 2210 	mov	a,r6
   0901 12s00r00           2211 	lcall	__gptrput
                           2212 ;	../../../core/net/mac/lpp.c:436: adata->num++;
   0904 A8*00              2213 	mov	r0,_bp
   0906 08                 2214 	inc	r0
   0907 86 82              2215 	mov	dpl,@r0
   0909 08                 2216 	inc	r0
   090A 86 83              2217 	mov	dph,@r0
   090C 08                 2218 	inc	r0
   090D 86 F0              2219 	mov	b,@r0
   090F 12s00r00           2220 	lcall	__gptrget
   0912 FA                 2221 	mov	r2,a
   0913 A3                 2222 	inc	dptr
   0914 12s00r00           2223 	lcall	__gptrget
   0917 FB                 2224 	mov	r3,a
   0918 0A                 2225 	inc	r2
   0919 BA 00 01           2226 	cjne	r2,#0x00,00115$
   091C 0B                 2227 	inc	r3
   091D                    2228 00115$:
   091D A8*00              2229 	mov	r0,_bp
   091F 08                 2230 	inc	r0
   0920 86 82              2231 	mov	dpl,@r0
   0922 08                 2232 	inc	r0
   0923 86 83              2233 	mov	dph,@r0
   0925 08                 2234 	inc	r0
   0926 86 F0              2235 	mov	b,@r0
   0928 EA                 2236 	mov	a,r2
   0929 12s00r00           2237 	lcall	__gptrput
   092C A3                 2238 	inc	dptr
   092D EB                 2239 	mov	a,r3
   092E 12s00r00           2240 	lcall	__gptrput
                           2241 ;	../../../core/net/mac/lpp.c:433: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
   0931 E5*00              2242 	mov	a,_bp
   0933 24 04              2243 	add	a,#0x04
   0935 F8                 2244 	mov	r0,a
   0936 86 82              2245 	mov	dpl,@r0
   0938 08                 2246 	inc	r0
   0939 86 83              2247 	mov	dph,@r0
   093B 08                 2248 	inc	r0
   093C 86 F0              2249 	mov	b,@r0
   093E C0 05              2250 	push	ar5
   0940 C0 06              2251 	push	ar6
   0942 C0 07              2252 	push	ar7
   0944 12s00r00           2253 	lcall	_list_item_next
   0947 AA 82              2254 	mov	r2,dpl
   0949 AB 83              2255 	mov	r3,dph
   094B AC F0              2256 	mov	r4,b
   094D D0 07              2257 	pop	ar7
   094F D0 06              2258 	pop	ar6
   0951 D0 05              2259 	pop	ar5
   0953 E5*00              2260 	mov	a,_bp
   0955 24 04              2261 	add	a,#0x04
   0957 F8                 2262 	mov	r0,a
   0958 A6 02              2263 	mov	@r0,ar2
   095A 08                 2264 	inc	r0
   095B A6 03              2265 	mov	@r0,ar3
   095D 08                 2266 	inc	r0
   095E A6 04              2267 	mov	@r0,ar4
   0960 D0 07              2268 	pop	ar7
   0962 D0 06              2269 	pop	ar6
   0964 D0 05              2270 	pop	ar5
   0966 02s08r36           2271 	ljmp	00103$
   0969                    2272 00106$:
                           2273 ;	../../../core/net/mac/lpp.c:441: sizeof(struct announcement_data) * adata->num);
   0969 A8*00              2274 	mov	r0,_bp
   096B 08                 2275 	inc	r0
   096C 86 82              2276 	mov	dpl,@r0
   096E 08                 2277 	inc	r0
   096F 86 83              2278 	mov	dph,@r0
   0971 08                 2279 	inc	r0
   0972 86 F0              2280 	mov	b,@r0
   0974 12s00r00           2281 	lcall	__gptrget
   0977 FA                 2282 	mov	r2,a
   0978 A3                 2283 	inc	dptr
   0979 12s00r00           2284 	lcall	__gptrget
   097C CA                 2285 	xch	a,r2
   097D 25 E0              2286 	add	a,acc
   097F CA                 2287 	xch	a,r2
   0980 33                 2288 	rlc	a
   0981 CA                 2289 	xch	a,r2
   0982 25 E0              2290 	add	a,acc
   0984 CA                 2291 	xch	a,r2
   0985 33                 2292 	rlc	a
   0986 FB                 2293 	mov	r3,a
   0987 74 08              2294 	mov	a,#0x08
   0989 2A                 2295 	add	a,r2
   098A FA                 2296 	mov	r2,a
   098B E4                 2297 	clr	a
   098C 3B                 2298 	addc	a,r3
   098D FB                 2299 	mov	r3,a
   098E 8A 82              2300 	mov	dpl,r2
   0990 8B 83              2301 	mov	dph,r3
   0992 12s00r00           2302 	lcall	_packetbuf_set_datalen
                           2303 ;	../../../core/net/mac/lpp.c:450: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
   0995 90s00r06           2304 	mov	dptr,#(_cc2430_rf_driver + 0x0006)
   0998 E4                 2305 	clr	a
   0999 93                 2306 	movc	a,@a+dptr
   099A FA                 2307 	mov	r2,a
   099B A3                 2308 	inc	dptr
   099C E4                 2309 	clr	a
   099D 93                 2310 	movc	a,@a+dptr
   099E FB                 2311 	mov	r3,a
   099F C0 02              2312 	push	ar2
   09A1 C0 03              2313 	push	ar3
   09A3 12s00r00           2314 	lcall	_packetbuf_totlen
   09A6 C8                 2315 	xch	a,r0
   09A7 E5*00              2316 	mov	a,_bp
   09A9 24 09              2317 	add	a,#0x09
   09AB C8                 2318 	xch	a,r0
   09AC A6 82              2319 	mov	@r0,dpl
   09AE 08                 2320 	inc	r0
   09AF A6 83              2321 	mov	@r0,dph
   09B1 12s00r00           2322 	lcall	_packetbuf_hdrptr
   09B4 AE 82              2323 	mov	r6,dpl
   09B6 AF 83              2324 	mov	r7,dph
   09B8 AC F0              2325 	mov	r4,b
   09BA D0 03              2326 	pop	ar3
   09BC D0 02              2327 	pop	ar2
   09BE C0 02              2328 	push	ar2
   09C0 C0 03              2329 	push	ar3
   09C2 E5*00              2330 	mov	a,_bp
   09C4 24 09              2331 	add	a,#0x09
   09C6 F8                 2332 	mov	r0,a
   09C7 E6                 2333 	mov	a,@r0
   09C8 C0 E0              2334 	push	acc
   09CA 08                 2335 	inc	r0
   09CB E6                 2336 	mov	a,@r0
   09CC C0 E0              2337 	push	acc
   09CE 74rE1              2338 	mov	a,#00116$
   09D0 C0 E0              2339 	push	acc
   09D2 74s09              2340 	mov	a,#(00116$ >> 8)
   09D4 C0 E0              2341 	push	acc
   09D6 C0 02              2342 	push	ar2
   09D8 C0 03              2343 	push	ar3
   09DA 8E 82              2344 	mov	dpl,r6
   09DC 8F 83              2345 	mov	dph,r7
   09DE 8C F0              2346 	mov	b,r4
   09E0 22                 2347 	ret
   09E1                    2348 00116$:
   09E1 15 81              2349 	dec	sp
   09E3 15 81              2350 	dec	sp
   09E5 D0 03              2351 	pop	ar3
   09E7 D0 02              2352 	pop	ar2
                           2353 ;	../../../core/net/mac/lpp.c:452: compower_accumulate(&compower_idle_activity);
   09E9 90s00r00           2354 	mov	dptr,#_compower_idle_activity
   09EC 75 F0 00           2355 	mov	b,#0x00
   09EF 12s00r00           2356 	lcall	_compower_accumulate
   09F2                    2357 00107$:
   09F2 85*00 81           2358 	mov	sp,_bp
   09F5 D0*00              2359 	pop	_bp
   09F7 22                 2360 	ret
                           2361 ;------------------------------------------------------------
                           2362 ;Allocation info for local variables in function 'send_stream_probe'
                           2363 ;------------------------------------------------------------
                           2364 ;dummy                     Allocated to registers 
                           2365 ;------------------------------------------------------------
                           2366 ;	../../../core/net/mac/lpp.c:456: send_stream_probe(void *dummy)
                           2367 ;	-----------------------------------------
                           2368 ;	 function send_stream_probe
                           2369 ;	-----------------------------------------
   09F8                    2370 _send_stream_probe:
                           2371 ;	../../../core/net/mac/lpp.c:460: turn_radio_on();
   09F8 12s00r00           2372 	lcall	_turn_radio_on
                           2373 ;	../../../core/net/mac/lpp.c:463: send_probe();
   09FB 12s07r37           2374 	lcall	_send_probe
                           2375 ;	../../../core/net/mac/lpp.c:465: is_streaming = 1;
   09FE 90s01r94           2376 	mov	dptr,#_is_streaming
   0A01 74 01              2377 	mov	a,#0x01
   0A03 F0                 2378 	movx	@dptr,a
   0A04 22                 2379 	ret
                           2380 ;------------------------------------------------------------
                           2381 ;Allocation info for local variables in function 'num_packets_to_send'
                           2382 ;------------------------------------------------------------
                           2383 ;i                         Allocated to registers r2 r3 r4 
                           2384 ;num                       Allocated to registers r5 r6 
                           2385 ;sloc0                     Allocated to stack - offset 6
                           2386 ;------------------------------------------------------------
                           2387 ;	../../../core/net/mac/lpp.c:469: num_packets_to_send(void)
                           2388 ;	-----------------------------------------
                           2389 ;	 function num_packets_to_send
                           2390 ;	-----------------------------------------
   0A05                    2391 _num_packets_to_send:
                           2392 ;	../../../core/net/mac/lpp.c:475: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
   0A05 90s00r0E           2393 	mov	dptr,#_queued_packets_list
   0A08 E0                 2394 	movx	a,@dptr
   0A09 FA                 2395 	mov	r2,a
   0A0A A3                 2396 	inc	dptr
   0A0B E0                 2397 	movx	a,@dptr
   0A0C FB                 2398 	mov	r3,a
   0A0D A3                 2399 	inc	dptr
   0A0E E0                 2400 	movx	a,@dptr
   0A0F FC                 2401 	mov	r4,a
   0A10 8A 82              2402 	mov	dpl,r2
   0A12 8B 83              2403 	mov	dph,r3
   0A14 8C F0              2404 	mov	b,r4
   0A16 12s00r00           2405 	lcall	_list_head
   0A19 AA 82              2406 	mov	r2,dpl
   0A1B AB 83              2407 	mov	r3,dph
   0A1D AC F0              2408 	mov	r4,b
   0A1F 7D 00              2409 	mov	r5,#0x00
   0A21 7E 00              2410 	mov	r6,#0x00
   0A23                    2411 00104$:
   0A23 BA 00 08           2412 	cjne	r2,#0x00,00114$
   0A26 BB 00 05           2413 	cjne	r3,#0x00,00114$
   0A29 BC 00 02           2414 	cjne	r4,#0x00,00114$
   0A2C 80 4B              2415 	sjmp	00107$
   0A2E                    2416 00114$:
                           2417 ;	../../../core/net/mac/lpp.c:476: if(i->broadcast_flag == BROADCAST_FLAG_SEND ||
   0A2E C0 05              2418 	push	ar5
   0A30 C0 06              2419 	push	ar6
   0A32 74 29              2420 	mov	a,#0x29
   0A34 2A                 2421 	add	a,r2
   0A35 FF                 2422 	mov	r7,a
   0A36 E4                 2423 	clr	a
   0A37 3B                 2424 	addc	a,r3
   0A38 FD                 2425 	mov	r5,a
   0A39 8C 06              2426 	mov	ar6,r4
   0A3B 8F 82              2427 	mov	dpl,r7
   0A3D 8D 83              2428 	mov	dph,r5
   0A3F 8E F0              2429 	mov	b,r6
   0A41 12s00r00           2430 	lcall	__gptrget
   0A44 FF                 2431 	mov	r7,a
   0A45 BF 03 06           2432 	cjne	r7,#0x03,00115$
   0A48 D0 06              2433 	pop	ar6
   0A4A D0 05              2434 	pop	ar5
   0A4C 80 07              2435 	sjmp	00101$
   0A4E                    2436 00115$:
   0A4E D0 06              2437 	pop	ar6
   0A50 D0 05              2438 	pop	ar5
                           2439 ;	../../../core/net/mac/lpp.c:477: i->broadcast_flag == BROADCAST_FLAG_NONE) {
   0A52 EF                 2440 	mov	a,r7
   0A53 70 05              2441 	jnz	00106$
   0A55                    2442 00101$:
                           2443 ;	../../../core/net/mac/lpp.c:478: ++num;
   0A55 0D                 2444 	inc	r5
   0A56 BD 00 01           2445 	cjne	r5,#0x00,00117$
   0A59 0E                 2446 	inc	r6
   0A5A                    2447 00117$:
   0A5A                    2448 00106$:
                           2449 ;	../../../core/net/mac/lpp.c:475: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
   0A5A C0 05              2450 	push	ar5
   0A5C C0 06              2451 	push	ar6
   0A5E 8A 82              2452 	mov	dpl,r2
   0A60 8B 83              2453 	mov	dph,r3
   0A62 8C F0              2454 	mov	b,r4
   0A64 12s00r00           2455 	lcall	_list_item_next
   0A67 AF 82              2456 	mov	r7,dpl
   0A69 AD 83              2457 	mov	r5,dph
   0A6B AE F0              2458 	mov	r6,b
   0A6D 8F 02              2459 	mov	ar2,r7
   0A6F 8D 03              2460 	mov	ar3,r5
   0A71 8E 04              2461 	mov	ar4,r6
   0A73 D0 06              2462 	pop	ar6
   0A75 D0 05              2463 	pop	ar5
   0A77 80 AA              2464 	sjmp	00104$
   0A79                    2465 00107$:
                           2466 ;	../../../core/net/mac/lpp.c:481: return num;
   0A79 8D 82              2467 	mov	dpl,r5
   0A7B 8E 83              2468 	mov	dph,r6
   0A7D 22                 2469 	ret
                           2470 ;------------------------------------------------------------
                           2471 ;Allocation info for local variables in function 'dutycycle'
                           2472 ;------------------------------------------------------------
                           2473 ;ptr                       Allocated to registers r2 r3 r4 
                           2474 ;t                         Allocated to stack - offset 1
                           2475 ;p                         Allocated to registers r5 r3 r4 
                           2476 ;PT_YIELD_FLAG             Allocated to registers r5 
                           2477 ;p                         Allocated to registers r5 r3 r4 
                           2478 ;------------------------------------------------------------
                           2479 ;	../../../core/net/mac/lpp.c:493: dutycycle(void *ptr)
                           2480 ;	-----------------------------------------
                           2481 ;	 function dutycycle
                           2482 ;	-----------------------------------------
   0A7E                    2483 _dutycycle:
   0A7E C0*00              2484 	push	_bp
   0A80 85 81*00           2485 	mov	_bp,sp
   0A83 05 81              2486 	inc	sp
   0A85 05 81              2487 	inc	sp
   0A87 05 81              2488 	inc	sp
   0A89 AA 82              2489 	mov	r2,dpl
   0A8B AB 83              2490 	mov	r3,dph
   0A8D AC F0              2491 	mov	r4,b
                           2492 ;	../../../core/net/mac/lpp.c:495: struct ctimer *t = ptr;
   0A8F A8*00              2493 	mov	r0,_bp
   0A91 08                 2494 	inc	r0
   0A92 A6 02              2495 	mov	@r0,ar2
   0A94 08                 2496 	inc	r0
   0A95 A6 03              2497 	mov	@r0,ar3
   0A97 08                 2498 	inc	r0
   0A98 A6 04              2499 	mov	@r0,ar4
                           2500 ;	../../../core/net/mac/lpp.c:498: PT_BEGIN(&dutycycle_pt);
   0A9A 7D 01              2501 	mov	r5,#0x01
   0A9C 90s00r09           2502 	mov	dptr,#_dutycycle_pt
   0A9F E0                 2503 	movx	a,@dptr
   0AA0 FE                 2504 	mov	r6,a
   0AA1 A3                 2505 	inc	dptr
   0AA2 E0                 2506 	movx	a,@dptr
   0AA3 FF                 2507 	mov	r7,a
   0AA4 BE 00 05           2508 	cjne	r6,#0x00,00171$
   0AA7 BF 00 02           2509 	cjne	r7,#0x00,00171$
   0AAA 80 27              2510 	sjmp	00139$
   0AAC                    2511 00171$:
   0AAC BE 0E 06           2512 	cjne	r6,#0x0E,00172$
   0AAF BF 02 03           2513 	cjne	r7,#0x02,00172$
   0AB2 02s0Br85           2514 	ljmp	00104$
   0AB5                    2515 00172$:
   0AB5 BE 30 06           2516 	cjne	r6,#0x30,00173$
   0AB8 BF 02 03           2517 	cjne	r7,#0x02,00173$
   0ABB 02s0Cr95           2518 	ljmp	00114$
   0ABE                    2519 00173$:
   0ABE BE 3E 06           2520 	cjne	r6,#0x3E,00174$
   0AC1 BF 02 03           2521 	cjne	r7,#0x02,00174$
   0AC4 02s0CrE4           2522 	ljmp	00120$
   0AC7                    2523 00174$:
   0AC7 BE 44 06           2524 	cjne	r6,#0x44,00175$
   0ACA BF 02 03           2525 	cjne	r7,#0x02,00175$
   0ACD 02s0Dr2F           2526 	ljmp	00129$
   0AD0                    2527 00175$:
   0AD0 02s0Dr3A           2528 	ljmp	00141$
                           2529 ;	../../../core/net/mac/lpp.c:500: while(1) {
   0AD3                    2530 00139$:
                           2531 ;	../../../core/net/mac/lpp.c:508: for(p = list_head(queued_packets_list); p != NULL; p = list_item_next(p)) {
   0AD3 90s00r0E           2532 	mov	dptr,#_queued_packets_list
   0AD6 E0                 2533 	movx	a,@dptr
   0AD7 FE                 2534 	mov	r6,a
   0AD8 A3                 2535 	inc	dptr
   0AD9 E0                 2536 	movx	a,@dptr
   0ADA FF                 2537 	mov	r7,a
   0ADB A3                 2538 	inc	dptr
   0ADC E0                 2539 	movx	a,@dptr
   0ADD FA                 2540 	mov	r2,a
   0ADE 8E 82              2541 	mov	dpl,r6
   0AE0 8F 83              2542 	mov	dph,r7
   0AE2 8A F0              2543 	mov	b,r2
   0AE4 12s00r00           2544 	lcall	_list_head
   0AE7 AA 82              2545 	mov	r2,dpl
   0AE9 AB 83              2546 	mov	r3,dph
   0AEB AC F0              2547 	mov	r4,b
   0AED 8A 05              2548 	mov	ar5,r2
                           2549 ;	../../../core/net/mac/lpp.c:584: PT_END(&dutycycle_pt);
                           2550 ;	../../../core/net/mac/lpp.c:508: for(p = list_head(queued_packets_list); p != NULL; p = list_item_next(p)) {
   0AEF                    2551 00142$:
   0AEF BD 00 08           2552 	cjne	r5,#0x00,00176$
   0AF2 BB 00 05           2553 	cjne	r3,#0x00,00176$
   0AF5 BC 00 02           2554 	cjne	r4,#0x00,00176$
   0AF8 80 48              2555 	sjmp	00145$
   0AFA                    2556 00176$:
                           2557 ;	../../../core/net/mac/lpp.c:509: if(p->broadcast_flag == BROADCAST_FLAG_WAITING) {
   0AFA 74 29              2558 	mov	a,#0x29
   0AFC 2D                 2559 	add	a,r5
   0AFD FE                 2560 	mov	r6,a
   0AFE E4                 2561 	clr	a
   0AFF 3B                 2562 	addc	a,r3
   0B00 FF                 2563 	mov	r7,a
   0B01 8C 02              2564 	mov	ar2,r4
   0B03 8E 82              2565 	mov	dpl,r6
   0B05 8F 83              2566 	mov	dph,r7
   0B07 8A F0              2567 	mov	b,r2
   0B09 12s00r00           2568 	lcall	__gptrget
   0B0C FE                 2569 	mov	r6,a
   0B0D BE 01 1B           2570 	cjne	r6,#0x01,00144$
                           2571 ;	../../../core/net/mac/lpp.c:511: set_broadcast_flag(p, BROADCAST_FLAG_PENDING);
   0B10 C0 03              2572 	push	ar3
   0B12 C0 04              2573 	push	ar4
   0B14 C0 05              2574 	push	ar5
   0B16 74 02              2575 	mov	a,#0x02
   0B18 C0 E0              2576 	push	acc
   0B1A 8D 82              2577 	mov	dpl,r5
   0B1C 8B 83              2578 	mov	dph,r3
   0B1E 8C F0              2579 	mov	b,r4
   0B20 12s06rDA           2580 	lcall	_set_broadcast_flag
   0B23 15 81              2581 	dec	sp
   0B25 D0 05              2582 	pop	ar5
   0B27 D0 04              2583 	pop	ar4
   0B29 D0 03              2584 	pop	ar3
   0B2B                    2585 00144$:
                           2586 ;	../../../core/net/mac/lpp.c:508: for(p = list_head(queued_packets_list); p != NULL; p = list_item_next(p)) {
   0B2B 8D 82              2587 	mov	dpl,r5
   0B2D 8B 83              2588 	mov	dph,r3
   0B2F 8C F0              2589 	mov	b,r4
   0B31 12s00r00           2590 	lcall	_list_item_next
   0B34 AE 82              2591 	mov	r6,dpl
   0B36 AF 83              2592 	mov	r7,dph
   0B38 AA F0              2593 	mov	r2,b
   0B3A 8E 05              2594 	mov	ar5,r6
   0B3C 8F 03              2595 	mov	ar3,r7
   0B3E 8A 04              2596 	mov	ar4,r2
   0B40 80 AD              2597 	sjmp	00142$
   0B42                    2598 00145$:
                           2599 ;	../../../core/net/mac/lpp.c:519: turn_radio_on();
   0B42 12s00r00           2600 	lcall	_turn_radio_on
                           2601 ;	../../../core/net/mac/lpp.c:522: send_probe();
   0B45 12s07r37           2602 	lcall	_send_probe
                           2603 ;	../../../core/net/mac/lpp.c:525: ctimer_set(t, LISTEN_TIME, (void (*)(void *))dutycycle, t);
   0B48 A8*00              2604 	mov	r0,_bp
   0B4A 08                 2605 	inc	r0
   0B4B E6                 2606 	mov	a,@r0
   0B4C C0 E0              2607 	push	acc
   0B4E 08                 2608 	inc	r0
   0B4F E6                 2609 	mov	a,@r0
   0B50 C0 E0              2610 	push	acc
   0B52 08                 2611 	inc	r0
   0B53 E6                 2612 	mov	a,@r0
   0B54 C0 E0              2613 	push	acc
   0B56 74r7E              2614 	mov	a,#_dutycycle
   0B58 C0 E0              2615 	push	acc
   0B5A 74s0A              2616 	mov	a,#(_dutycycle >> 8)
   0B5C C0 E0              2617 	push	acc
   0B5E 74 01              2618 	mov	a,#0x01
   0B60 C0 E0              2619 	push	acc
   0B62 E4                 2620 	clr	a
   0B63 C0 E0              2621 	push	acc
   0B65 A8*00              2622 	mov	r0,_bp
   0B67 08                 2623 	inc	r0
   0B68 86 82              2624 	mov	dpl,@r0
   0B6A 08                 2625 	inc	r0
   0B6B 86 83              2626 	mov	dph,@r0
   0B6D 08                 2627 	inc	r0
   0B6E 86 F0              2628 	mov	b,@r0
   0B70 12s00r00           2629 	lcall	_ctimer_set
   0B73 E5 81              2630 	mov	a,sp
   0B75 24 F9              2631 	add	a,#0xf9
   0B77 F5 81              2632 	mov	sp,a
                           2633 ;	../../../core/net/mac/lpp.c:526: PT_YIELD(&dutycycle_pt);
   0B79 7D 00              2634 	mov	r5,#0x00
   0B7B 90s00r09           2635 	mov	dptr,#_dutycycle_pt
   0B7E 74 0E              2636 	mov	a,#0x0E
   0B80 F0                 2637 	movx	@dptr,a
   0B81 A3                 2638 	inc	dptr
   0B82 74 02              2639 	mov	a,#0x02
   0B84 F0                 2640 	movx	@dptr,a
   0B85                    2641 00104$:
   0B85 ED                 2642 	mov	a,r5
   0B86 70 06              2643 	jnz	00108$
   0B88 90 00 01           2644 	mov	dptr,#0x0001
   0B8B 02s0Dr44           2645 	ljmp	00150$
   0B8E                    2646 00108$:
                           2647 ;	../../../core/net/mac/lpp.c:536: for(p = list_head(queued_packets_list); p != NULL; p = list_item_next(p)) {
   0B8E 90s00r0E           2648 	mov	dptr,#_queued_packets_list
   0B91 E0                 2649 	movx	a,@dptr
   0B92 FE                 2650 	mov	r6,a
   0B93 A3                 2651 	inc	dptr
   0B94 E0                 2652 	movx	a,@dptr
   0B95 FF                 2653 	mov	r7,a
   0B96 A3                 2654 	inc	dptr
   0B97 E0                 2655 	movx	a,@dptr
   0B98 FA                 2656 	mov	r2,a
   0B99 8E 82              2657 	mov	dpl,r6
   0B9B 8F 83              2658 	mov	dph,r7
   0B9D 8A F0              2659 	mov	b,r2
   0B9F 12s00r00           2660 	lcall	_list_head
   0BA2 AA 82              2661 	mov	r2,dpl
   0BA4 AB 83              2662 	mov	r3,dph
   0BA6 AC F0              2663 	mov	r4,b
   0BA8 8A 05              2664 	mov	ar5,r2
                           2665 ;	../../../core/net/mac/lpp.c:584: PT_END(&dutycycle_pt);
                           2666 ;	../../../core/net/mac/lpp.c:536: for(p = list_head(queued_packets_list); p != NULL; p = list_item_next(p)) {
   0BAA                    2667 00146$:
   0BAA BD 00 08           2668 	cjne	r5,#0x00,00180$
   0BAD BB 00 05           2669 	cjne	r3,#0x00,00180$
   0BB0 BC 00 02           2670 	cjne	r4,#0x00,00180$
   0BB3 80 4B              2671 	sjmp	00149$
   0BB5                    2672 00180$:
                           2673 ;	../../../core/net/mac/lpp.c:537: if(p->broadcast_flag == BROADCAST_FLAG_PENDING) {
   0BB5 74 29              2674 	mov	a,#0x29
   0BB7 2D                 2675 	add	a,r5
   0BB8 FE                 2676 	mov	r6,a
   0BB9 E4                 2677 	clr	a
   0BBA 3B                 2678 	addc	a,r3
   0BBB FF                 2679 	mov	r7,a
   0BBC 8C 02              2680 	mov	ar2,r4
   0BBE 8E 82              2681 	mov	dpl,r6
   0BC0 8F 83              2682 	mov	dph,r7
   0BC2 8A F0              2683 	mov	b,r2
   0BC4 12s00r00           2684 	lcall	__gptrget
   0BC7 FE                 2685 	mov	r6,a
   0BC8 BE 02 1E           2686 	cjne	r6,#0x02,00148$
                           2687 ;	../../../core/net/mac/lpp.c:539: set_broadcast_flag(p, BROADCAST_FLAG_SEND);
   0BCB C0 03              2688 	push	ar3
   0BCD C0 04              2689 	push	ar4
   0BCF C0 05              2690 	push	ar5
   0BD1 74 03              2691 	mov	a,#0x03
   0BD3 C0 E0              2692 	push	acc
   0BD5 8D 82              2693 	mov	dpl,r5
   0BD7 8B 83              2694 	mov	dph,r3
   0BD9 8C F0              2695 	mov	b,r4
   0BDB 12s06rDA           2696 	lcall	_set_broadcast_flag
   0BDE 15 81              2697 	dec	sp
                           2698 ;	../../../core/net/mac/lpp.c:540: turn_radio_on();
   0BE0 12s00r00           2699 	lcall	_turn_radio_on
   0BE3 D0 05              2700 	pop	ar5
   0BE5 D0 04              2701 	pop	ar4
   0BE7 D0 03              2702 	pop	ar3
   0BE9                    2703 00148$:
                           2704 ;	../../../core/net/mac/lpp.c:536: for(p = list_head(queued_packets_list); p != NULL; p = list_item_next(p)) {
   0BE9 8D 82              2705 	mov	dpl,r5
   0BEB 8B 83              2706 	mov	dph,r3
   0BED 8C F0              2707 	mov	b,r4
   0BEF 12s00r00           2708 	lcall	_list_item_next
   0BF2 AE 82              2709 	mov	r6,dpl
   0BF4 AF 83              2710 	mov	r7,dph
   0BF6 AA F0              2711 	mov	r2,b
   0BF8 8E 05              2712 	mov	ar5,r6
   0BFA 8F 03              2713 	mov	ar3,r7
   0BFC 8A 04              2714 	mov	ar4,r2
   0BFE 80 AA              2715 	sjmp	00146$
   0C00                    2716 00149$:
                           2717 ;	../../../core/net/mac/lpp.c:549: if(num_packets_to_send() == 0) {
   0C00 12s0Ar05           2718 	lcall	_num_packets_to_send
   0C03 E5 82              2719 	mov	a,dpl
   0C05 85 83 F0           2720 	mov	b,dph
   0C08 45 F0              2721 	orl	a,b
   0C0A 60 03              2722 	jz	00183$
   0C0C 02s0CrEF           2723 	ljmp	00136$
   0C0F                    2724 00183$:
                           2725 ;	../../../core/net/mac/lpp.c:553: if(is_listening == 0) {
   0C0F 90s00r00           2726 	mov	dptr,#_is_listening
   0C12 E0                 2727 	movx	a,@dptr
   0C13 FE                 2728 	mov	r6,a
   0C14 60 03              2729 	jz	00184$
   0C16 02s0CrA1           2730 	ljmp	00127$
   0C19                    2731 00184$:
                           2732 ;	../../../core/net/mac/lpp.c:554: if(!NETSTACK_RADIO.receiving_packet()) {
   0C19 90s00r0C           2733 	mov	dptr,#(_cc2430_rf_driver + 0x000c)
   0C1C E4                 2734 	clr	a
   0C1D 93                 2735 	movc	a,@a+dptr
   0C1E FF                 2736 	mov	r7,a
   0C1F A3                 2737 	inc	dptr
   0C20 E4                 2738 	clr	a
   0C21 93                 2739 	movc	a,@a+dptr
   0C22 FA                 2740 	mov	r2,a
   0C23 8F 82              2741 	mov	dpl,r7
   0C25 8A 83              2742 	mov	dph,r2
   0C27 12s00r00           2743 	lcall	__sdcc_call_dptr
   0C2A AF 82              2744 	mov	r7,dpl
   0C2C AA 83              2745 	mov	r2,dph
   0C2E EF                 2746 	mov	a,r7
   0C2F 4A                 2747 	orl	a,r2
   0C30 70 0C              2748 	jnz	00113$
                           2749 ;	../../../core/net/mac/lpp.c:555: turn_radio_off();
   0C32 12s00r1A           2750 	lcall	_turn_radio_off
                           2751 ;	../../../core/net/mac/lpp.c:556: compower_accumulate(&compower_idle_activity);
   0C35 90s00r00           2752 	mov	dptr,#_compower_idle_activity
   0C38 75 F0 00           2753 	mov	b,#0x00
   0C3B 12s00r00           2754 	lcall	_compower_accumulate
   0C3E                    2755 00113$:
                           2756 ;	../../../core/net/mac/lpp.c:558: ctimer_set(t, off_time + off_time_adjustment, (void (*)(void *))dutycycle, t);
   0C3E 90s00r01           2757 	mov	dptr,#_off_time_adjustment
   0C41 E0                 2758 	movx	a,@dptr
   0C42 FF                 2759 	mov	r7,a
   0C43 A3                 2760 	inc	dptr
   0C44 E0                 2761 	movx	a,@dptr
   0C45 FA                 2762 	mov	r2,a
   0C46 90s00r03           2763 	mov	dptr,#_off_time
   0C49 E0                 2764 	movx	a,@dptr
   0C4A FB                 2765 	mov	r3,a
   0C4B A3                 2766 	inc	dptr
   0C4C E0                 2767 	movx	a,@dptr
   0C4D FC                 2768 	mov	r4,a
   0C4E EF                 2769 	mov	a,r7
   0C4F 2B                 2770 	add	a,r3
   0C50 FF                 2771 	mov	r7,a
   0C51 EA                 2772 	mov	a,r2
   0C52 3C                 2773 	addc	a,r4
   0C53 FA                 2774 	mov	r2,a
   0C54 A8*00              2775 	mov	r0,_bp
   0C56 08                 2776 	inc	r0
   0C57 E6                 2777 	mov	a,@r0
   0C58 C0 E0              2778 	push	acc
   0C5A 08                 2779 	inc	r0
   0C5B E6                 2780 	mov	a,@r0
   0C5C C0 E0              2781 	push	acc
   0C5E 08                 2782 	inc	r0
   0C5F E6                 2783 	mov	a,@r0
   0C60 C0 E0              2784 	push	acc
   0C62 74r7E              2785 	mov	a,#_dutycycle
   0C64 C0 E0              2786 	push	acc
   0C66 74s0A              2787 	mov	a,#(_dutycycle >> 8)
   0C68 C0 E0              2788 	push	acc
   0C6A C0 07              2789 	push	ar7
   0C6C C0 02              2790 	push	ar2
   0C6E A8*00              2791 	mov	r0,_bp
   0C70 08                 2792 	inc	r0
   0C71 86 82              2793 	mov	dpl,@r0
   0C73 08                 2794 	inc	r0
   0C74 86 83              2795 	mov	dph,@r0
   0C76 08                 2796 	inc	r0
   0C77 86 F0              2797 	mov	b,@r0
   0C79 12s00r00           2798 	lcall	_ctimer_set
   0C7C E5 81              2799 	mov	a,sp
   0C7E 24 F9              2800 	add	a,#0xf9
   0C80 F5 81              2801 	mov	sp,a
                           2802 ;	../../../core/net/mac/lpp.c:559: off_time_adjustment = 0;
   0C82 90s00r01           2803 	mov	dptr,#_off_time_adjustment
   0C85 E4                 2804 	clr	a
   0C86 F0                 2805 	movx	@dptr,a
   0C87 A3                 2806 	inc	dptr
   0C88 F0                 2807 	movx	@dptr,a
                           2808 ;	../../../core/net/mac/lpp.c:560: PT_YIELD(&dutycycle_pt);
   0C89 7D 00              2809 	mov	r5,#0x00
   0C8B 90s00r09           2810 	mov	dptr,#_dutycycle_pt
   0C8E 74 30              2811 	mov	a,#0x30
   0C90 F0                 2812 	movx	@dptr,a
   0C91 A3                 2813 	inc	dptr
   0C92 74 02              2814 	mov	a,#0x02
   0C94 F0                 2815 	movx	@dptr,a
   0C95                    2816 00114$:
   0C95 ED                 2817 	mov	a,r5
   0C96 60 03              2818 	jz	00187$
   0C98 02s0ArD3           2819 	ljmp	00139$
   0C9B                    2820 00187$:
   0C9B 90 00 01           2821 	mov	dptr,#0x0001
   0C9E 02s0Dr44           2822 	ljmp	00150$
   0CA1                    2823 00127$:
                           2824 ;	../../../core/net/mac/lpp.c:572: is_listening--;
   0CA1 EE                 2825 	mov	a,r6
   0CA2 14                 2826 	dec	a
   0CA3 90s00r00           2827 	mov	dptr,#_is_listening
   0CA6 F0                 2828 	movx	@dptr,a
                           2829 ;	../../../core/net/mac/lpp.c:573: ctimer_set(t, OFF_TIME, (void (*)(void *))dutycycle, t);
   0CA7 A8*00              2830 	mov	r0,_bp
   0CA9 08                 2831 	inc	r0
   0CAA E6                 2832 	mov	a,@r0
   0CAB C0 E0              2833 	push	acc
   0CAD 08                 2834 	inc	r0
   0CAE E6                 2835 	mov	a,@r0
   0CAF C0 E0              2836 	push	acc
   0CB1 08                 2837 	inc	r0
   0CB2 E6                 2838 	mov	a,@r0
   0CB3 C0 E0              2839 	push	acc
   0CB5 74r7E              2840 	mov	a,#_dutycycle
   0CB7 C0 E0              2841 	push	acc
   0CB9 74s0A              2842 	mov	a,#(_dutycycle >> 8)
   0CBB C0 E0              2843 	push	acc
   0CBD 74 1F              2844 	mov	a,#0x1F
   0CBF C0 E0              2845 	push	acc
   0CC1 E4                 2846 	clr	a
   0CC2 C0 E0              2847 	push	acc
   0CC4 A8*00              2848 	mov	r0,_bp
   0CC6 08                 2849 	inc	r0
   0CC7 86 82              2850 	mov	dpl,@r0
   0CC9 08                 2851 	inc	r0
   0CCA 86 83              2852 	mov	dph,@r0
   0CCC 08                 2853 	inc	r0
   0CCD 86 F0              2854 	mov	b,@r0
   0CCF 12s00r00           2855 	lcall	_ctimer_set
   0CD2 E5 81              2856 	mov	a,sp
   0CD4 24 F9              2857 	add	a,#0xf9
   0CD6 F5 81              2858 	mov	sp,a
                           2859 ;	../../../core/net/mac/lpp.c:574: PT_YIELD(&dutycycle_pt);
   0CD8 7D 00              2860 	mov	r5,#0x00
   0CDA 90s00r09           2861 	mov	dptr,#_dutycycle_pt
   0CDD 74 3E              2862 	mov	a,#0x3E
   0CDF F0                 2863 	movx	@dptr,a
   0CE0 A3                 2864 	inc	dptr
   0CE1 74 02              2865 	mov	a,#0x02
   0CE3 F0                 2866 	movx	@dptr,a
   0CE4                    2867 00120$:
   0CE4 ED                 2868 	mov	a,r5
   0CE5 60 03              2869 	jz	00188$
   0CE7 02s0ArD3           2870 	ljmp	00139$
   0CEA                    2871 00188$:
   0CEA 90 00 01           2872 	mov	dptr,#0x0001
   0CED 80 55              2873 	sjmp	00150$
   0CEF                    2874 00136$:
                           2875 ;	../../../core/net/mac/lpp.c:579: ctimer_set(t, off_time, (void (*)(void *))dutycycle, t);
   0CEF A8*00              2876 	mov	r0,_bp
   0CF1 08                 2877 	inc	r0
   0CF2 E6                 2878 	mov	a,@r0
   0CF3 C0 E0              2879 	push	acc
   0CF5 08                 2880 	inc	r0
   0CF6 E6                 2881 	mov	a,@r0
   0CF7 C0 E0              2882 	push	acc
   0CF9 08                 2883 	inc	r0
   0CFA E6                 2884 	mov	a,@r0
   0CFB C0 E0              2885 	push	acc
   0CFD 74r7E              2886 	mov	a,#_dutycycle
   0CFF C0 E0              2887 	push	acc
   0D01 74s0A              2888 	mov	a,#(_dutycycle >> 8)
   0D03 C0 E0              2889 	push	acc
   0D05 90s00r03           2890 	mov	dptr,#_off_time
   0D08 E0                 2891 	movx	a,@dptr
   0D09 C0 E0              2892 	push	acc
   0D0B A3                 2893 	inc	dptr
   0D0C E0                 2894 	movx	a,@dptr
   0D0D C0 E0              2895 	push	acc
   0D0F A8*00              2896 	mov	r0,_bp
   0D11 08                 2897 	inc	r0
   0D12 86 82              2898 	mov	dpl,@r0
   0D14 08                 2899 	inc	r0
   0D15 86 83              2900 	mov	dph,@r0
   0D17 08                 2901 	inc	r0
   0D18 86 F0              2902 	mov	b,@r0
   0D1A 12s00r00           2903 	lcall	_ctimer_set
   0D1D E5 81              2904 	mov	a,sp
   0D1F 24 F9              2905 	add	a,#0xf9
   0D21 F5 81              2906 	mov	sp,a
                           2907 ;	../../../core/net/mac/lpp.c:580: PT_YIELD(&dutycycle_pt);
   0D23 7D 00              2908 	mov	r5,#0x00
   0D25 90s00r09           2909 	mov	dptr,#_dutycycle_pt
   0D28 74 44              2910 	mov	a,#0x44
   0D2A F0                 2911 	movx	@dptr,a
   0D2B A3                 2912 	inc	dptr
   0D2C 74 02              2913 	mov	a,#0x02
   0D2E F0                 2914 	movx	@dptr,a
   0D2F                    2915 00129$:
   0D2F ED                 2916 	mov	a,r5
   0D30 60 03              2917 	jz	00189$
   0D32 02s0ArD3           2918 	ljmp	00139$
   0D35                    2919 00189$:
   0D35 90 00 01           2920 	mov	dptr,#0x0001
                           2921 ;	../../../core/net/mac/lpp.c:584: PT_END(&dutycycle_pt);
   0D38 80 0A              2922 	sjmp	00150$
   0D3A                    2923 00141$:
   0D3A 90s00r09           2924 	mov	dptr,#_dutycycle_pt
   0D3D E4                 2925 	clr	a
   0D3E F0                 2926 	movx	@dptr,a
   0D3F A3                 2927 	inc	dptr
   0D40 F0                 2928 	movx	@dptr,a
   0D41 90 00 03           2929 	mov	dptr,#0x0003
   0D44                    2930 00150$:
   0D44 85*00 81           2931 	mov	sp,_bp
   0D47 D0*00              2932 	pop	_bp
   0D49 22                 2933 	ret
                           2934 ;------------------------------------------------------------
                           2935 ;Allocation info for local variables in function 'restart_dutycycle'
                           2936 ;------------------------------------------------------------
                           2937 ;initial_wait              Allocated to registers r2 r3 
                           2938 ;------------------------------------------------------------
                           2939 ;	../../../core/net/mac/lpp.c:588: restart_dutycycle(clock_time_t initial_wait)
                           2940 ;	-----------------------------------------
                           2941 ;	 function restart_dutycycle
                           2942 ;	-----------------------------------------
   0D4A                    2943 _restart_dutycycle:
   0D4A AA 82              2944 	mov	r2,dpl
   0D4C AB 83              2945 	mov	r3,dph
                           2946 ;	../../../core/net/mac/lpp.c:590: PT_INIT(&dutycycle_pt);
   0D4E 90s00r09           2947 	mov	dptr,#_dutycycle_pt
   0D51 E4                 2948 	clr	a
   0D52 F0                 2949 	movx	@dptr,a
   0D53 A3                 2950 	inc	dptr
   0D54 F0                 2951 	movx	@dptr,a
                           2952 ;	../../../core/net/mac/lpp.c:591: ctimer_set(&timer, initial_wait, (void (*)(void *))dutycycle, &timer);  
   0D55 74r0B              2953 	mov	a,#_timer
   0D57 C0 E0              2954 	push	acc
   0D59 74s00              2955 	mov	a,#(_timer >> 8)
   0D5B C0 E0              2956 	push	acc
   0D5D E4                 2957 	clr	a
   0D5E C0 E0              2958 	push	acc
   0D60 74r7E              2959 	mov	a,#_dutycycle
   0D62 C0 E0              2960 	push	acc
   0D64 74s0A              2961 	mov	a,#(_dutycycle >> 8)
   0D66 C0 E0              2962 	push	acc
   0D68 C0 02              2963 	push	ar2
   0D6A C0 03              2964 	push	ar3
   0D6C 90s00r0B           2965 	mov	dptr,#_timer
   0D6F 75 F0 00           2966 	mov	b,#0x00
   0D72 12s00r00           2967 	lcall	_ctimer_set
   0D75 E5 81              2968 	mov	a,sp
   0D77 24 F9              2969 	add	a,#0xf9
   0D79 F5 81              2970 	mov	sp,a
   0D7B 22                 2971 	ret
                           2972 ;------------------------------------------------------------
                           2973 ;Allocation info for local variables in function 'send_packet'
                           2974 ;------------------------------------------------------------
                           2975 ;ptr                       Allocated to stack - offset -5
                           2976 ;sent                      Allocated to stack - offset 1
                           2977 ;hdr                       Allocated to stack - offset 3
                           2978 ;timeout                   Allocated to stack - offset 9
                           2979 ;is_broadcast              Allocated to stack - offset 11
                           2980 ;hdrlen                    Allocated to registers r2 r3 
                           2981 ;i                         Allocated to registers r2 r3 r4 
                           2982 ;------------------------------------------------------------
                           2983 ;	../../../core/net/mac/lpp.c:609: send_packet(mac_callback_t sent, void *ptr)
                           2984 ;	-----------------------------------------
                           2985 ;	 function send_packet
                           2986 ;	-----------------------------------------
   0D7C                    2987 _send_packet:
   0D7C C0*00              2988 	push	_bp
   0D7E 85 81*00           2989 	mov	_bp,sp
   0D81 C0 82              2990 	push	dpl
   0D83 C0 83              2991 	push	dph
   0D85 E5 81              2992 	mov	a,sp
   0D87 24 0B              2993 	add	a,#0x0b
   0D89 F5 81              2994 	mov	sp,a
                           2995 ;	../../../core/net/mac/lpp.c:613: uint8_t is_broadcast = 0;
   0D8B E5*00              2996 	mov	a,_bp
   0D8D 24 0B              2997 	add	a,#0x0b
   0D8F F8                 2998 	mov	r0,a
   0D90 76 00              2999 	mov	@r0,#0x00
                           3000 ;	../../../core/net/mac/lpp.c:615: rimeaddr_copy(&hdr.sender, &rimeaddr_node_addr);
   0D92 E5*00              3001 	mov	a,_bp
   0D94 24 03              3002 	add	a,#0x03
   0D96 24 02              3003 	add	a,#0x02
   0D98 FD                 3004 	mov	r5,a
   0D99 7E 00              3005 	mov	r6,#0x00
   0D9B 7F 40              3006 	mov	r7,#0x40
   0D9D 74r00              3007 	mov	a,#_rimeaddr_node_addr
   0D9F C0 E0              3008 	push	acc
   0DA1 74s00              3009 	mov	a,#(_rimeaddr_node_addr >> 8)
   0DA3 C0 E0              3010 	push	acc
   0DA5 E4                 3011 	clr	a
   0DA6 C0 E0              3012 	push	acc
   0DA8 8D 82              3013 	mov	dpl,r5
   0DAA 8E 83              3014 	mov	dph,r6
   0DAC 8F F0              3015 	mov	b,r7
   0DAE 12s00r00           3016 	lcall	_rimeaddr_copy
   0DB1 15 81              3017 	dec	sp
   0DB3 15 81              3018 	dec	sp
   0DB5 15 81              3019 	dec	sp
                           3020 ;	../../../core/net/mac/lpp.c:616: rimeaddr_copy(&hdr.receiver, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
   0DB7 75 82 19           3021 	mov	dpl,#0x19
   0DBA 12s00r00           3022 	lcall	_packetbuf_addr
   0DBD AD 82              3023 	mov	r5,dpl
   0DBF AE 83              3024 	mov	r6,dph
   0DC1 AF F0              3025 	mov	r7,b
   0DC3 E5*00              3026 	mov	a,_bp
   0DC5 24 03              3027 	add	a,#0x03
   0DC7 24 04              3028 	add	a,#0x04
   0DC9 FC                 3029 	mov	r4,a
   0DCA 7A 00              3030 	mov	r2,#0x00
   0DCC 7B 40              3031 	mov	r3,#0x40
   0DCE C0 05              3032 	push	ar5
   0DD0 C0 06              3033 	push	ar6
   0DD2 C0 07              3034 	push	ar7
   0DD4 8C 82              3035 	mov	dpl,r4
   0DD6 8A 83              3036 	mov	dph,r2
   0DD8 8B F0              3037 	mov	b,r3
   0DDA 12s00r00           3038 	lcall	_rimeaddr_copy
   0DDD 15 81              3039 	dec	sp
   0DDF 15 81              3040 	dec	sp
   0DE1 15 81              3041 	dec	sp
                           3042 ;	../../../core/net/mac/lpp.c:617: if(rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
   0DE3 E5*00              3043 	mov	a,_bp
   0DE5 24 03              3044 	add	a,#0x03
   0DE7 24 04              3045 	add	a,#0x04
   0DE9 FA                 3046 	mov	r2,a
   0DEA 7B 00              3047 	mov	r3,#0x00
   0DEC 7C 40              3048 	mov	r4,#0x40
   0DEE 74r00              3049 	mov	a,#_rimeaddr_null
   0DF0 C0 E0              3050 	push	acc
   0DF2 74s00              3051 	mov	a,#(_rimeaddr_null >> 8)
   0DF4 C0 E0              3052 	push	acc
   0DF6 74 80              3053 	mov	a,#0x80
   0DF8 C0 E0              3054 	push	acc
   0DFA 8A 82              3055 	mov	dpl,r2
   0DFC 8B 83              3056 	mov	dph,r3
   0DFE 8C F0              3057 	mov	b,r4
   0E00 12s00r00           3058 	lcall	_rimeaddr_cmp
   0E03 AA 82              3059 	mov	r2,dpl
   0E05 AB 83              3060 	mov	r3,dph
   0E07 15 81              3061 	dec	sp
   0E09 15 81              3062 	dec	sp
   0E0B 15 81              3063 	dec	sp
   0E0D EA                 3064 	mov	a,r2
   0E0E 4B                 3065 	orl	a,r3
   0E0F 60 07              3066 	jz	00102$
                           3067 ;	../../../core/net/mac/lpp.c:618: is_broadcast = 1;
   0E11 E5*00              3068 	mov	a,_bp
   0E13 24 0B              3069 	add	a,#0x0b
   0E15 F8                 3070 	mov	r0,a
   0E16 76 01              3071 	mov	@r0,#0x01
   0E18                    3072 00102$:
                           3073 ;	../../../core/net/mac/lpp.c:620: hdr.type = TYPE_DATA;
   0E18 E5*00              3074 	mov	a,_bp
   0E1A 24 03              3075 	add	a,#0x03
   0E1C F8                 3076 	mov	r0,a
   0E1D 76 02              3077 	mov	@r0,#0x02
   0E1F 08                 3078 	inc	r0
   0E20 76 00              3079 	mov	@r0,#0x00
                           3080 ;	../../../core/net/mac/lpp.c:622: packetbuf_hdralloc(sizeof(struct lpp_hdr));
   0E22 90 00 06           3081 	mov	dptr,#0x0006
   0E25 12s00r00           3082 	lcall	_packetbuf_hdralloc
                           3083 ;	../../../core/net/mac/lpp.c:623: memcpy(packetbuf_hdrptr(), &hdr, sizeof(struct lpp_hdr));
   0E28 E5*00              3084 	mov	a,_bp
   0E2A 24 03              3085 	add	a,#0x03
   0E2C FA                 3086 	mov	r2,a
   0E2D 7B 00              3087 	mov	r3,#0x00
   0E2F 7C 40              3088 	mov	r4,#0x40
   0E31 C0 02              3089 	push	ar2
   0E33 C0 03              3090 	push	ar3
   0E35 C0 04              3091 	push	ar4
   0E37 12s00r00           3092 	lcall	_packetbuf_hdrptr
   0E3A AD 82              3093 	mov	r5,dpl
   0E3C AE 83              3094 	mov	r6,dph
   0E3E AF F0              3095 	mov	r7,b
   0E40 D0 04              3096 	pop	ar4
   0E42 D0 03              3097 	pop	ar3
   0E44 D0 02              3098 	pop	ar2
   0E46 74 06              3099 	mov	a,#0x06
   0E48 C0 E0              3100 	push	acc
   0E4A E4                 3101 	clr	a
   0E4B C0 E0              3102 	push	acc
   0E4D C0 02              3103 	push	ar2
   0E4F C0 03              3104 	push	ar3
   0E51 C0 04              3105 	push	ar4
   0E53 8D 82              3106 	mov	dpl,r5
   0E55 8E 83              3107 	mov	dph,r6
   0E57 8F F0              3108 	mov	b,r7
   0E59 12s00r00           3109 	lcall	_memcpy
   0E5C E5 81              3110 	mov	a,sp
   0E5E 24 FB              3111 	add	a,#0xfb
   0E60 F5 81              3112 	mov	sp,a
                           3113 ;	../../../core/net/mac/lpp.c:624: packetbuf_compact();
   0E62 12s00r00           3114 	lcall	_packetbuf_compact
                           3115 ;	../../../core/net/mac/lpp.c:627: int hdrlen = NETSTACK_FRAMER.create();
   0E65 90s00r00           3116 	mov	dptr,#_framer_nullmac
   0E68 E4                 3117 	clr	a
   0E69 93                 3118 	movc	a,@a+dptr
   0E6A FA                 3119 	mov	r2,a
   0E6B A3                 3120 	inc	dptr
   0E6C E4                 3121 	clr	a
   0E6D 93                 3122 	movc	a,@a+dptr
   0E6E FB                 3123 	mov	r3,a
   0E6F 8A 82              3124 	mov	dpl,r2
   0E71 8B 83              3125 	mov	dph,r3
   0E73 12s00r00           3126 	lcall	__sdcc_call_dptr
   0E76 AA 82              3127 	mov	r2,dpl
   0E78 AB 83              3128 	mov	r3,dph
                           3129 ;	../../../core/net/mac/lpp.c:628: if(hdrlen == 0) {
   0E7A EA                 3130 	mov	a,r2
   0E7B 4B                 3131 	orl	a,r3
                           3132 ;	../../../core/net/mac/lpp.c:631: mac_call_sent_callback(sent, ptr, MAC_TX_ERR_FATAL, 0);
   0E7C 70 2F              3133 	jnz	00104$
   0E7E C0 E0              3134 	push	acc
   0E80 C0 E0              3135 	push	acc
   0E82 74 05              3136 	mov	a,#0x05
   0E84 C0 E0              3137 	push	acc
   0E86 E4                 3138 	clr	a
   0E87 C0 E0              3139 	push	acc
   0E89 E5*00              3140 	mov	a,_bp
   0E8B 24 FB              3141 	add	a,#0xfb
   0E8D F8                 3142 	mov	r0,a
   0E8E E6                 3143 	mov	a,@r0
   0E8F C0 E0              3144 	push	acc
   0E91 08                 3145 	inc	r0
   0E92 E6                 3146 	mov	a,@r0
   0E93 C0 E0              3147 	push	acc
   0E95 08                 3148 	inc	r0
   0E96 E6                 3149 	mov	a,@r0
   0E97 C0 E0              3150 	push	acc
   0E99 A8*00              3151 	mov	r0,_bp
   0E9B 08                 3152 	inc	r0
   0E9C 86 82              3153 	mov	dpl,@r0
   0E9E 08                 3154 	inc	r0
   0E9F 86 83              3155 	mov	dph,@r0
   0EA1 12s00r00           3156 	lcall	_mac_call_sent_callback
   0EA4 E5 81              3157 	mov	a,sp
   0EA6 24 F9              3158 	add	a,#0xf9
   0EA8 F5 81              3159 	mov	sp,a
                           3160 ;	../../../core/net/mac/lpp.c:632: return;
   0EAA 02s10r9C           3161 	ljmp	00114$
   0EAD                    3162 00104$:
                           3163 ;	../../../core/net/mac/lpp.c:656: i = memb_alloc(&queued_packets_memb);
   0EAD 90s00r11           3164 	mov	dptr,#_queued_packets_memb
   0EB0 75 F0 00           3165 	mov	b,#0x00
   0EB3 12s00r00           3166 	lcall	_memb_alloc
   0EB6 AA 82              3167 	mov	r2,dpl
   0EB8 AB 83              3168 	mov	r3,dph
   0EBA AC F0              3169 	mov	r4,b
                           3170 ;	../../../core/net/mac/lpp.c:657: if(i != NULL) {
   0EBC BA 00 09           3171 	cjne	r2,#0x00,00124$
   0EBF BB 00 06           3172 	cjne	r3,#0x00,00124$
   0EC2 BC 00 03           3173 	cjne	r4,#0x00,00124$
   0EC5 02s10r5A           3174 	ljmp	00112$
   0EC8                    3175 00124$:
                           3176 ;	../../../core/net/mac/lpp.c:658: i->sent_callback = sent;
   0EC8 74 23              3177 	mov	a,#0x23
   0ECA 2A                 3178 	add	a,r2
   0ECB FD                 3179 	mov	r5,a
   0ECC E4                 3180 	clr	a
   0ECD 3B                 3181 	addc	a,r3
   0ECE FE                 3182 	mov	r6,a
   0ECF 8C 07              3183 	mov	ar7,r4
   0ED1 8D 82              3184 	mov	dpl,r5
   0ED3 8E 83              3185 	mov	dph,r6
   0ED5 8F F0              3186 	mov	b,r7
   0ED7 A8*00              3187 	mov	r0,_bp
   0ED9 08                 3188 	inc	r0
   0EDA E6                 3189 	mov	a,@r0
   0EDB 12s00r00           3190 	lcall	__gptrput
   0EDE A3                 3191 	inc	dptr
   0EDF 08                 3192 	inc	r0
   0EE0 E6                 3193 	mov	a,@r0
   0EE1 12s00r00           3194 	lcall	__gptrput
                           3195 ;	../../../core/net/mac/lpp.c:659: i->sent_callback_ptr = ptr;
   0EE4 74 25              3196 	mov	a,#0x25
   0EE6 2A                 3197 	add	a,r2
   0EE7 FD                 3198 	mov	r5,a
   0EE8 E4                 3199 	clr	a
   0EE9 3B                 3200 	addc	a,r3
   0EEA FE                 3201 	mov	r6,a
   0EEB 8C 07              3202 	mov	ar7,r4
   0EED 8D 82              3203 	mov	dpl,r5
   0EEF 8E 83              3204 	mov	dph,r6
   0EF1 8F F0              3205 	mov	b,r7
   0EF3 E5*00              3206 	mov	a,_bp
   0EF5 24 FB              3207 	add	a,#0xfb
   0EF7 F8                 3208 	mov	r0,a
   0EF8 E6                 3209 	mov	a,@r0
   0EF9 12s00r00           3210 	lcall	__gptrput
   0EFC A3                 3211 	inc	dptr
   0EFD 08                 3212 	inc	r0
   0EFE E6                 3213 	mov	a,@r0
   0EFF 12s00r00           3214 	lcall	__gptrput
   0F02 A3                 3215 	inc	dptr
   0F03 08                 3216 	inc	r0
   0F04 E6                 3217 	mov	a,@r0
   0F05 12s00r00           3218 	lcall	__gptrput
                           3219 ;	../../../core/net/mac/lpp.c:660: i->num_transmissions = 0;
   0F08 74 28              3220 	mov	a,#0x28
   0F0A 2A                 3221 	add	a,r2
   0F0B FD                 3222 	mov	r5,a
   0F0C E4                 3223 	clr	a
   0F0D 3B                 3224 	addc	a,r3
   0F0E FE                 3225 	mov	r6,a
   0F0F 8C 07              3226 	mov	ar7,r4
   0F11 8D 82              3227 	mov	dpl,r5
   0F13 8E 83              3228 	mov	dph,r6
   0F15 8F F0              3229 	mov	b,r7
   0F17 E4                 3230 	clr	a
   0F18 12s00r00           3231 	lcall	__gptrput
                           3232 ;	../../../core/net/mac/lpp.c:661: i->packet = queuebuf_new_from_packetbuf();
   0F1B 74 03              3233 	mov	a,#0x03
   0F1D 2A                 3234 	add	a,r2
   0F1E FD                 3235 	mov	r5,a
   0F1F E4                 3236 	clr	a
   0F20 3B                 3237 	addc	a,r3
   0F21 FE                 3238 	mov	r6,a
   0F22 8C 07              3239 	mov	ar7,r4
   0F24 C0 02              3240 	push	ar2
   0F26 C0 03              3241 	push	ar3
   0F28 C0 04              3242 	push	ar4
   0F2A C0 05              3243 	push	ar5
   0F2C C0 06              3244 	push	ar6
   0F2E C0 07              3245 	push	ar7
   0F30 12s00r00           3246 	lcall	_queuebuf_new_from_packetbuf
   0F33 AA 82              3247 	mov	r2,dpl
   0F35 AB 83              3248 	mov	r3,dph
   0F37 AC F0              3249 	mov	r4,b
   0F39 D0 07              3250 	pop	ar7
   0F3B D0 06              3251 	pop	ar6
   0F3D D0 05              3252 	pop	ar5
   0F3F 8D 82              3253 	mov	dpl,r5
   0F41 8E 83              3254 	mov	dph,r6
   0F43 8F F0              3255 	mov	b,r7
   0F45 EA                 3256 	mov	a,r2
   0F46 12s00r00           3257 	lcall	__gptrput
   0F49 A3                 3258 	inc	dptr
   0F4A EB                 3259 	mov	a,r3
   0F4B 12s00r00           3260 	lcall	__gptrput
   0F4E A3                 3261 	inc	dptr
   0F4F EC                 3262 	mov	a,r4
   0F50 12s00r00           3263 	lcall	__gptrput
                           3264 ;	../../../core/net/mac/lpp.c:662: if(i->packet == NULL) {
   0F53 BA 00 08           3265 	cjne	r2,#0x00,00125$
   0F56 BB 00 05           3266 	cjne	r3,#0x00,00125$
   0F59 BC 00 02           3267 	cjne	r4,#0x00,00125$
   0F5C 80 08              3268 	sjmp	00126$
   0F5E                    3269 00125$:
   0F5E D0 04              3270 	pop	ar4
   0F60 D0 03              3271 	pop	ar3
   0F62 D0 02              3272 	pop	ar2
   0F64 80 54              3273 	sjmp	00109$
   0F66                    3274 00126$:
                           3275 ;	../../../core/net/mac/lpp.c:663: memb_free(&queued_packets_memb, i);
   0F66 90s00r11           3276 	mov	dptr,#_queued_packets_memb
   0F69 75 F0 00           3277 	mov	b,#0x00
   0F6C 12s00r00           3278 	lcall	_memb_free
   0F6F 15 81              3279 	dec	sp
   0F71 15 81              3280 	dec	sp
   0F73 15 81              3281 	dec	sp
                           3282 ;	../../../core/net/mac/lpp.c:664: printf("null packet\n");
   0F75 74r00              3283 	mov	a,#__str_0
   0F77 C0 E0              3284 	push	acc
   0F79 74s00              3285 	mov	a,#(__str_0 >> 8)
   0F7B C0 E0              3286 	push	acc
   0F7D 74 80              3287 	mov	a,#0x80
   0F7F C0 E0              3288 	push	acc
   0F81 12s00r00           3289 	lcall	_printf
   0F84 15 81              3290 	dec	sp
   0F86 15 81              3291 	dec	sp
   0F88 15 81              3292 	dec	sp
                           3293 ;	../../../core/net/mac/lpp.c:665: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
   0F8A E4                 3294 	clr	a
   0F8B C0 E0              3295 	push	acc
   0F8D C0 E0              3296 	push	acc
   0F8F 74 04              3297 	mov	a,#0x04
   0F91 C0 E0              3298 	push	acc
   0F93 E4                 3299 	clr	a
   0F94 C0 E0              3300 	push	acc
   0F96 E5*00              3301 	mov	a,_bp
   0F98 24 FB              3302 	add	a,#0xfb
   0F9A F8                 3303 	mov	r0,a
   0F9B E6                 3304 	mov	a,@r0
   0F9C C0 E0              3305 	push	acc
   0F9E 08                 3306 	inc	r0
   0F9F E6                 3307 	mov	a,@r0
   0FA0 C0 E0              3308 	push	acc
   0FA2 08                 3309 	inc	r0
   0FA3 E6                 3310 	mov	a,@r0
   0FA4 C0 E0              3311 	push	acc
   0FA6 A8*00              3312 	mov	r0,_bp
   0FA8 08                 3313 	inc	r0
   0FA9 86 82              3314 	mov	dpl,@r0
   0FAB 08                 3315 	inc	r0
   0FAC 86 83              3316 	mov	dph,@r0
   0FAE 12s00r00           3317 	lcall	_mac_call_sent_callback
   0FB1 E5 81              3318 	mov	a,sp
   0FB3 24 F9              3319 	add	a,#0xf9
   0FB5 F5 81              3320 	mov	sp,a
                           3321 ;	../../../core/net/mac/lpp.c:666: return;
   0FB7 02s10r9C           3322 	ljmp	00114$
   0FBA                    3323 00109$:
                           3324 ;	../../../core/net/mac/lpp.c:668: if(is_broadcast) {
   0FBA E5*00              3325 	mov	a,_bp
   0FBC 24 0B              3326 	add	a,#0x0b
   0FBE F8                 3327 	mov	r0,a
   0FBF E6                 3328 	mov	a,@r0
   0FC0 60 27              3329 	jz	00106$
                           3330 ;	../../../core/net/mac/lpp.c:669: timeout = PACKET_LIFETIME;
   0FC2 E5*00              3331 	mov	a,_bp
   0FC4 24 09              3332 	add	a,#0x09
   0FC6 F8                 3333 	mov	r0,a
   0FC7 76 20              3334 	mov	@r0,#0x20
   0FC9 08                 3335 	inc	r0
   0FCA 76 00              3336 	mov	@r0,#0x00
                           3337 ;	../../../core/net/mac/lpp.c:679: set_broadcast_flag(i, BROADCAST_FLAG_WAITING);
   0FCC C0 02              3338 	push	ar2
   0FCE C0 03              3339 	push	ar3
   0FD0 C0 04              3340 	push	ar4
   0FD2 74 01              3341 	mov	a,#0x01
   0FD4 C0 E0              3342 	push	acc
   0FD6 8A 82              3343 	mov	dpl,r2
   0FD8 8B 83              3344 	mov	dph,r3
   0FDA 8C F0              3345 	mov	b,r4
   0FDC 12s06rDA           3346 	lcall	_set_broadcast_flag
   0FDF 15 81              3347 	dec	sp
   0FE1 D0 04              3348 	pop	ar4
   0FE3 D0 03              3349 	pop	ar3
   0FE5 D0 02              3350 	pop	ar2
   0FE7 80 1D              3351 	sjmp	00107$
   0FE9                    3352 00106$:
                           3353 ;	../../../core/net/mac/lpp.c:683: timeout = UNICAST_TIMEOUT;
   0FE9 E5*00              3354 	mov	a,_bp
   0FEB 24 09              3355 	add	a,#0x09
   0FED F8                 3356 	mov	r0,a
   0FEE 76 20              3357 	mov	@r0,#0x20
   0FF0 08                 3358 	inc	r0
   0FF1 76 00              3359 	mov	@r0,#0x00
                           3360 ;	../../../core/net/mac/lpp.c:685: i->broadcast_flag = BROADCAST_FLAG_NONE;
   0FF3 74 29              3361 	mov	a,#0x29
   0FF5 2A                 3362 	add	a,r2
   0FF6 FF                 3363 	mov	r7,a
   0FF7 E4                 3364 	clr	a
   0FF8 3B                 3365 	addc	a,r3
   0FF9 FD                 3366 	mov	r5,a
   0FFA 8C 06              3367 	mov	ar6,r4
   0FFC 8F 82              3368 	mov	dpl,r7
   0FFE 8D 83              3369 	mov	dph,r5
   1000 8E F0              3370 	mov	b,r6
   1002 E4                 3371 	clr	a
   1003 12s00r00           3372 	lcall	__gptrput
   1006                    3373 00107$:
                           3374 ;	../../../core/net/mac/lpp.c:688: ctimer_set(&i->removal_timer, timeout, remove_queued_packet, i);
   1006 74 06              3375 	mov	a,#0x06
   1008 2A                 3376 	add	a,r2
   1009 FD                 3377 	mov	r5,a
   100A E4                 3378 	clr	a
   100B 3B                 3379 	addc	a,r3
   100C FE                 3380 	mov	r6,a
   100D 8C 07              3381 	mov	ar7,r4
   100F C0 02              3382 	push	ar2
   1011 C0 03              3383 	push	ar3
   1013 C0 04              3384 	push	ar4
   1015 C0 02              3385 	push	ar2
   1017 C0 03              3386 	push	ar3
   1019 C0 04              3387 	push	ar4
   101B 74rEB              3388 	mov	a,#_remove_queued_packet
   101D C0 E0              3389 	push	acc
   101F 74s04              3390 	mov	a,#(_remove_queued_packet >> 8)
   1021 C0 E0              3391 	push	acc
   1023 E5*00              3392 	mov	a,_bp
   1025 24 09              3393 	add	a,#0x09
   1027 F8                 3394 	mov	r0,a
   1028 E6                 3395 	mov	a,@r0
   1029 C0 E0              3396 	push	acc
   102B 08                 3397 	inc	r0
   102C E6                 3398 	mov	a,@r0
   102D C0 E0              3399 	push	acc
   102F 8D 82              3400 	mov	dpl,r5
   1031 8E 83              3401 	mov	dph,r6
   1033 8F F0              3402 	mov	b,r7
   1035 12s00r00           3403 	lcall	_ctimer_set
   1038 E5 81              3404 	mov	a,sp
   103A 24 F9              3405 	add	a,#0xf9
   103C F5 81              3406 	mov	sp,a
                           3407 ;	../../../core/net/mac/lpp.c:693: turn_radio_on_for_neighbor(&hdr.receiver, i);
   103E E5*00              3408 	mov	a,_bp
   1040 24 03              3409 	add	a,#0x03
   1042 24 04              3410 	add	a,#0x04
   1044 FD                 3411 	mov	r5,a
   1045 7E 00              3412 	mov	r6,#0x00
   1047 7F 40              3413 	mov	r7,#0x40
   1049 8D 82              3414 	mov	dpl,r5
   104B 8E 83              3415 	mov	dph,r6
   104D 8F F0              3416 	mov	b,r7
   104F 12s02rB6           3417 	lcall	_turn_radio_on_for_neighbor
   1052 15 81              3418 	dec	sp
   1054 15 81              3419 	dec	sp
   1056 15 81              3420 	dec	sp
   1058 80 42              3421 	sjmp	00114$
   105A                    3422 00112$:
                           3423 ;	../../../core/net/mac/lpp.c:697: printf("i == NULL\n");
   105A 74r0D              3424 	mov	a,#__str_1
   105C C0 E0              3425 	push	acc
   105E 74s00              3426 	mov	a,#(__str_1 >> 8)
   1060 C0 E0              3427 	push	acc
   1062 74 80              3428 	mov	a,#0x80
   1064 C0 E0              3429 	push	acc
   1066 12s00r00           3430 	lcall	_printf
   1069 15 81              3431 	dec	sp
   106B 15 81              3432 	dec	sp
   106D 15 81              3433 	dec	sp
                           3434 ;	../../../core/net/mac/lpp.c:698: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
   106F E4                 3435 	clr	a
   1070 C0 E0              3436 	push	acc
   1072 C0 E0              3437 	push	acc
   1074 74 04              3438 	mov	a,#0x04
   1076 C0 E0              3439 	push	acc
   1078 E4                 3440 	clr	a
   1079 C0 E0              3441 	push	acc
   107B E5*00              3442 	mov	a,_bp
   107D 24 FB              3443 	add	a,#0xfb
   107F F8                 3444 	mov	r0,a
   1080 E6                 3445 	mov	a,@r0
   1081 C0 E0              3446 	push	acc
   1083 08                 3447 	inc	r0
   1084 E6                 3448 	mov	a,@r0
   1085 C0 E0              3449 	push	acc
   1087 08                 3450 	inc	r0
   1088 E6                 3451 	mov	a,@r0
   1089 C0 E0              3452 	push	acc
   108B A8*00              3453 	mov	r0,_bp
   108D 08                 3454 	inc	r0
   108E 86 82              3455 	mov	dpl,@r0
   1090 08                 3456 	inc	r0
   1091 86 83              3457 	mov	dph,@r0
   1093 12s00r00           3458 	lcall	_mac_call_sent_callback
   1096 E5 81              3459 	mov	a,sp
   1098 24 F9              3460 	add	a,#0xf9
   109A F5 81              3461 	mov	sp,a
   109C                    3462 00114$:
   109C 85*00 81           3463 	mov	sp,_bp
   109F D0*00              3464 	pop	_bp
   10A1 22                 3465 	ret
                           3466 ;------------------------------------------------------------
                           3467 ;Allocation info for local variables in function 'input_packet'
                           3468 ;------------------------------------------------------------
                           3469 ;hdr                       Allocated to stack - offset 1
                           3470 ;reception_time            Allocated to registers 
                           3471 ;adata                     Allocated to stack - offset 7
                           3472 ;i                         Allocated to stack - offset 9
                           3473 ;receiver                  Allocated to stack - offset 12
                           3474 ;i                         Allocated to registers r2 r3 r4 
                           3475 ;sloc0                     Allocated to stack - offset 20
                           3476 ;sloc1                     Allocated to stack - offset 15
                           3477 ;------------------------------------------------------------
                           3478 ;	../../../core/net/mac/lpp.c:710: input_packet(void)
                           3479 ;	-----------------------------------------
                           3480 ;	 function input_packet
                           3481 ;	-----------------------------------------
   10A2                    3482 _input_packet:
   10A2 C0*00              3483 	push	_bp
   10A4 E5 81              3484 	mov	a,sp
   10A6 F5*00              3485 	mov	_bp,a
   10A8 24 10              3486 	add	a,#0x10
   10AA F5 81              3487 	mov	sp,a
                           3488 ;	../../../core/net/mac/lpp.c:715: reception_time = clock_time();
   10AC 12s00r00           3489 	lcall	_clock_time
   10AF AA 82              3490 	mov	r2,dpl
   10B1 AB 83              3491 	mov	r3,dph
                           3492 ;	../../../core/net/mac/lpp.c:717: if(!NETSTACK_FRAMER.parse()) {
   10B3 90s00r02           3493 	mov	dptr,#(_framer_nullmac + 0x0002)
   10B6 E4                 3494 	clr	a
   10B7 93                 3495 	movc	a,@a+dptr
   10B8 FC                 3496 	mov	r4,a
   10B9 A3                 3497 	inc	dptr
   10BA E4                 3498 	clr	a
   10BB 93                 3499 	movc	a,@a+dptr
   10BC FD                 3500 	mov	r5,a
   10BD C0 02              3501 	push	ar2
   10BF C0 03              3502 	push	ar3
   10C1 8C 82              3503 	mov	dpl,r4
   10C3 8D 83              3504 	mov	dph,r5
   10C5 12s00r00           3505 	lcall	__sdcc_call_dptr
   10C8 AC 82              3506 	mov	r4,dpl
   10CA AD 83              3507 	mov	r5,dph
   10CC D0 03              3508 	pop	ar3
   10CE D0 02              3509 	pop	ar2
   10D0 EC                 3510 	mov	a,r4
   10D1 4D                 3511 	orl	a,r5
   10D2 70 1D              3512 	jnz	00102$
                           3513 ;	../../../core/net/mac/lpp.c:718: printf("lpp input_packet framer error\n");
   10D4 C0 02              3514 	push	ar2
   10D6 C0 03              3515 	push	ar3
   10D8 74r18              3516 	mov	a,#__str_2
   10DA C0 E0              3517 	push	acc
   10DC 74s00              3518 	mov	a,#(__str_2 >> 8)
   10DE C0 E0              3519 	push	acc
   10E0 74 80              3520 	mov	a,#0x80
   10E2 C0 E0              3521 	push	acc
   10E4 12s00r00           3522 	lcall	_printf
   10E7 15 81              3523 	dec	sp
   10E9 15 81              3524 	dec	sp
   10EB 15 81              3525 	dec	sp
   10ED D0 03              3526 	pop	ar3
   10EF D0 02              3527 	pop	ar2
   10F1                    3528 00102$:
                           3529 ;	../../../core/net/mac/lpp.c:721: memcpy(&hdr, packetbuf_dataptr(), sizeof(struct lpp_hdr));;
   10F1 C0 02              3530 	push	ar2
   10F3 C0 03              3531 	push	ar3
   10F5 C0 02              3532 	push	ar2
   10F7 C0 03              3533 	push	ar3
   10F9 12s00r00           3534 	lcall	_packetbuf_dataptr
   10FC AC 82              3535 	mov	r4,dpl
   10FE AD 83              3536 	mov	r5,dph
   1100 AE F0              3537 	mov	r6,b
   1102 D0 03              3538 	pop	ar3
   1104 D0 02              3539 	pop	ar2
   1106 AF*00              3540 	mov	r7,_bp
   1108 0F                 3541 	inc	r7
   1109 7A 00              3542 	mov	r2,#0x00
   110B 7B 40              3543 	mov	r3,#0x40
   110D C0 02              3544 	push	ar2
   110F C0 03              3545 	push	ar3
   1111 74 06              3546 	mov	a,#0x06
   1113 C0 E0              3547 	push	acc
   1115 E4                 3548 	clr	a
   1116 C0 E0              3549 	push	acc
   1118 C0 04              3550 	push	ar4
   111A C0 05              3551 	push	ar5
   111C C0 06              3552 	push	ar6
   111E 8F 82              3553 	mov	dpl,r7
   1120 8A 83              3554 	mov	dph,r2
   1122 8B F0              3555 	mov	b,r3
   1124 12s00r00           3556 	lcall	_memcpy
   1127 E5 81              3557 	mov	a,sp
   1129 24 FB              3558 	add	a,#0xfb
   112B F5 81              3559 	mov	sp,a
                           3560 ;	../../../core/net/mac/lpp.c:722: packetbuf_hdrreduce(sizeof(struct lpp_hdr));
   112D 90 00 06           3561 	mov	dptr,#0x0006
   1130 12s00r00           3562 	lcall	_packetbuf_hdrreduce
   1133 D0 03              3563 	pop	ar3
   1135 D0 02              3564 	pop	ar2
                           3565 ;	../../../core/net/mac/lpp.c:725: if(hdr.type == TYPE_PROBE) {
   1137 A8*00              3566 	mov	r0,_bp
   1139 08                 3567 	inc	r0
   113A 86 04              3568 	mov	ar4,@r0
   113C 08                 3569 	inc	r0
   113D 86 05              3570 	mov	ar5,@r0
   113F BC 01 05           3571 	cjne	r4,#0x01,00159$
   1142 BD 00 02           3572 	cjne	r5,#0x00,00159$
   1145 80 07              3573 	sjmp	00160$
   1147                    3574 00159$:
   1147 D0 03              3575 	pop	ar3
   1149 D0 02              3576 	pop	ar2
   114B 02s14r69           3577 	ljmp	00126$
   114E                    3578 00160$:
                           3579 ;	../../../core/net/mac/lpp.c:730: register_encounter(&hdr.sender, reception_time);
   114E E5*00              3580 	mov	a,_bp
   1150 04                 3581 	inc	a
   1151 24 02              3582 	add	a,#0x02
   1153 FC                 3583 	mov	r4,a
   1154 7D 00              3584 	mov	r5,#0x00
   1156 7E 40              3585 	mov	r6,#0x40
   1158 8C 82              3586 	mov	dpl,r4
   115A 8D 83              3587 	mov	dph,r5
   115C 8E F0              3588 	mov	b,r6
   115E 12s00rBA           3589 	lcall	_register_encounter
   1161 15 81              3590 	dec	sp
   1163 15 81              3591 	dec	sp
                           3592 ;	../../../core/net/mac/lpp.c:734: MIN(packetbuf_datalen(), sizeof(adata)));
   1165 12s00r00           3593 	lcall	_packetbuf_datalen
   1168 AA 82              3594 	mov	r2,dpl
   116A AB 83              3595 	mov	r3,dph
   116C C3                 3596 	clr	c
   116D EA                 3597 	mov	a,r2
   116E 94 02              3598 	subb	a,#0x02
   1170 EB                 3599 	mov	a,r3
   1171 94 00              3600 	subb	a,#0x00
   1173 50 10              3601 	jnc	00138$
   1175 12s00r00           3602 	lcall	_packetbuf_datalen
   1178 C8                 3603 	xch	a,r0
   1179 E5*00              3604 	mov	a,_bp
   117B 24 0F              3605 	add	a,#0x0f
   117D C8                 3606 	xch	a,r0
   117E A6 82              3607 	mov	@r0,dpl
   1180 08                 3608 	inc	r0
   1181 A6 83              3609 	mov	@r0,dph
   1183 80 0A              3610 	sjmp	00139$
   1185                    3611 00138$:
   1185 E5*00              3612 	mov	a,_bp
   1187 24 0F              3613 	add	a,#0x0f
   1189 F8                 3614 	mov	r0,a
   118A 76 02              3615 	mov	@r0,#0x02
   118C 08                 3616 	inc	r0
   118D 76 00              3617 	mov	@r0,#0x00
   118F                    3618 00139$:
                           3619 ;	../../../core/net/mac/lpp.c:733: memcpy(&adata, packetbuf_dataptr(),
   118F 12s00r00           3620 	lcall	_packetbuf_dataptr
   1192 AC 82              3621 	mov	r4,dpl
   1194 AD 83              3622 	mov	r5,dph
   1196 AE F0              3623 	mov	r6,b
   1198 E5*00              3624 	mov	a,_bp
   119A 24 07              3625 	add	a,#0x07
   119C FF                 3626 	mov	r7,a
   119D 7A 00              3627 	mov	r2,#0x00
   119F 7B 40              3628 	mov	r3,#0x40
   11A1 E5*00              3629 	mov	a,_bp
   11A3 24 0F              3630 	add	a,#0x0f
   11A5 F8                 3631 	mov	r0,a
   11A6 E6                 3632 	mov	a,@r0
   11A7 C0 E0              3633 	push	acc
   11A9 08                 3634 	inc	r0
   11AA E6                 3635 	mov	a,@r0
   11AB C0 E0              3636 	push	acc
   11AD C0 04              3637 	push	ar4
   11AF C0 05              3638 	push	ar5
   11B1 C0 06              3639 	push	ar6
   11B3 8F 82              3640 	mov	dpl,r7
   11B5 8A 83              3641 	mov	dph,r2
   11B7 8B F0              3642 	mov	b,r3
   11B9 12s00r00           3643 	lcall	_memcpy
   11BC E5 81              3644 	mov	a,sp
   11BE 24 FB              3645 	add	a,#0xfb
   11C0 F5 81              3646 	mov	sp,a
                           3647 ;	../../../core/net/mac/lpp.c:761: if(list_length(queued_packets_list) > 0) {
   11C2 90s00r0E           3648 	mov	dptr,#_queued_packets_list
   11C5 E0                 3649 	movx	a,@dptr
   11C6 FA                 3650 	mov	r2,a
   11C7 A3                 3651 	inc	dptr
   11C8 E0                 3652 	movx	a,@dptr
   11C9 FB                 3653 	mov	r3,a
   11CA A3                 3654 	inc	dptr
   11CB E0                 3655 	movx	a,@dptr
   11CC FC                 3656 	mov	r4,a
   11CD 8A 82              3657 	mov	dpl,r2
   11CF 8B 83              3658 	mov	dph,r3
   11D1 8C F0              3659 	mov	b,r4
   11D3 12s00r00           3660 	lcall	_list_length
   11D6 AA 82              3661 	mov	r2,dpl
   11D8 AB 83              3662 	mov	r3,dph
   11DA C3                 3663 	clr	c
   11DB E4                 3664 	clr	a
   11DC 9A                 3665 	subb	a,r2
   11DD 74 80              3666 	mov	a,#(0x00 ^ 0x80)
   11DF 8B F0              3667 	mov	b,r3
   11E1 63 F0 80           3668 	xrl	b,#0x80
   11E4 95 F0              3669 	subb	a,b
   11E6 40 03              3670 	jc	00162$
   11E8 02s15rD9           3671 	ljmp	00136$
   11EB                    3672 00162$:
                           3673 ;	../../../core/net/mac/lpp.c:763: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
   11EB 90s00r0E           3674 	mov	dptr,#_queued_packets_list
   11EE E0                 3675 	movx	a,@dptr
   11EF FA                 3676 	mov	r2,a
   11F0 A3                 3677 	inc	dptr
   11F1 E0                 3678 	movx	a,@dptr
   11F2 FB                 3679 	mov	r3,a
   11F3 A3                 3680 	inc	dptr
   11F4 E0                 3681 	movx	a,@dptr
   11F5 FC                 3682 	mov	r4,a
   11F6 8A 82              3683 	mov	dpl,r2
   11F8 8B 83              3684 	mov	dph,r3
   11FA 8C F0              3685 	mov	b,r4
   11FC 12s00r00           3686 	lcall	_list_head
   11FF AA 82              3687 	mov	r2,dpl
   1201 AB 83              3688 	mov	r3,dph
   1203 AC F0              3689 	mov	r4,b
   1205 E5*00              3690 	mov	a,_bp
   1207 24 09              3691 	add	a,#0x09
   1209 F8                 3692 	mov	r0,a
   120A A6 02              3693 	mov	@r0,ar2
   120C 08                 3694 	inc	r0
   120D A6 03              3695 	mov	@r0,ar3
   120F 08                 3696 	inc	r0
   1210 A6 04              3697 	mov	@r0,ar4
   1212                    3698 00128$:
   1212 E5*00              3699 	mov	a,_bp
   1214 24 09              3700 	add	a,#0x09
   1216 F8                 3701 	mov	r0,a
   1217 B6 00 0B           3702 	cjne	@r0,#0x00,00163$
   121A 08                 3703 	inc	r0
   121B B6 00 07           3704 	cjne	@r0,#0x00,00163$
   121E 08                 3705 	inc	r0
   121F B6 00 03           3706 	cjne	@r0,#0x00,00163$
   1222 02s15rD9           3707 	ljmp	00136$
   1225                    3708 00163$:
                           3709 ;	../../../core/net/mac/lpp.c:766: receiver = queuebuf_addr(i->packet, PACKETBUF_ADDR_RECEIVER);
   1225 E5*00              3710 	mov	a,_bp
   1227 24 09              3711 	add	a,#0x09
   1229 F8                 3712 	mov	r0,a
   122A 74 03              3713 	mov	a,#0x03
   122C 26                 3714 	add	a,@r0
   122D FD                 3715 	mov	r5,a
   122E E4                 3716 	clr	a
   122F 08                 3717 	inc	r0
   1230 36                 3718 	addc	a,@r0
   1231 FE                 3719 	mov	r6,a
   1232 08                 3720 	inc	r0
   1233 86 07              3721 	mov	ar7,@r0
   1235 8D 82              3722 	mov	dpl,r5
   1237 8E 83              3723 	mov	dph,r6
   1239 8F F0              3724 	mov	b,r7
   123B 12s00r00           3725 	lcall	__gptrget
   123E FD                 3726 	mov	r5,a
   123F A3                 3727 	inc	dptr
   1240 12s00r00           3728 	lcall	__gptrget
   1243 FE                 3729 	mov	r6,a
   1244 A3                 3730 	inc	dptr
   1245 12s00r00           3731 	lcall	__gptrget
   1248 FF                 3732 	mov	r7,a
   1249 74 19              3733 	mov	a,#0x19
   124B C0 E0              3734 	push	acc
   124D 8D 82              3735 	mov	dpl,r5
   124F 8E 83              3736 	mov	dph,r6
   1251 8F F0              3737 	mov	b,r7
   1253 12s00r00           3738 	lcall	_queuebuf_addr
   1256 AD 82              3739 	mov	r5,dpl
   1258 AE 83              3740 	mov	r6,dph
   125A AF F0              3741 	mov	r7,b
   125C 15 81              3742 	dec	sp
   125E E5*00              3743 	mov	a,_bp
   1260 24 0C              3744 	add	a,#0x0c
   1262 F8                 3745 	mov	r0,a
   1263 A6 05              3746 	mov	@r0,ar5
   1265 08                 3747 	inc	r0
   1266 A6 06              3748 	mov	@r0,ar6
   1268 08                 3749 	inc	r0
   1269 A6 07              3750 	mov	@r0,ar7
                           3751 ;	../../../core/net/mac/lpp.c:767: if(rimeaddr_cmp(receiver, &hdr.sender) ||
   126B E5*00              3752 	mov	a,_bp
   126D 04                 3753 	inc	a
   126E 24 02              3754 	add	a,#0x02
   1270 FA                 3755 	mov	r2,a
   1271 7B 00              3756 	mov	r3,#0x00
   1273 7C 40              3757 	mov	r4,#0x40
   1275 C0 02              3758 	push	ar2
   1277 C0 03              3759 	push	ar3
   1279 C0 04              3760 	push	ar4
   127B E5*00              3761 	mov	a,_bp
   127D 24 0C              3762 	add	a,#0x0c
   127F F8                 3763 	mov	r0,a
   1280 86 82              3764 	mov	dpl,@r0
   1282 08                 3765 	inc	r0
   1283 86 83              3766 	mov	dph,@r0
   1285 08                 3767 	inc	r0
   1286 86 F0              3768 	mov	b,@r0
   1288 12s00r00           3769 	lcall	_rimeaddr_cmp
   128B AA 82              3770 	mov	r2,dpl
   128D AB 83              3771 	mov	r3,dph
   128F 15 81              3772 	dec	sp
   1291 15 81              3773 	dec	sp
   1293 15 81              3774 	dec	sp
   1295 EA                 3775 	mov	a,r2
   1296 4B                 3776 	orl	a,r3
   1297 70 2D              3777 	jnz	00110$
                           3778 ;	../../../core/net/mac/lpp.c:768: rimeaddr_cmp(receiver, &rimeaddr_null)) {
   1299 74r00              3779 	mov	a,#_rimeaddr_null
   129B C0 E0              3780 	push	acc
   129D 74s00              3781 	mov	a,#(_rimeaddr_null >> 8)
   129F C0 E0              3782 	push	acc
   12A1 74 80              3783 	mov	a,#0x80
   12A3 C0 E0              3784 	push	acc
   12A5 E5*00              3785 	mov	a,_bp
   12A7 24 0C              3786 	add	a,#0x0c
   12A9 F8                 3787 	mov	r0,a
   12AA 86 82              3788 	mov	dpl,@r0
   12AC 08                 3789 	inc	r0
   12AD 86 83              3790 	mov	dph,@r0
   12AF 08                 3791 	inc	r0
   12B0 86 F0              3792 	mov	b,@r0
   12B2 12s00r00           3793 	lcall	_rimeaddr_cmp
   12B5 AD 82              3794 	mov	r5,dpl
   12B7 AE 83              3795 	mov	r6,dph
   12B9 15 81              3796 	dec	sp
   12BB 15 81              3797 	dec	sp
   12BD 15 81              3798 	dec	sp
   12BF ED                 3799 	mov	a,r5
   12C0 4E                 3800 	orl	a,r6
   12C1 70 03              3801 	jnz	00165$
   12C3 02s14r43           3802 	ljmp	00130$
   12C6                    3803 00165$:
   12C6                    3804 00110$:
                           3805 ;	../../../core/net/mac/lpp.c:769: queuebuf_to_packetbuf(i->packet);
   12C6 E5*00              3806 	mov	a,_bp
   12C8 24 09              3807 	add	a,#0x09
   12CA F8                 3808 	mov	r0,a
   12CB 74 03              3809 	mov	a,#0x03
   12CD 26                 3810 	add	a,@r0
   12CE FD                 3811 	mov	r5,a
   12CF E4                 3812 	clr	a
   12D0 08                 3813 	inc	r0
   12D1 36                 3814 	addc	a,@r0
   12D2 FE                 3815 	mov	r6,a
   12D3 08                 3816 	inc	r0
   12D4 86 07              3817 	mov	ar7,@r0
   12D6 8D 82              3818 	mov	dpl,r5
   12D8 8E 83              3819 	mov	dph,r6
   12DA 8F F0              3820 	mov	b,r7
   12DC 12s00r00           3821 	lcall	__gptrget
   12DF FA                 3822 	mov	r2,a
   12E0 A3                 3823 	inc	dptr
   12E1 12s00r00           3824 	lcall	__gptrget
   12E4 FB                 3825 	mov	r3,a
   12E5 A3                 3826 	inc	dptr
   12E6 12s00r00           3827 	lcall	__gptrget
   12E9 FC                 3828 	mov	r4,a
   12EA 8A 82              3829 	mov	dpl,r2
   12EC 8B 83              3830 	mov	dph,r3
   12EE 8C F0              3831 	mov	b,r4
   12F0 C0 05              3832 	push	ar5
   12F2 C0 06              3833 	push	ar6
   12F4 C0 07              3834 	push	ar7
   12F6 12s00r00           3835 	lcall	_queuebuf_to_packetbuf
   12F9 D0 07              3836 	pop	ar7
   12FB D0 06              3837 	pop	ar6
   12FD D0 05              3838 	pop	ar5
                           3839 ;	../../../core/net/mac/lpp.c:772: if(i->broadcast_flag == BROADCAST_FLAG_NONE ||
   12FF E5*00              3840 	mov	a,_bp
   1301 24 09              3841 	add	a,#0x09
   1303 F8                 3842 	mov	r0,a
   1304 74 29              3843 	mov	a,#0x29
   1306 26                 3844 	add	a,@r0
   1307 FA                 3845 	mov	r2,a
   1308 E4                 3846 	clr	a
   1309 08                 3847 	inc	r0
   130A 36                 3848 	addc	a,@r0
   130B FB                 3849 	mov	r3,a
   130C 08                 3850 	inc	r0
   130D 86 04              3851 	mov	ar4,@r0
   130F 8A 82              3852 	mov	dpl,r2
   1311 8B 83              3853 	mov	dph,r3
   1313 8C F0              3854 	mov	b,r4
   1315 12s00r00           3855 	lcall	__gptrget
   1318 FA                 3856 	mov	r2,a
   1319 60 08              3857 	jz	00103$
                           3858 ;	../../../core/net/mac/lpp.c:773: i->broadcast_flag == BROADCAST_FLAG_SEND) {
   131B BA 03 02           3859 	cjne	r2,#0x03,00167$
   131E 80 03              3860 	sjmp	00168$
   1320                    3861 00167$:
   1320 02s13rC4           3862 	ljmp	00104$
   1323                    3863 00168$:
   1323                    3864 00103$:
                           3865 ;	../../../core/net/mac/lpp.c:774: i->num_transmissions = 1;
   1323 E5*00              3866 	mov	a,_bp
   1325 24 09              3867 	add	a,#0x09
   1327 F8                 3868 	mov	r0,a
   1328 74 28              3869 	mov	a,#0x28
   132A 26                 3870 	add	a,@r0
   132B FA                 3871 	mov	r2,a
   132C E4                 3872 	clr	a
   132D 08                 3873 	inc	r0
   132E 36                 3874 	addc	a,@r0
   132F FB                 3875 	mov	r3,a
   1330 08                 3876 	inc	r0
   1331 86 04              3877 	mov	ar4,@r0
   1333 8A 82              3878 	mov	dpl,r2
   1335 8B 83              3879 	mov	dph,r3
   1337 8C F0              3880 	mov	b,r4
   1339 74 01              3881 	mov	a,#0x01
   133B 12s00r00           3882 	lcall	__gptrput
                           3883 ;	../../../core/net/mac/lpp.c:775: NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
   133E 90s00r06           3884 	mov	dptr,#(_cc2430_rf_driver + 0x0006)
   1341 E5*00              3885 	mov	a,_bp
   1343 24 0F              3886 	add	a,#0x0f
   1345 F8                 3887 	mov	r0,a
   1346 E4                 3888 	clr	a
   1347 93                 3889 	movc	a,@a+dptr
   1348 F6                 3890 	mov	@r0,a
   1349 A3                 3891 	inc	dptr
   134A E4                 3892 	clr	a
   134B 93                 3893 	movc	a,@a+dptr
   134C 08                 3894 	inc	r0
   134D F6                 3895 	mov	@r0,a
                           3896 ;	../../../core/net/mac/lpp.c:776: queuebuf_datalen(i->packet));
   134E 8D 82              3897 	mov	dpl,r5
   1350 8E 83              3898 	mov	dph,r6
   1352 8F F0              3899 	mov	b,r7
   1354 12s00r00           3900 	lcall	__gptrget
   1357 FC                 3901 	mov	r4,a
   1358 A3                 3902 	inc	dptr
   1359 12s00r00           3903 	lcall	__gptrget
   135C FA                 3904 	mov	r2,a
   135D A3                 3905 	inc	dptr
   135E 12s00r00           3906 	lcall	__gptrget
   1361 FB                 3907 	mov	r3,a
   1362 8C 82              3908 	mov	dpl,r4
   1364 8A 83              3909 	mov	dph,r2
   1366 8B F0              3910 	mov	b,r3
   1368 C0 05              3911 	push	ar5
   136A C0 06              3912 	push	ar6
   136C C0 07              3913 	push	ar7
   136E 12s00r00           3914 	lcall	_queuebuf_datalen
   1371 AA 82              3915 	mov	r2,dpl
   1373 AB 83              3916 	mov	r3,dph
   1375 D0 07              3917 	pop	ar7
   1377 D0 06              3918 	pop	ar6
   1379 D0 05              3919 	pop	ar5
                           3920 ;	../../../core/net/mac/lpp.c:775: NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
   137B 8D 82              3921 	mov	dpl,r5
   137D 8E 83              3922 	mov	dph,r6
   137F 8F F0              3923 	mov	b,r7
   1381 12s00r00           3924 	lcall	__gptrget
   1384 FD                 3925 	mov	r5,a
   1385 A3                 3926 	inc	dptr
   1386 12s00r00           3927 	lcall	__gptrget
   1389 FE                 3928 	mov	r6,a
   138A A3                 3929 	inc	dptr
   138B 12s00r00           3930 	lcall	__gptrget
   138E FF                 3931 	mov	r7,a
   138F 8D 82              3932 	mov	dpl,r5
   1391 8E 83              3933 	mov	dph,r6
   1393 8F F0              3934 	mov	b,r7
   1395 C0 02              3935 	push	ar2
   1397 C0 03              3936 	push	ar3
   1399 12s00r00           3937 	lcall	_queuebuf_dataptr
   139C AC 82              3938 	mov	r4,dpl
   139E AD 83              3939 	mov	r5,dph
   13A0 AE F0              3940 	mov	r6,b
   13A2 74rBD              3941 	mov	a,#00169$
   13A4 C0 E0              3942 	push	acc
   13A6 74s13              3943 	mov	a,#(00169$ >> 8)
   13A8 C0 E0              3944 	push	acc
   13AA E5*00              3945 	mov	a,_bp
   13AC 24 0F              3946 	add	a,#0x0f
   13AE F8                 3947 	mov	r0,a
   13AF E6                 3948 	mov	a,@r0
   13B0 C0 E0              3949 	push	acc
   13B2 08                 3950 	inc	r0
   13B3 E6                 3951 	mov	a,@r0
   13B4 C0 E0              3952 	push	acc
   13B6 8C 82              3953 	mov	dpl,r4
   13B8 8D 83              3954 	mov	dph,r5
   13BA 8E F0              3955 	mov	b,r6
   13BC 22                 3956 	ret
   13BD                    3957 00169$:
   13BD 15 81              3958 	dec	sp
   13BF 15 81              3959 	dec	sp
                           3960 ;	../../../core/net/mac/lpp.c:777: turn_radio_off();
   13C1 12s00r1A           3961 	lcall	_turn_radio_off
   13C4                    3962 00104$:
                           3963 ;	../../../core/net/mac/lpp.c:802: compower_accumulate(&i->compower);
   13C4 E5*00              3964 	mov	a,_bp
   13C6 24 09              3965 	add	a,#0x09
   13C8 F8                 3966 	mov	r0,a
   13C9 74 1B              3967 	mov	a,#0x1B
   13CB 26                 3968 	add	a,@r0
   13CC FA                 3969 	mov	r2,a
   13CD E4                 3970 	clr	a
   13CE 08                 3971 	inc	r0
   13CF 36                 3972 	addc	a,@r0
   13D0 FB                 3973 	mov	r3,a
   13D1 08                 3974 	inc	r0
   13D2 86 04              3975 	mov	ar4,@r0
   13D4 8A 82              3976 	mov	dpl,r2
   13D6 8B 83              3977 	mov	dph,r3
   13D8 8C F0              3978 	mov	b,r4
   13DA 12s00r00           3979 	lcall	_compower_accumulate
                           3980 ;	../../../core/net/mac/lpp.c:808: if(!rimeaddr_cmp(receiver, &rimeaddr_null)) {
   13DD 74r00              3981 	mov	a,#_rimeaddr_null
   13DF C0 E0              3982 	push	acc
   13E1 74s00              3983 	mov	a,#(_rimeaddr_null >> 8)
   13E3 C0 E0              3984 	push	acc
   13E5 74 80              3985 	mov	a,#0x80
   13E7 C0 E0              3986 	push	acc
   13E9 E5*00              3987 	mov	a,_bp
   13EB 24 0C              3988 	add	a,#0x0c
   13ED F8                 3989 	mov	r0,a
   13EE 86 82              3990 	mov	dpl,@r0
   13F0 08                 3991 	inc	r0
   13F1 86 83              3992 	mov	dph,@r0
   13F3 08                 3993 	inc	r0
   13F4 86 F0              3994 	mov	b,@r0
   13F6 12s00r00           3995 	lcall	_rimeaddr_cmp
   13F9 AA 82              3996 	mov	r2,dpl
   13FB AB 83              3997 	mov	r3,dph
   13FD 15 81              3998 	dec	sp
   13FF 15 81              3999 	dec	sp
   1401 15 81              4000 	dec	sp
   1403 EA                 4001 	mov	a,r2
   1404 4B                 4002 	orl	a,r3
   1405 70 3C              4003 	jnz	00130$
                           4004 ;	../../../core/net/mac/lpp.c:809: remove_queued_packet(i);
   1407 E5*00              4005 	mov	a,_bp
   1409 24 09              4006 	add	a,#0x09
   140B F8                 4007 	mov	r0,a
   140C 86 82              4008 	mov	dpl,@r0
   140E 08                 4009 	inc	r0
   140F 86 83              4010 	mov	dph,@r0
   1411 08                 4011 	inc	r0
   1412 86 F0              4012 	mov	b,@r0
   1414 12s04rEB           4013 	lcall	_remove_queued_packet
                           4014 ;	../../../core/net/mac/lpp.c:817: if(is_streaming) {
   1417 90s01r94           4015 	mov	dptr,#_is_streaming
   141A E0                 4016 	movx	a,@dptr
   141B FA                 4017 	mov	r2,a
   141C 60 25              4018 	jz	00130$
                           4019 ;	../../../core/net/mac/lpp.c:818: ctimer_set(&stream_probe_timer, STREAM_PROBE_TIME,
   141E E4                 4020 	clr	a
   141F C0 E0              4021 	push	acc
   1421 C0 E0              4022 	push	acc
   1423 C0 E0              4023 	push	acc
   1425 74rF8              4024 	mov	a,#_send_stream_probe
   1427 C0 E0              4025 	push	acc
   1429 74s09              4026 	mov	a,#(_send_stream_probe >> 8)
   142B C0 E0              4027 	push	acc
   142D 74 01              4028 	mov	a,#0x01
   142F C0 E0              4029 	push	acc
   1431 E4                 4030 	clr	a
   1432 C0 E0              4031 	push	acc
   1434 90s01r95           4032 	mov	dptr,#_stream_probe_timer
   1437 75 F0 00           4033 	mov	b,#0x00
   143A 12s00r00           4034 	lcall	_ctimer_set
   143D E5 81              4035 	mov	a,sp
   143F 24 F9              4036 	add	a,#0xf9
   1441 F5 81              4037 	mov	sp,a
   1443                    4038 00130$:
                           4039 ;	../../../core/net/mac/lpp.c:763: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
   1443 E5*00              4040 	mov	a,_bp
   1445 24 09              4041 	add	a,#0x09
   1447 F8                 4042 	mov	r0,a
   1448 86 82              4043 	mov	dpl,@r0
   144A 08                 4044 	inc	r0
   144B 86 83              4045 	mov	dph,@r0
   144D 08                 4046 	inc	r0
   144E 86 F0              4047 	mov	b,@r0
   1450 12s00r00           4048 	lcall	_list_item_next
   1453 AA 82              4049 	mov	r2,dpl
   1455 AB 83              4050 	mov	r3,dph
   1457 AC F0              4051 	mov	r4,b
   1459 E5*00              4052 	mov	a,_bp
   145B 24 09              4053 	add	a,#0x09
   145D F8                 4054 	mov	r0,a
   145E A6 02              4055 	mov	@r0,ar2
   1460 08                 4056 	inc	r0
   1461 A6 03              4057 	mov	@r0,ar3
   1463 08                 4058 	inc	r0
   1464 A6 04              4059 	mov	@r0,ar4
   1466 02s12r12           4060 	ljmp	00128$
   1469                    4061 00126$:
                           4062 ;	../../../core/net/mac/lpp.c:837: } else if(hdr.type == TYPE_DATA) {
   1469 BC 02 05           4063 	cjne	r4,#0x02,00172$
   146C BD 00 02           4064 	cjne	r5,#0x00,00172$
   146F 80 03              4065 	sjmp	00173$
   1471                    4066 00172$:
   1471 02s15rD9           4067 	ljmp	00136$
   1474                    4068 00173$:
                           4069 ;	../../../core/net/mac/lpp.c:838: turn_radio_off();
   1474 12s00r1A           4070 	lcall	_turn_radio_off
                           4071 ;	../../../core/net/mac/lpp.c:839: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
   1477 E5*00              4072 	mov	a,_bp
   1479 04                 4073 	inc	a
   147A 24 04              4074 	add	a,#0x04
   147C FA                 4075 	mov	r2,a
   147D 7B 00              4076 	mov	r3,#0x00
   147F 7C 40              4077 	mov	r4,#0x40
   1481 74r00              4078 	mov	a,#_rimeaddr_null
   1483 C0 E0              4079 	push	acc
   1485 74s00              4080 	mov	a,#(_rimeaddr_null >> 8)
   1487 C0 E0              4081 	push	acc
   1489 74 80              4082 	mov	a,#0x80
   148B C0 E0              4083 	push	acc
   148D 8A 82              4084 	mov	dpl,r2
   148F 8B 83              4085 	mov	dph,r3
   1491 8C F0              4086 	mov	b,r4
   1493 12s00r00           4087 	lcall	_rimeaddr_cmp
   1496 AA 82              4088 	mov	r2,dpl
   1498 AB 83              4089 	mov	r3,dph
   149A 15 81              4090 	dec	sp
   149C 15 81              4091 	dec	sp
   149E 15 81              4092 	dec	sp
   14A0 EA                 4093 	mov	a,r2
   14A1 4B                 4094 	orl	a,r3
   14A2 70 4B              4095 	jnz	00118$
                           4096 ;	../../../core/net/mac/lpp.c:840: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_node_addr)) {
   14A4 E5*00              4097 	mov	a,_bp
   14A6 04                 4098 	inc	a
   14A7 24 04              4099 	add	a,#0x04
   14A9 FA                 4100 	mov	r2,a
   14AA 7B 00              4101 	mov	r3,#0x00
   14AC 7C 40              4102 	mov	r4,#0x40
   14AE 74r00              4103 	mov	a,#_rimeaddr_node_addr
   14B0 C0 E0              4104 	push	acc
   14B2 74s00              4105 	mov	a,#(_rimeaddr_node_addr >> 8)
   14B4 C0 E0              4106 	push	acc
   14B6 E4                 4107 	clr	a
   14B7 C0 E0              4108 	push	acc
   14B9 8A 82              4109 	mov	dpl,r2
   14BB 8B 83              4110 	mov	dph,r3
   14BD 8C F0              4111 	mov	b,r4
   14BF 12s00r00           4112 	lcall	_rimeaddr_cmp
   14C2 AA 82              4113 	mov	r2,dpl
   14C4 AB 83              4114 	mov	r3,dph
   14C6 15 81              4115 	dec	sp
   14C8 15 81              4116 	dec	sp
   14CA 15 81              4117 	dec	sp
   14CC EA                 4118 	mov	a,r2
   14CD 4B                 4119 	orl	a,r3
   14CE 70 03              4120 	jnz	00116$
                           4121 ;	../../../core/net/mac/lpp.c:845: return;
   14D0 02s15rD9           4122 	ljmp	00136$
   14D3                    4123 00116$:
                           4124 ;	../../../core/net/mac/lpp.c:847: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &hdr.receiver);
   14D3 E5*00              4125 	mov	a,_bp
   14D5 04                 4126 	inc	a
   14D6 24 04              4127 	add	a,#0x04
   14D8 FA                 4128 	mov	r2,a
   14D9 7B 00              4129 	mov	r3,#0x00
   14DB 7C 40              4130 	mov	r4,#0x40
   14DD C0 02              4131 	push	ar2
   14DF C0 03              4132 	push	ar3
   14E1 C0 04              4133 	push	ar4
   14E3 75 82 19           4134 	mov	dpl,#0x19
   14E6 12s00r00           4135 	lcall	_packetbuf_set_addr
   14E9 15 81              4136 	dec	sp
   14EB 15 81              4137 	dec	sp
   14ED 15 81              4138 	dec	sp
   14EF                    4139 00118$:
                           4140 ;	../../../core/net/mac/lpp.c:849: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &hdr.sender);
   14EF E5*00              4141 	mov	a,_bp
   14F1 04                 4142 	inc	a
   14F2 24 02              4143 	add	a,#0x02
   14F4 FA                 4144 	mov	r2,a
   14F5 7B 00              4145 	mov	r3,#0x00
   14F7 7C 40              4146 	mov	r4,#0x40
   14F9 C0 02              4147 	push	ar2
   14FB C0 03              4148 	push	ar3
   14FD C0 04              4149 	push	ar4
   14FF 75 82 18           4150 	mov	dpl,#0x18
   1502 12s00r00           4151 	lcall	_packetbuf_set_addr
   1505 15 81              4152 	dec	sp
   1507 15 81              4153 	dec	sp
   1509 15 81              4154 	dec	sp
                           4155 ;	../../../core/net/mac/lpp.c:856: compower_accumulate(&current_packet);
   150B 90s00r01           4156 	mov	dptr,#_current_packet
   150E 75 F0 00           4157 	mov	b,#0x00
   1511 12s00r00           4158 	lcall	_compower_accumulate
                           4159 ;	../../../core/net/mac/lpp.c:861: compower_attrconv(&current_packet);
   1514 90s00r01           4160 	mov	dptr,#_current_packet
   1517 75 F0 00           4161 	mov	b,#0x00
   151A 12s00r00           4162 	lcall	_compower_attrconv
                           4163 ;	../../../core/net/mac/lpp.c:865: compower_clear(&current_packet);
   151D 90s00r01           4164 	mov	dptr,#_current_packet
   1520 75 F0 00           4165 	mov	b,#0x00
   1523 12s00r00           4166 	lcall	_compower_clear
                           4167 ;	../../../core/net/mac/lpp.c:868: if(rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
   1526 E5*00              4168 	mov	a,_bp
   1528 04                 4169 	inc	a
   1529 24 04              4170 	add	a,#0x04
   152B FA                 4171 	mov	r2,a
   152C 7B 00              4172 	mov	r3,#0x00
   152E 7C 40              4173 	mov	r4,#0x40
   1530 74r00              4174 	mov	a,#_rimeaddr_null
   1532 C0 E0              4175 	push	acc
   1534 74s00              4176 	mov	a,#(_rimeaddr_null >> 8)
   1536 C0 E0              4177 	push	acc
   1538 74 80              4178 	mov	a,#0x80
   153A C0 E0              4179 	push	acc
   153C 8A 82              4180 	mov	dpl,r2
   153E 8B 83              4181 	mov	dph,r3
   1540 8C F0              4182 	mov	b,r4
   1542 12s00r00           4183 	lcall	_rimeaddr_cmp
   1545 AA 82              4184 	mov	r2,dpl
   1547 AB 83              4185 	mov	r3,dph
   1549 15 81              4186 	dec	sp
   154B 15 81              4187 	dec	sp
   154D 15 81              4188 	dec	sp
   154F EA                 4189 	mov	a,r2
   1550 4B                 4190 	orl	a,r3
   1551 60 6D              4191 	jz	00122$
                           4192 ;	../../../core/net/mac/lpp.c:876: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
   1553 90s00r0E           4193 	mov	dptr,#_queued_packets_list
   1556 E0                 4194 	movx	a,@dptr
   1557 FA                 4195 	mov	r2,a
   1558 A3                 4196 	inc	dptr
   1559 E0                 4197 	movx	a,@dptr
   155A FB                 4198 	mov	r3,a
   155B A3                 4199 	inc	dptr
   155C E0                 4200 	movx	a,@dptr
   155D FC                 4201 	mov	r4,a
   155E 8A 82              4202 	mov	dpl,r2
   1560 8B 83              4203 	mov	dph,r3
   1562 8C F0              4204 	mov	b,r4
   1564 12s00r00           4205 	lcall	_list_head
   1567 AA 82              4206 	mov	r2,dpl
   1569 AB 83              4207 	mov	r3,dph
   156B AC F0              4208 	mov	r4,b
   156D                    4209 00132$:
   156D BA 00 08           4210 	cjne	r2,#0x00,00177$
   1570 BB 00 05           4211 	cjne	r3,#0x00,00177$
   1573 BC 00 02           4212 	cjne	r4,#0x00,00177$
   1576 80 48              4213 	sjmp	00122$
   1578                    4214 00177$:
                           4215 ;	../../../core/net/mac/lpp.c:879: if(i->broadcast_flag == BROADCAST_FLAG_PENDING) {
   1578 74 29              4216 	mov	a,#0x29
   157A 2A                 4217 	add	a,r2
   157B FD                 4218 	mov	r5,a
   157C E4                 4219 	clr	a
   157D 3B                 4220 	addc	a,r3
   157E FE                 4221 	mov	r6,a
   157F 8C 07              4222 	mov	ar7,r4
   1581 8D 82              4223 	mov	dpl,r5
   1583 8E 83              4224 	mov	dph,r6
   1585 8F F0              4225 	mov	b,r7
   1587 12s00r00           4226 	lcall	__gptrget
   158A FD                 4227 	mov	r5,a
   158B BD 02 1B           4228 	cjne	r5,#0x02,00134$
                           4229 ;	../../../core/net/mac/lpp.c:881: set_broadcast_flag(i, BROADCAST_FLAG_WAITING);
   158E C0 02              4230 	push	ar2
   1590 C0 03              4231 	push	ar3
   1592 C0 04              4232 	push	ar4
   1594 74 01              4233 	mov	a,#0x01
   1596 C0 E0              4234 	push	acc
   1598 8A 82              4235 	mov	dpl,r2
   159A 8B 83              4236 	mov	dph,r3
   159C 8C F0              4237 	mov	b,r4
   159E 12s06rDA           4238 	lcall	_set_broadcast_flag
   15A1 15 81              4239 	dec	sp
   15A3 D0 04              4240 	pop	ar4
   15A5 D0 03              4241 	pop	ar3
   15A7 D0 02              4242 	pop	ar2
   15A9                    4243 00134$:
                           4244 ;	../../../core/net/mac/lpp.c:876: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
   15A9 8A 82              4245 	mov	dpl,r2
   15AB 8B 83              4246 	mov	dph,r3
   15AD 8C F0              4247 	mov	b,r4
   15AF 12s00r00           4248 	lcall	_list_item_next
   15B2 AD 82              4249 	mov	r5,dpl
   15B4 AE 83              4250 	mov	r6,dph
   15B6 AF F0              4251 	mov	r7,b
   15B8 8D 02              4252 	mov	ar2,r5
   15BA 8E 03              4253 	mov	ar3,r6
   15BC 8F 04              4254 	mov	ar4,r7
   15BE 80 AD              4255 	sjmp	00132$
   15C0                    4256 00122$:
                           4257 ;	../../../core/net/mac/lpp.c:908: NETSTACK_MAC.input();
   15C0 90s00r07           4258 	mov	dptr,#(_csma_driver + 0x0007)
   15C3 E4                 4259 	clr	a
   15C4 93                 4260 	movc	a,@a+dptr
   15C5 FA                 4261 	mov	r2,a
   15C6 A3                 4262 	inc	dptr
   15C7 E4                 4263 	clr	a
   15C8 93                 4264 	movc	a,@a+dptr
   15C9 FB                 4265 	mov	r3,a
   15CA C0 02              4266 	push	ar2
   15CC C0 03              4267 	push	ar3
   15CE 8A 82              4268 	mov	dpl,r2
   15D0 8B 83              4269 	mov	dph,r3
   15D2 12s00r00           4270 	lcall	__sdcc_call_dptr
   15D5 D0 03              4271 	pop	ar3
   15D7 D0 02              4272 	pop	ar2
   15D9                    4273 00136$:
   15D9 85*00 81           4274 	mov	sp,_bp
   15DC D0*00              4275 	pop	_bp
   15DE 22                 4276 	ret
                           4277 ;------------------------------------------------------------
                           4278 ;Allocation info for local variables in function 'on'
                           4279 ;------------------------------------------------------------
                           4280 ;------------------------------------------------------------
                           4281 ;	../../../core/net/mac/lpp.c:913: on(void)
                           4282 ;	-----------------------------------------
                           4283 ;	 function on
                           4284 ;	-----------------------------------------
   15DF                    4285 _on:
                           4286 ;	../../../core/net/mac/lpp.c:915: lpp_is_on = 1;
   15DF 90s00r00           4287 	mov	dptr,#_lpp_is_on
   15E2 74 01              4288 	mov	a,#0x01
   15E4 F0                 4289 	movx	@dptr,a
                           4290 ;	../../../core/net/mac/lpp.c:916: turn_radio_on();
   15E5 12s00r00           4291 	lcall	_turn_radio_on
                           4292 ;	../../../core/net/mac/lpp.c:917: return 1;
   15E8 90 00 01           4293 	mov	dptr,#0x0001
   15EB 22                 4294 	ret
                           4295 ;------------------------------------------------------------
                           4296 ;Allocation info for local variables in function 'off'
                           4297 ;------------------------------------------------------------
                           4298 ;keep_radio_on             Allocated to registers r2 r3 
                           4299 ;------------------------------------------------------------
                           4300 ;	../../../core/net/mac/lpp.c:921: off(int keep_radio_on)
                           4301 ;	-----------------------------------------
                           4302 ;	 function off
                           4303 ;	-----------------------------------------
   15EC                    4304 _off:
   15EC AA 82              4305 	mov	r2,dpl
   15EE AB 83              4306 	mov	r3,dph
                           4307 ;	../../../core/net/mac/lpp.c:923: lpp_is_on = 0;
   15F0 90s00r00           4308 	mov	dptr,#_lpp_is_on
   15F3 E4                 4309 	clr	a
   15F4 F0                 4310 	movx	@dptr,a
                           4311 ;	../../../core/net/mac/lpp.c:924: if(keep_radio_on) {
   15F5 EA                 4312 	mov	a,r2
   15F6 4B                 4313 	orl	a,r3
   15F7 60 05              4314 	jz	00102$
                           4315 ;	../../../core/net/mac/lpp.c:925: turn_radio_on();
   15F9 12s00r00           4316 	lcall	_turn_radio_on
   15FC 80 03              4317 	sjmp	00103$
   15FE                    4318 00102$:
                           4319 ;	../../../core/net/mac/lpp.c:927: turn_radio_off();
   15FE 12s00r1A           4320 	lcall	_turn_radio_off
   1601                    4321 00103$:
                           4322 ;	../../../core/net/mac/lpp.c:929: return 1;
   1601 90 00 01           4323 	mov	dptr,#0x0001
   1604 22                 4324 	ret
                           4325 ;------------------------------------------------------------
                           4326 ;Allocation info for local variables in function 'channel_check_interval'
                           4327 ;------------------------------------------------------------
                           4328 ;------------------------------------------------------------
                           4329 ;	../../../core/net/mac/lpp.c:933: channel_check_interval(void)
                           4330 ;	-----------------------------------------
                           4331 ;	 function channel_check_interval
                           4332 ;	-----------------------------------------
   1605                    4333 _channel_check_interval:
                           4334 ;	../../../core/net/mac/lpp.c:935: return OFF_TIME + LISTEN_TIME;
   1605 90 00 20           4335 	mov	dptr,#0x0020
   1608 22                 4336 	ret
                           4337 ;------------------------------------------------------------
                           4338 ;Allocation info for local variables in function 'init'
                           4339 ;------------------------------------------------------------
                           4340 ;------------------------------------------------------------
                           4341 ;	../../../core/net/mac/lpp.c:939: init(void)
                           4342 ;	-----------------------------------------
                           4343 ;	 function init
                           4344 ;	-----------------------------------------
   1609                    4345 _init:
                           4346 ;	../../../core/net/mac/lpp.c:941: restart_dutycycle(random_rand() % OFF_TIME);
   1609 12s00r00           4347 	lcall	_random_rand
   160C AA 82              4348 	mov	r2,dpl
   160E AB 83              4349 	mov	r3,dph
   1610 74 1F              4350 	mov	a,#0x1F
   1612 C0 E0              4351 	push	acc
   1614 E4                 4352 	clr	a
   1615 C0 E0              4353 	push	acc
   1617 8A 82              4354 	mov	dpl,r2
   1619 8B 83              4355 	mov	dph,r3
   161B 12s00r00           4356 	lcall	__moduint
   161E AA 82              4357 	mov	r2,dpl
   1620 AB 83              4358 	mov	r3,dph
   1622 15 81              4359 	dec	sp
   1624 15 81              4360 	dec	sp
   1626 8A 82              4361 	mov	dpl,r2
   1628 8B 83              4362 	mov	dph,r3
   162A 12s0Dr4A           4363 	lcall	_restart_dutycycle
                           4364 ;	../../../core/net/mac/lpp.c:943: lpp_is_on = 1;
   162D 90s00r00           4365 	mov	dptr,#_lpp_is_on
   1630 74 01              4366 	mov	a,#0x01
   1632 F0                 4367 	movx	@dptr,a
                           4368 ;	../../../core/net/mac/lpp.c:945: announcement_register_listen_callback(listen_callback);
   1633 90s07r2D           4369 	mov	dptr,#_listen_callback
   1636 12s00r00           4370 	lcall	_announcement_register_listen_callback
                           4371 ;	../../../core/net/mac/lpp.c:947: memb_init(&queued_packets_memb);
   1639 90s00r11           4372 	mov	dptr,#_queued_packets_memb
   163C 75 F0 00           4373 	mov	b,#0x00
   163F 12s00r00           4374 	lcall	_memb_init
                           4375 ;	../../../core/net/mac/lpp.c:948: list_init(queued_packets_list);
   1642 90s00r0E           4376 	mov	dptr,#_queued_packets_list
   1645 E0                 4377 	movx	a,@dptr
   1646 FA                 4378 	mov	r2,a
   1647 A3                 4379 	inc	dptr
   1648 E0                 4380 	movx	a,@dptr
   1649 FB                 4381 	mov	r3,a
   164A A3                 4382 	inc	dptr
   164B E0                 4383 	movx	a,@dptr
   164C FC                 4384 	mov	r4,a
   164D 8A 82              4385 	mov	dpl,r2
   164F 8B 83              4386 	mov	dph,r3
   1651 8C F0              4387 	mov	b,r4
   1653 12s00r00           4388 	lcall	_list_init
                           4389 ;	../../../core/net/mac/lpp.c:949: list_init(pending_packets_list);
   1656 90s00r08           4390 	mov	dptr,#_pending_packets_list
   1659 E0                 4391 	movx	a,@dptr
   165A FA                 4392 	mov	r2,a
   165B A3                 4393 	inc	dptr
   165C E0                 4394 	movx	a,@dptr
   165D FB                 4395 	mov	r3,a
   165E A3                 4396 	inc	dptr
   165F E0                 4397 	movx	a,@dptr
   1660 FC                 4398 	mov	r4,a
   1661 8A 82              4399 	mov	dpl,r2
   1663 8B 83              4400 	mov	dph,r3
   1665 8C F0              4401 	mov	b,r4
   1667 02s00r00           4402 	ljmp	_list_init
                           4403 	.area CSEG    (CODE)
                           4404 	.area CONST   (CODE)
   0000                    4405 __str_0:
   0000 6E 75 6C 6C 20 70  4406 	.ascii "null packet"
        61 63 6B 65 74
   000B 0A                 4407 	.db 0x0A
   000C 00                 4408 	.db 0x00
   000D                    4409 __str_1:
   000D 69 20 3D 3D 20 4E  4410 	.ascii "i == NULL"
        55 4C 4C
   0016 0A                 4411 	.db 0x0A
   0017 00                 4412 	.db 0x00
   0018                    4413 __str_2:
   0018 6C 70 70 20 69 6E  4414 	.ascii "lpp input_packet framer error"
        70 75 74 5F 70 61
        63 6B 65 74 20 66
        72 61 6D 65 72 20
        65 72 72 6F 72
   0035 0A                 4415 	.db 0x0A
   0036 00                 4416 	.db 0x00
   0037                    4417 _lpp_driver:
   0037r46s00 80           4418 	.byte _str_3,(_str_3 >> 8),#0x80
   003Ar09s16              4419 	.byte _init,(_init >> 8)
   003Cr7Cs0D              4420 	.byte _send_packet,(_send_packet >> 8)
   003ErA2s10              4421 	.byte _input_packet,(_input_packet >> 8)
   0040rDFs15              4422 	.byte _on,(_on >> 8)
   0042rECs15              4423 	.byte _off,(_off >> 8)
   0044r05s16              4424 	.byte _channel_check_interval,(_channel_check_interval >> 8)
   0046                    4425 _str_3:
   0046 4C 50 50           4426 	.ascii "LPP"
   0049 00                 4427 	.db 0x00
                           4428 	.area XINIT   (CODE)
   0000                    4429 __xinit__is_listening:
   0000 00                 4430 	.db #0x00	; 0
   0001                    4431 __xinit__off_time_adjustment:
   0001 00 00              4432 	.byte #0x00,#0x00	; 0
   0003                    4433 __xinit__off_time:
   0003 1F 00              4434 	.byte #0x1F,#0x00	; 31
   0005                    4435 __xinit__pending_packets_list_list:
                           4436 ; generic printIvalPtr
   0005 00 00 00           4437 	.byte #0x00,#0x00,#0x00
   0008                    4438 __xinit__pending_packets_list:
   0008r05s00 00           4439 	.byte _pending_packets_list_list,(_pending_packets_list_list >> 8),#0x00
   000B                    4440 __xinit__queued_packets_list_list:
                           4441 ; generic printIvalPtr
   000B 00 00 00           4442 	.byte #0x00,#0x00,#0x00
   000E                    4443 __xinit__queued_packets_list:
   000Er0Bs00 00           4444 	.byte _queued_packets_list_list,(_queued_packets_list_list >> 8),#0x00
   0011                    4445 __xinit__queued_packets_memb:
   0011 2A 00              4446 	.byte #0x2A,#0x00	; 42
   0013 04 00              4447 	.byte #0x04,#0x00	; 4
   0015r20s00 00           4448 	.byte _queued_packets_memb_memb_count,(_queued_packets_memb_memb_count >> 8),#0x00
   0018r24s00 00           4449 	.byte _queued_packets_memb_memb_mem,(_queued_packets_memb_memb_mem >> 8),#0x00
   001B                    4450 __xinit__encounter_list_list:
                           4451 ; generic printIvalPtr
   001B 00 00 00           4452 	.byte #0x00,#0x00,#0x00
   001E                    4453 __xinit__encounter_list:
   001Er1Bs00 00           4454 	.byte _encounter_list_list,(_encounter_list_list >> 8),#0x00
   0021                    4455 __xinit__encounter_memb:
   0021 31 00              4456 	.byte #0x31,#0x00	; 49
   0023 04 00              4457 	.byte #0x04,#0x00	; 4
   0025rCCs00 00           4458 	.byte _encounter_memb_memb_count,(_encounter_memb_memb_count >> 8),#0x00
   0028rD0s00 00           4459 	.byte _encounter_memb_memb_mem,(_encounter_memb_memb_mem >> 8),#0x00
                           4460 	.area CABS    (ABS,CODE)
