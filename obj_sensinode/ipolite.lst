                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:25:07 2018
                              5 ;--------------------------------------------------------
                              6 	.module ipolite
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _IRCON2_P2IF
                             13 	.globl _IRCON2_UTX0IF
                             14 	.globl _IRCON2_UTX1IF
                             15 	.globl _IRCON2_P1IF
                             16 	.globl _IRCON2_WDTIF
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _IRCON_DMAIF
                             26 	.globl _IRCON_T1IF
                             27 	.globl _IRCON_T2IF
                             28 	.globl _IRCON_T3IF
                             29 	.globl _IRCON_T4IF
                             30 	.globl _IRCON_P0IF
                             31 	.globl _IRCON_STIF
                             32 	.globl _IEN1_DMAIE
                             33 	.globl _IEN1_T1IE
                             34 	.globl _IEN1_T2IE
                             35 	.globl _IEN1_T3IE
                             36 	.globl _IEN1_T4IE
                             37 	.globl _IEN1_P0IE
                             38 	.globl _IEN0_RFERRIE
                             39 	.globl _IEN0_ADCIE
                             40 	.globl _IEN0_URX0IE
                             41 	.globl _IEN0_URX1IE
                             42 	.globl _IEN0_ENCIE
                             43 	.globl _IEN0_STIE
                             44 	.globl _IEN0_EA
                             45 	.globl _EA
                             46 	.globl _P2_4
                             47 	.globl _P2_3
                             48 	.globl _P2_2
                             49 	.globl _P2_1
                             50 	.globl _P2_0
                             51 	.globl _S0CON_ENCIF_0
                             52 	.globl _S0CON_ENCIF_1
                             53 	.globl _P1_7
                             54 	.globl _P1_6
                             55 	.globl _P1_5
                             56 	.globl _P1_4
                             57 	.globl _P1_3
                             58 	.globl _P1_2
                             59 	.globl _P1_1
                             60 	.globl _P1_0
                             61 	.globl _TCON_IT0
                             62 	.globl _TCON_RFERRIF
                             63 	.globl _TCON_IT1
                             64 	.globl _TCON_URX0IF
                             65 	.globl _TCON_ADCIF
                             66 	.globl _TCON_URX1IF
                             67 	.globl _P0_0
                             68 	.globl _P0_1
                             69 	.globl _P0_2
                             70 	.globl _P0_3
                             71 	.globl _P0_4
                             72 	.globl _P0_5
                             73 	.globl _P0_6
                             74 	.globl _P0_7
                             75 	.globl _P2DIR
                             76 	.globl _P1DIR
                             77 	.globl _P0DIR
                             78 	.globl _U1GCR
                             79 	.globl _U1UCR
                             80 	.globl _U1BAUD
                             81 	.globl _U1BUF
                             82 	.globl _U1CSR
                             83 	.globl _P2INP
                             84 	.globl _P1INP
                             85 	.globl _P2SEL
                             86 	.globl _P1SEL
                             87 	.globl _P0SEL
                             88 	.globl _ADCCFG
                             89 	.globl _PERCFG
                             90 	.globl _B
                             91 	.globl _T4CC1
                             92 	.globl _T4CCTL1
                             93 	.globl _T4CC0
                             94 	.globl _T4CCTL0
                             95 	.globl _T4CTL
                             96 	.globl _T4CNT
                             97 	.globl _RFIF
                             98 	.globl _IRCON2
                             99 	.globl _T1CCTL2
                            100 	.globl _T1CCTL1
                            101 	.globl _T1CCTL0
                            102 	.globl _T1CTL
                            103 	.globl _T1CNTH
                            104 	.globl _T1CNTL
                            105 	.globl _RFST
                            106 	.globl _ACC
                            107 	.globl _T1CC2H
                            108 	.globl _T1CC2L
                            109 	.globl _T1CC1H
                            110 	.globl _T1CC1L
                            111 	.globl _T1CC0H
                            112 	.globl _T1CC0L
                            113 	.globl _RFD
                            114 	.globl _TIMIF
                            115 	.globl _DMAREQ
                            116 	.globl _DMAARM
                            117 	.globl _DMA0CFGH
                            118 	.globl _DMA0CFGL
                            119 	.globl _DMA1CFGH
                            120 	.globl _DMA1CFGL
                            121 	.globl _DMAIRQ
                            122 	.globl _PSW
                            123 	.globl _T3CC1
                            124 	.globl _T3CCTL1
                            125 	.globl _T3CC0
                            126 	.globl _T3CCTL0
                            127 	.globl _T3CTL
                            128 	.globl _T3CNT
                            129 	.globl _WDCTL
                            130 	.globl _T2CON
                            131 	.globl _MEMCTR
                            132 	.globl _CLKCON
                            133 	.globl _U0GCR
                            134 	.globl _U0UCR
                            135 	.globl _T2CNF
                            136 	.globl _U0BAUD
                            137 	.globl _U0BUF
                            138 	.globl _IRCON
                            139 	.globl _SLEEP
                            140 	.globl _RNDH
                            141 	.globl _RNDL
                            142 	.globl _ADCH
                            143 	.globl _ADCL
                            144 	.globl _IP1
                            145 	.globl _IEN1
                            146 	.globl _RCCTL
                            147 	.globl _ADCCON3
                            148 	.globl _ADCCON2
                            149 	.globl _ADCCON1
                            150 	.globl _ENCCS
                            151 	.globl _ENCDO
                            152 	.globl _ENCDI
                            153 	.globl _FWDATA
                            154 	.globl _FCTL
                            155 	.globl _FADDRH
                            156 	.globl _FADDRL
                            157 	.globl _FWT
                            158 	.globl _IP0
                            159 	.globl _IEN0
                            160 	.globl _IE
                            161 	.globl _T2THD
                            162 	.globl _T2TLD
                            163 	.globl _T2CAPHPH
                            164 	.globl _T2CAPLPL
                            165 	.globl _T2OF2
                            166 	.globl _T2OF1
                            167 	.globl _T2OF0
                            168 	.globl _P2
                            169 	.globl _PSBANK
                            170 	.globl _FMAP
                            171 	.globl _T2PEROF2
                            172 	.globl _T2PEROF1
                            173 	.globl _T2PEROF0
                            174 	.globl _S1CON
                            175 	.globl _IEN2
                            176 	.globl _HSRC
                            177 	.globl _S0CON
                            178 	.globl _ST2
                            179 	.globl _ST1
                            180 	.globl _ST0
                            181 	.globl _T2CMP
                            182 	.globl __XPAGE
                            183 	.globl _DPS
                            184 	.globl _RFIM
                            185 	.globl _P1
                            186 	.globl _P0INP
                            187 	.globl _P1IEN
                            188 	.globl _PICTL
                            189 	.globl _P2IFG
                            190 	.globl _P1IFG
                            191 	.globl _P0IFG
                            192 	.globl _TCON
                            193 	.globl _PCON
                            194 	.globl _U0CSR
                            195 	.globl _DPH1
                            196 	.globl _DPL1
                            197 	.globl _DPH0
                            198 	.globl _DPL0
                            199 	.globl _SP
                            200 	.globl _P0
                            201 	.globl _ADC_SHADOW
                            202 	.globl _U1BUF_SHADOW
                            203 	.globl _RFD_SHADOW
                            204 	.globl _U0BUF_SHADOW
                            205 	.globl _RFSTATUS
                            206 	.globl _CHIPID
                            207 	.globl _CHVER
                            208 	.globl _FSMTC1
                            209 	.globl _RXFIFOCNT
                            210 	.globl _IOCFG3
                            211 	.globl _IOCFG2
                            212 	.globl _IOCFG1
                            213 	.globl _IOCFG0
                            214 	.globl _SHORTADDRL
                            215 	.globl _SHORTADDRH
                            216 	.globl _PANIDL
                            217 	.globl _PANIDH
                            218 	.globl _IEEE_ADDR7
                            219 	.globl _IEEE_ADDR6
                            220 	.globl _IEEE_ADDR5
                            221 	.globl _IEEE_ADDR4
                            222 	.globl _IEEE_ADDR3
                            223 	.globl _IEEE_ADDR2
                            224 	.globl _IEEE_ADDR1
                            225 	.globl _IEEE_ADDR0
                            226 	.globl _DACTSTL
                            227 	.globl _DACTSTH
                            228 	.globl _ADCTSTL
                            229 	.globl _ADCTSTH
                            230 	.globl _FSMSTATE
                            231 	.globl _AGCCTRLL
                            232 	.globl _AGCCTRLH
                            233 	.globl _MANORL
                            234 	.globl _MANORH
                            235 	.globl _MANANDL
                            236 	.globl _MANANDH
                            237 	.globl _FSMTCL
                            238 	.globl _FSMTCH
                            239 	.globl _RFPWR
                            240 	.globl _CSPT
                            241 	.globl _CSPCTRL
                            242 	.globl _CSPZ
                            243 	.globl _CSPY
                            244 	.globl _CSPX
                            245 	.globl _FSCTRLL
                            246 	.globl _FSCTRLH
                            247 	.globl _RXCTRL1L
                            248 	.globl _RXCTRL1H
                            249 	.globl _RXCTRL0L
                            250 	.globl _RXCTRL0H
                            251 	.globl _TXCTRLL
                            252 	.globl _TXCTRLH
                            253 	.globl _SYNCWORDL
                            254 	.globl _SYNCWORDH
                            255 	.globl _RSSIL
                            256 	.globl _RSSIH
                            257 	.globl _MDMCTRL1L
                            258 	.globl _MDMCTRL1H
                            259 	.globl _MDMCTRL0L
                            260 	.globl _MDMCTRL0H
                            261 	.globl _ipolite_open
                            262 	.globl _ipolite_close
                            263 	.globl _ipolite_send
                            264 	.globl _ipolite_cancel
                            265 ;--------------------------------------------------------
                            266 ; special function registers
                            267 ;--------------------------------------------------------
                            268 	.area RSEG    (ABS,DATA)
   0000                     269 	.org 0x0000
                    0080    270 _P0	=	0x0080
                    0081    271 _SP	=	0x0081
                    0082    272 _DPL0	=	0x0082
                    0083    273 _DPH0	=	0x0083
                    0084    274 _DPL1	=	0x0084
                    0085    275 _DPH1	=	0x0085
                    0086    276 _U0CSR	=	0x0086
                    0087    277 _PCON	=	0x0087
                    0088    278 _TCON	=	0x0088
                    0089    279 _P0IFG	=	0x0089
                    008A    280 _P1IFG	=	0x008a
                    008B    281 _P2IFG	=	0x008b
                    008C    282 _PICTL	=	0x008c
                    008D    283 _P1IEN	=	0x008d
                    008F    284 _P0INP	=	0x008f
                    0090    285 _P1	=	0x0090
                    0091    286 _RFIM	=	0x0091
                    0092    287 _DPS	=	0x0092
                    0093    288 __XPAGE	=	0x0093
                    0094    289 _T2CMP	=	0x0094
                    0095    290 _ST0	=	0x0095
                    0096    291 _ST1	=	0x0096
                    0097    292 _ST2	=	0x0097
                    0098    293 _S0CON	=	0x0098
                    0099    294 _HSRC	=	0x0099
                    009A    295 _IEN2	=	0x009a
                    009B    296 _S1CON	=	0x009b
                    009C    297 _T2PEROF0	=	0x009c
                    009D    298 _T2PEROF1	=	0x009d
                    009E    299 _T2PEROF2	=	0x009e
                    009F    300 _FMAP	=	0x009f
                    009F    301 _PSBANK	=	0x009f
                    00A0    302 _P2	=	0x00a0
                    00A1    303 _T2OF0	=	0x00a1
                    00A2    304 _T2OF1	=	0x00a2
                    00A3    305 _T2OF2	=	0x00a3
                    00A4    306 _T2CAPLPL	=	0x00a4
                    00A5    307 _T2CAPHPH	=	0x00a5
                    00A6    308 _T2TLD	=	0x00a6
                    00A7    309 _T2THD	=	0x00a7
                    00A8    310 _IE	=	0x00a8
                    00A8    311 _IEN0	=	0x00a8
                    00A9    312 _IP0	=	0x00a9
                    00AB    313 _FWT	=	0x00ab
                    00AC    314 _FADDRL	=	0x00ac
                    00AD    315 _FADDRH	=	0x00ad
                    00AE    316 _FCTL	=	0x00ae
                    00AF    317 _FWDATA	=	0x00af
                    00B1    318 _ENCDI	=	0x00b1
                    00B2    319 _ENCDO	=	0x00b2
                    00B3    320 _ENCCS	=	0x00b3
                    00B4    321 _ADCCON1	=	0x00b4
                    00B5    322 _ADCCON2	=	0x00b5
                    00B6    323 _ADCCON3	=	0x00b6
                    00B7    324 _RCCTL	=	0x00b7
                    00B8    325 _IEN1	=	0x00b8
                    00B9    326 _IP1	=	0x00b9
                    00BA    327 _ADCL	=	0x00ba
                    00BB    328 _ADCH	=	0x00bb
                    00BC    329 _RNDL	=	0x00bc
                    00BD    330 _RNDH	=	0x00bd
                    00BE    331 _SLEEP	=	0x00be
                    00C0    332 _IRCON	=	0x00c0
                    00C1    333 _U0BUF	=	0x00c1
                    00C2    334 _U0BAUD	=	0x00c2
                    00C3    335 _T2CNF	=	0x00c3
                    00C4    336 _U0UCR	=	0x00c4
                    00C5    337 _U0GCR	=	0x00c5
                    00C6    338 _CLKCON	=	0x00c6
                    00C7    339 _MEMCTR	=	0x00c7
                    00C8    340 _T2CON	=	0x00c8
                    00C9    341 _WDCTL	=	0x00c9
                    00CA    342 _T3CNT	=	0x00ca
                    00CB    343 _T3CTL	=	0x00cb
                    00CC    344 _T3CCTL0	=	0x00cc
                    00CD    345 _T3CC0	=	0x00cd
                    00CE    346 _T3CCTL1	=	0x00ce
                    00CF    347 _T3CC1	=	0x00cf
                    00D0    348 _PSW	=	0x00d0
                    00D1    349 _DMAIRQ	=	0x00d1
                    00D2    350 _DMA1CFGL	=	0x00d2
                    00D3    351 _DMA1CFGH	=	0x00d3
                    00D4    352 _DMA0CFGL	=	0x00d4
                    00D5    353 _DMA0CFGH	=	0x00d5
                    00D6    354 _DMAARM	=	0x00d6
                    00D7    355 _DMAREQ	=	0x00d7
                    00D8    356 _TIMIF	=	0x00d8
                    00D9    357 _RFD	=	0x00d9
                    00DA    358 _T1CC0L	=	0x00da
                    00DB    359 _T1CC0H	=	0x00db
                    00DC    360 _T1CC1L	=	0x00dc
                    00DD    361 _T1CC1H	=	0x00dd
                    00DE    362 _T1CC2L	=	0x00de
                    00DF    363 _T1CC2H	=	0x00df
                    00E0    364 _ACC	=	0x00e0
                    00E1    365 _RFST	=	0x00e1
                    00E2    366 _T1CNTL	=	0x00e2
                    00E3    367 _T1CNTH	=	0x00e3
                    00E4    368 _T1CTL	=	0x00e4
                    00E5    369 _T1CCTL0	=	0x00e5
                    00E6    370 _T1CCTL1	=	0x00e6
                    00E7    371 _T1CCTL2	=	0x00e7
                    00E8    372 _IRCON2	=	0x00e8
                    00E9    373 _RFIF	=	0x00e9
                    00EA    374 _T4CNT	=	0x00ea
                    00EB    375 _T4CTL	=	0x00eb
                    00EC    376 _T4CCTL0	=	0x00ec
                    00ED    377 _T4CC0	=	0x00ed
                    00EE    378 _T4CCTL1	=	0x00ee
                    00EF    379 _T4CC1	=	0x00ef
                    00F0    380 _B	=	0x00f0
                    00F1    381 _PERCFG	=	0x00f1
                    00F2    382 _ADCCFG	=	0x00f2
                    00F3    383 _P0SEL	=	0x00f3
                    00F4    384 _P1SEL	=	0x00f4
                    00F5    385 _P2SEL	=	0x00f5
                    00F6    386 _P1INP	=	0x00f6
                    00F7    387 _P2INP	=	0x00f7
                    00F8    388 _U1CSR	=	0x00f8
                    00F9    389 _U1BUF	=	0x00f9
                    00FA    390 _U1BAUD	=	0x00fa
                    00FB    391 _U1UCR	=	0x00fb
                    00FC    392 _U1GCR	=	0x00fc
                    00FD    393 _P0DIR	=	0x00fd
                    00FE    394 _P1DIR	=	0x00fe
                    00FF    395 _P2DIR	=	0x00ff
                            396 ;--------------------------------------------------------
                            397 ; special function bits
                            398 ;--------------------------------------------------------
                            399 	.area RSEG    (ABS,DATA)
   0000                     400 	.org 0x0000
                    0087    401 _P0_7	=	0x0087
                    0086    402 _P0_6	=	0x0086
                    0085    403 _P0_5	=	0x0085
                    0084    404 _P0_4	=	0x0084
                    0083    405 _P0_3	=	0x0083
                    0082    406 _P0_2	=	0x0082
                    0081    407 _P0_1	=	0x0081
                    0080    408 _P0_0	=	0x0080
                    008F    409 _TCON_URX1IF	=	0x008f
                    008D    410 _TCON_ADCIF	=	0x008d
                    008B    411 _TCON_URX0IF	=	0x008b
                    008A    412 _TCON_IT1	=	0x008a
                    0089    413 _TCON_RFERRIF	=	0x0089
                    0088    414 _TCON_IT0	=	0x0088
                    0090    415 _P1_0	=	0x0090
                    0091    416 _P1_1	=	0x0091
                    0092    417 _P1_2	=	0x0092
                    0093    418 _P1_3	=	0x0093
                    0094    419 _P1_4	=	0x0094
                    0095    420 _P1_5	=	0x0095
                    0096    421 _P1_6	=	0x0096
                    0097    422 _P1_7	=	0x0097
                    0099    423 _S0CON_ENCIF_1	=	0x0099
                    0098    424 _S0CON_ENCIF_0	=	0x0098
                    00A0    425 _P2_0	=	0x00a0
                    00A1    426 _P2_1	=	0x00a1
                    00A2    427 _P2_2	=	0x00a2
                    00A3    428 _P2_3	=	0x00a3
                    00A4    429 _P2_4	=	0x00a4
                    00AF    430 _EA	=	0x00af
                    00AF    431 _IEN0_EA	=	0x00af
                    00AD    432 _IEN0_STIE	=	0x00ad
                    00AC    433 _IEN0_ENCIE	=	0x00ac
                    00AB    434 _IEN0_URX1IE	=	0x00ab
                    00AA    435 _IEN0_URX0IE	=	0x00aa
                    00A9    436 _IEN0_ADCIE	=	0x00a9
                    00A8    437 _IEN0_RFERRIE	=	0x00a8
                    00BD    438 _IEN1_P0IE	=	0x00bd
                    00BC    439 _IEN1_T4IE	=	0x00bc
                    00BB    440 _IEN1_T3IE	=	0x00bb
                    00BA    441 _IEN1_T2IE	=	0x00ba
                    00B9    442 _IEN1_T1IE	=	0x00b9
                    00B8    443 _IEN1_DMAIE	=	0x00b8
                    00C7    444 _IRCON_STIF	=	0x00c7
                    00C5    445 _IRCON_P0IF	=	0x00c5
                    00C4    446 _IRCON_T4IF	=	0x00c4
                    00C3    447 _IRCON_T3IF	=	0x00c3
                    00C2    448 _IRCON_T2IF	=	0x00c2
                    00C1    449 _IRCON_T1IF	=	0x00c1
                    00C0    450 _IRCON_DMAIF	=	0x00c0
                    00D0    451 _P	=	0x00d0
                    00D1    452 _F1	=	0x00d1
                    00D2    453 _OV	=	0x00d2
                    00D3    454 _RS0	=	0x00d3
                    00D4    455 _RS1	=	0x00d4
                    00D5    456 _F0	=	0x00d5
                    00D6    457 _AC	=	0x00d6
                    00D7    458 _CY	=	0x00d7
                    00EC    459 _IRCON2_WDTIF	=	0x00ec
                    00EB    460 _IRCON2_P1IF	=	0x00eb
                    00EA    461 _IRCON2_UTX1IF	=	0x00ea
                    00E9    462 _IRCON2_UTX0IF	=	0x00e9
                    00E8    463 _IRCON2_P2IF	=	0x00e8
                            464 ;--------------------------------------------------------
                            465 ; overlayable register banks
                            466 ;--------------------------------------------------------
                            467 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     468 	.ds 8
                            469 ;--------------------------------------------------------
                            470 ; internal ram data
                            471 ;--------------------------------------------------------
                            472 	.area DSEG    (DATA)
                            473 ;--------------------------------------------------------
                            474 ; overlayable items in internal ram 
                            475 ;--------------------------------------------------------
                            476 	.area OSEG    (OVR,DATA)
                            477 ;--------------------------------------------------------
                            478 ; indirectly addressable internal ram data
                            479 ;--------------------------------------------------------
                            480 	.area ISEG    (DATA)
                            481 ;--------------------------------------------------------
                            482 ; absolute internal ram data
                            483 ;--------------------------------------------------------
                            484 	.area IABS    (ABS,DATA)
                            485 	.area IABS    (ABS,DATA)
                            486 ;--------------------------------------------------------
                            487 ; bit data
                            488 ;--------------------------------------------------------
                            489 	.area BSEG    (BIT)
                            490 ;--------------------------------------------------------
                            491 ; paged external ram data
                            492 ;--------------------------------------------------------
                            493 	.area PSEG    (PAG,XDATA)
                            494 ;--------------------------------------------------------
                            495 ; external ram data
                            496 ;--------------------------------------------------------
                            497 	.area XSEG    (XDATA)
                    DF02    498 _MDMCTRL0H	=	0xdf02
                    DF03    499 _MDMCTRL0L	=	0xdf03
                    DF04    500 _MDMCTRL1H	=	0xdf04
                    DF05    501 _MDMCTRL1L	=	0xdf05
                    DF06    502 _RSSIH	=	0xdf06
                    DF07    503 _RSSIL	=	0xdf07
                    DF08    504 _SYNCWORDH	=	0xdf08
                    DF09    505 _SYNCWORDL	=	0xdf09
                    DF0A    506 _TXCTRLH	=	0xdf0a
                    DF0B    507 _TXCTRLL	=	0xdf0b
                    DF0C    508 _RXCTRL0H	=	0xdf0c
                    DF0D    509 _RXCTRL0L	=	0xdf0d
                    DF0E    510 _RXCTRL1H	=	0xdf0e
                    DF0F    511 _RXCTRL1L	=	0xdf0f
                    DF10    512 _FSCTRLH	=	0xdf10
                    DF11    513 _FSCTRLL	=	0xdf11
                    DF12    514 _CSPX	=	0xdf12
                    DF13    515 _CSPY	=	0xdf13
                    DF14    516 _CSPZ	=	0xdf14
                    DF15    517 _CSPCTRL	=	0xdf15
                    DF16    518 _CSPT	=	0xdf16
                    DF17    519 _RFPWR	=	0xdf17
                    DF20    520 _FSMTCH	=	0xdf20
                    DF21    521 _FSMTCL	=	0xdf21
                    DF22    522 _MANANDH	=	0xdf22
                    DF23    523 _MANANDL	=	0xdf23
                    DF24    524 _MANORH	=	0xdf24
                    DF25    525 _MANORL	=	0xdf25
                    DF26    526 _AGCCTRLH	=	0xdf26
                    DF27    527 _AGCCTRLL	=	0xdf27
                    DF39    528 _FSMSTATE	=	0xdf39
                    DF3A    529 _ADCTSTH	=	0xdf3a
                    DF3B    530 _ADCTSTL	=	0xdf3b
                    DF3C    531 _DACTSTH	=	0xdf3c
                    DF3D    532 _DACTSTL	=	0xdf3d
                    DF43    533 _IEEE_ADDR0	=	0xdf43
                    DF44    534 _IEEE_ADDR1	=	0xdf44
                    DF45    535 _IEEE_ADDR2	=	0xdf45
                    DF46    536 _IEEE_ADDR3	=	0xdf46
                    DF47    537 _IEEE_ADDR4	=	0xdf47
                    DF48    538 _IEEE_ADDR5	=	0xdf48
                    DF49    539 _IEEE_ADDR6	=	0xdf49
                    DF4A    540 _IEEE_ADDR7	=	0xdf4a
                    DF4B    541 _PANIDH	=	0xdf4b
                    DF4C    542 _PANIDL	=	0xdf4c
                    DF4D    543 _SHORTADDRH	=	0xdf4d
                    DF4E    544 _SHORTADDRL	=	0xdf4e
                    DF4F    545 _IOCFG0	=	0xdf4f
                    DF50    546 _IOCFG1	=	0xdf50
                    DF51    547 _IOCFG2	=	0xdf51
                    DF52    548 _IOCFG3	=	0xdf52
                    DF53    549 _RXFIFOCNT	=	0xdf53
                    DF54    550 _FSMTC1	=	0xdf54
                    DF60    551 _CHVER	=	0xdf60
                    DF61    552 _CHIPID	=	0xdf61
                    DF62    553 _RFSTATUS	=	0xdf62
                    DFC1    554 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    555 _RFD_SHADOW	=	0xdfd9
                    DFF9    556 _U1BUF_SHADOW	=	0xdff9
                    DFBA    557 _ADC_SHADOW	=	0xdfba
                            558 ;--------------------------------------------------------
                            559 ; absolute external ram data
                            560 ;--------------------------------------------------------
                            561 	.area XABS    (ABS,XDATA)
                            562 ;--------------------------------------------------------
                            563 ; external initialized ram data
                            564 ;--------------------------------------------------------
                            565 	.area XISEG   (XDATA)
                            566 	.area HOME    (CODE)
                            567 	.area GSINIT0 (CODE)
                            568 	.area GSINIT1 (CODE)
                            569 	.area GSINIT2 (CODE)
                            570 	.area GSINIT3 (CODE)
                            571 	.area GSINIT4 (CODE)
                            572 	.area GSINIT5 (CODE)
                            573 	.area GSINIT  (CODE)
                            574 	.area GSFINAL (CODE)
                            575 	.area CSEG    (CODE)
                            576 ;--------------------------------------------------------
                            577 ; global & static initialisations
                            578 ;--------------------------------------------------------
                            579 	.area HOME    (CODE)
                            580 	.area GSINIT  (CODE)
                            581 	.area GSFINAL (CODE)
                            582 	.area GSINIT  (CODE)
                            583 ;--------------------------------------------------------
                            584 ; Home
                            585 ;--------------------------------------------------------
                            586 	.area HOME    (CODE)
                            587 	.area HOME    (CODE)
                            588 ;--------------------------------------------------------
                            589 ; code
                            590 ;--------------------------------------------------------
                            591 	.area CSEG    (CODE)
                            592 ;------------------------------------------------------------
                            593 ;Allocation info for local variables in function 'recv'
                            594 ;------------------------------------------------------------
                            595 ;from                      Allocated to stack - offset -5
                            596 ;broadcast                 Allocated to stack - offset 1
                            597 ;c                         Allocated to stack - offset 4
                            598 ;sloc0                     Allocated to stack - offset 7
                            599 ;sloc1                     Allocated to stack - offset 9
                            600 ;------------------------------------------------------------
                            601 ;	../../../core/net/rime/ipolite.c:70: recv(struct broadcast_conn *broadcast, const rimeaddr_t *from)
                            602 ;	-----------------------------------------
                            603 ;	 function recv
                            604 ;	-----------------------------------------
   0000                     605 _recv:
                    0002    606 	ar2 = 0x02
                    0003    607 	ar3 = 0x03
                    0004    608 	ar4 = 0x04
                    0005    609 	ar5 = 0x05
                    0006    610 	ar6 = 0x06
                    0007    611 	ar7 = 0x07
                    0000    612 	ar0 = 0x00
                    0001    613 	ar1 = 0x01
   0000 C0*00               614 	push	_bp
   0002 85 81*00            615 	mov	_bp,sp
   0005 C0 82               616 	push	dpl
   0007 C0 83               617 	push	dph
   0009 C0 F0               618 	push	b
   000B E5 81               619 	mov	a,sp
   000D 24 0B               620 	add	a,#0x0b
   000F F5 81               621 	mov	sp,a
                            622 ;	../../../core/net/rime/ipolite.c:72: struct ipolite_conn *c = (struct ipolite_conn *)broadcast;
   0011 A8*00               623 	mov	r0,_bp
   0013 08                  624 	inc	r0
   0014 E5*00               625 	mov	a,_bp
   0016 24 04               626 	add	a,#0x04
   0018 F9                  627 	mov	r1,a
   0019 E6                  628 	mov	a,@r0
   001A F7                  629 	mov	@r1,a
   001B 08                  630 	inc	r0
   001C 09                  631 	inc	r1
   001D E6                  632 	mov	a,@r0
   001E F7                  633 	mov	@r1,a
   001F 08                  634 	inc	r0
   0020 09                  635 	inc	r1
   0021 E6                  636 	mov	a,@r0
   0022 F7                  637 	mov	@r1,a
                            638 ;	../../../core/net/rime/ipolite.c:73: if(c->q != NULL &&
   0023 A8*00               639 	mov	r0,_bp
   0025 08                  640 	inc	r0
   0026 74 27               641 	mov	a,#0x27
   0028 26                  642 	add	a,@r0
   0029 FA                  643 	mov	r2,a
   002A E4                  644 	clr	a
   002B 08                  645 	inc	r0
   002C 36                  646 	addc	a,@r0
   002D FB                  647 	mov	r3,a
   002E 08                  648 	inc	r0
   002F 86 04               649 	mov	ar4,@r0
   0031 8A 82               650 	mov	dpl,r2
   0033 8B 83               651 	mov	dph,r3
   0035 8C F0               652 	mov	b,r4
   0037 12s00r00            653 	lcall	__gptrget
   003A FD                  654 	mov	r5,a
   003B A3                  655 	inc	dptr
   003C 12s00r00            656 	lcall	__gptrget
   003F FE                  657 	mov	r6,a
   0040 A3                  658 	inc	dptr
   0041 12s00r00            659 	lcall	__gptrget
   0044 FF                  660 	mov	r7,a
   0045 ED                  661 	mov	a,r5
   0046 4E                  662 	orl	a,r6
   0047 4F                  663 	orl	a,r7
   0048 70 03               664 	jnz	00122$
   004A 02s02r94            665 	ljmp	00106$
   004D                     666 00122$:
                            667 ;	../../../core/net/rime/ipolite.c:74: packetbuf_datalen() == queuebuf_datalen(c->q) &&
   004D C0 02               668 	push	ar2
   004F C0 03               669 	push	ar3
   0051 C0 04               670 	push	ar4
   0053 12s00r00            671 	lcall	_packetbuf_datalen
   0056 AD 82               672 	mov	r5,dpl
   0058 AE 83               673 	mov	r6,dph
   005A D0 04               674 	pop	ar4
   005C D0 03               675 	pop	ar3
   005E D0 02               676 	pop	ar2
   0060 8A 82               677 	mov	dpl,r2
   0062 8B 83               678 	mov	dph,r3
   0064 8C F0               679 	mov	b,r4
   0066 12s00r00            680 	lcall	__gptrget
   0069 FA                  681 	mov	r2,a
   006A A3                  682 	inc	dptr
   006B 12s00r00            683 	lcall	__gptrget
   006E FB                  684 	mov	r3,a
   006F A3                  685 	inc	dptr
   0070 12s00r00            686 	lcall	__gptrget
   0073 FC                  687 	mov	r4,a
   0074 8A 82               688 	mov	dpl,r2
   0076 8B 83               689 	mov	dph,r3
   0078 8C F0               690 	mov	b,r4
   007A C0 05               691 	push	ar5
   007C C0 06               692 	push	ar6
   007E 12s00r00            693 	lcall	_queuebuf_datalen
   0081 AA 82               694 	mov	r2,dpl
   0083 AB 83               695 	mov	r3,dph
   0085 D0 06               696 	pop	ar6
   0087 D0 05               697 	pop	ar5
   0089 ED                  698 	mov	a,r5
   008A B5 02 06            699 	cjne	a,ar2,00123$
   008D EE                  700 	mov	a,r6
   008E B5 03 02            701 	cjne	a,ar3,00123$
   0091 80 03               702 	sjmp	00124$
   0093                     703 00123$:
   0093 02s02r94            704 	ljmp	00106$
   0096                     705 00124$:
                            706 ;	../../../core/net/rime/ipolite.c:76: MIN(c->hdrsize, packetbuf_datalen())) == 0) {
   0096 A8*00               707 	mov	r0,_bp
   0098 08                  708 	inc	r0
   0099 74 2A               709 	mov	a,#0x2A
   009B 26                  710 	add	a,@r0
   009C FA                  711 	mov	r2,a
   009D E4                  712 	clr	a
   009E 08                  713 	inc	r0
   009F 36                  714 	addc	a,@r0
   00A0 FB                  715 	mov	r3,a
   00A1 08                  716 	inc	r0
   00A2 86 04               717 	mov	ar4,@r0
   00A4 8A 82               718 	mov	dpl,r2
   00A6 8B 83               719 	mov	dph,r3
   00A8 8C F0               720 	mov	b,r4
   00AA 12s00r00            721 	lcall	__gptrget
   00AD FD                  722 	mov	r5,a
   00AE C0 02               723 	push	ar2
   00B0 C0 03               724 	push	ar3
   00B2 C0 04               725 	push	ar4
   00B4 C0 05               726 	push	ar5
   00B6 12s00r00            727 	lcall	_packetbuf_datalen
   00B9 C8                  728 	xch	a,r0
   00BA E5*00               729 	mov	a,_bp
   00BC 24 07               730 	add	a,#0x07
   00BE C8                  731 	xch	a,r0
   00BF A6 82               732 	mov	@r0,dpl
   00C1 08                  733 	inc	r0
   00C2 A6 83               734 	mov	@r0,dph
   00C4 D0 05               735 	pop	ar5
   00C6 D0 04               736 	pop	ar4
   00C8 D0 03               737 	pop	ar3
   00CA D0 02               738 	pop	ar2
   00CC 7E 00               739 	mov	r6,#0x00
   00CE E5*00               740 	mov	a,_bp
   00D0 24 07               741 	add	a,#0x07
   00D2 F8                  742 	mov	r0,a
   00D3 C3                  743 	clr	c
   00D4 ED                  744 	mov	a,r5
   00D5 96                  745 	subb	a,@r0
   00D6 EE                  746 	mov	a,r6
   00D7 08                  747 	inc	r0
   00D8 96                  748 	subb	a,@r0
   00D9 50 16               749 	jnc	00113$
   00DB 8A 82               750 	mov	dpl,r2
   00DD 8B 83               751 	mov	dph,r3
   00DF 8C F0               752 	mov	b,r4
   00E1 12s00r00            753 	lcall	__gptrget
   00E4 FA                  754 	mov	r2,a
   00E5 E5*00               755 	mov	a,_bp
   00E7 24 07               756 	add	a,#0x07
   00E9 F8                  757 	mov	r0,a
   00EA A6 02               758 	mov	@r0,ar2
   00EC 08                  759 	inc	r0
   00ED 76 00               760 	mov	@r0,#0x00
   00EF 80 0E               761 	sjmp	00114$
   00F1                     762 00113$:
   00F1 12s00r00            763 	lcall	_packetbuf_datalen
   00F4 C8                  764 	xch	a,r0
   00F5 E5*00               765 	mov	a,_bp
   00F7 24 07               766 	add	a,#0x07
   00F9 C8                  767 	xch	a,r0
   00FA A6 82               768 	mov	@r0,dpl
   00FC 08                  769 	inc	r0
   00FD A6 83               770 	mov	@r0,dph
   00FF                     771 00114$:
                            772 ;	../../../core/net/rime/ipolite.c:75: memcmp(packetbuf_dataptr(), queuebuf_dataptr(c->q),
   00FF E5*00               773 	mov	a,_bp
   0101 24 04               774 	add	a,#0x04
   0103 F8                  775 	mov	r0,a
   0104 74 27               776 	mov	a,#0x27
   0106 26                  777 	add	a,@r0
   0107 FC                  778 	mov	r4,a
   0108 E4                  779 	clr	a
   0109 08                  780 	inc	r0
   010A 36                  781 	addc	a,@r0
   010B FD                  782 	mov	r5,a
   010C 08                  783 	inc	r0
   010D 86 06               784 	mov	ar6,@r0
   010F 8C 82               785 	mov	dpl,r4
   0111 8D 83               786 	mov	dph,r5
   0113 8E F0               787 	mov	b,r6
   0115 12s00r00            788 	lcall	__gptrget
   0118 FF                  789 	mov	r7,a
   0119 A3                  790 	inc	dptr
   011A 12s00r00            791 	lcall	__gptrget
   011D FA                  792 	mov	r2,a
   011E A3                  793 	inc	dptr
   011F 12s00r00            794 	lcall	__gptrget
   0122 FB                  795 	mov	r3,a
   0123 8F 82               796 	mov	dpl,r7
   0125 8A 83               797 	mov	dph,r2
   0127 8B F0               798 	mov	b,r3
   0129 C0 04               799 	push	ar4
   012B C0 05               800 	push	ar5
   012D C0 06               801 	push	ar6
   012F 12s00r00            802 	lcall	_queuebuf_dataptr
   0132 C8                  803 	xch	a,r0
   0133 E5*00               804 	mov	a,_bp
   0135 24 09               805 	add	a,#0x09
   0137 C8                  806 	xch	a,r0
   0138 A6 82               807 	mov	@r0,dpl
   013A 08                  808 	inc	r0
   013B A6 83               809 	mov	@r0,dph
   013D 08                  810 	inc	r0
   013E A6 F0               811 	mov	@r0,b
   0140 12s00r00            812 	lcall	_packetbuf_dataptr
   0143 AA 82               813 	mov	r2,dpl
   0145 AB 83               814 	mov	r3,dph
   0147 AF F0               815 	mov	r7,b
   0149 E5*00               816 	mov	a,_bp
   014B 24 07               817 	add	a,#0x07
   014D F8                  818 	mov	r0,a
   014E E6                  819 	mov	a,@r0
   014F C0 E0               820 	push	acc
   0151 08                  821 	inc	r0
   0152 E6                  822 	mov	a,@r0
   0153 C0 E0               823 	push	acc
   0155 E5*00               824 	mov	a,_bp
   0157 24 09               825 	add	a,#0x09
   0159 F8                  826 	mov	r0,a
   015A E6                  827 	mov	a,@r0
   015B C0 E0               828 	push	acc
   015D 08                  829 	inc	r0
   015E E6                  830 	mov	a,@r0
   015F C0 E0               831 	push	acc
   0161 08                  832 	inc	r0
   0162 E6                  833 	mov	a,@r0
   0163 C0 E0               834 	push	acc
   0165 8A 82               835 	mov	dpl,r2
   0167 8B 83               836 	mov	dph,r3
   0169 8F F0               837 	mov	b,r7
   016B 12s00r00            838 	lcall	_memcmp
   016E AA 82               839 	mov	r2,dpl
   0170 AB 83               840 	mov	r3,dph
   0172 E5 81               841 	mov	a,sp
   0174 24 FB               842 	add	a,#0xfb
   0176 F5 81               843 	mov	sp,a
   0178 D0 06               844 	pop	ar6
   017A D0 05               845 	pop	ar5
   017C D0 04               846 	pop	ar4
   017E EA                  847 	mov	a,r2
   017F 4B                  848 	orl	a,r3
   0180 60 03               849 	jz	00126$
   0182 02s02r94            850 	ljmp	00106$
   0185                     851 00126$:
                            852 ;	../../../core/net/rime/ipolite.c:80: c->dups++;
   0185 C0 04               853 	push	ar4
   0187 C0 05               854 	push	ar5
   0189 C0 06               855 	push	ar6
   018B E5*00               856 	mov	a,_bp
   018D 24 04               857 	add	a,#0x04
   018F F8                  858 	mov	r0,a
   0190 74 2C               859 	mov	a,#0x2C
   0192 26                  860 	add	a,@r0
   0193 FA                  861 	mov	r2,a
   0194 E4                  862 	clr	a
   0195 08                  863 	inc	r0
   0196 36                  864 	addc	a,@r0
   0197 FB                  865 	mov	r3,a
   0198 08                  866 	inc	r0
   0199 86 07               867 	mov	ar7,@r0
   019B 8A 82               868 	mov	dpl,r2
   019D 8B 83               869 	mov	dph,r3
   019F 8F F0               870 	mov	b,r7
   01A1 12s00r00            871 	lcall	__gptrget
   01A4 FC                  872 	mov	r4,a
   01A5 0C                  873 	inc	r4
   01A6 8A 82               874 	mov	dpl,r2
   01A8 8B 83               875 	mov	dph,r3
   01AA 8F F0               876 	mov	b,r7
   01AC EC                  877 	mov	a,r4
   01AD 12s00r00            878 	lcall	__gptrput
                            879 ;	../../../core/net/rime/ipolite.c:81: if(c->dups == c->maxdups) {
   01B0 E5*00               880 	mov	a,_bp
   01B2 24 04               881 	add	a,#0x04
   01B4 F8                  882 	mov	r0,a
   01B5 74 2B               883 	mov	a,#0x2B
   01B7 26                  884 	add	a,@r0
   01B8 FA                  885 	mov	r2,a
   01B9 E4                  886 	clr	a
   01BA 08                  887 	inc	r0
   01BB 36                  888 	addc	a,@r0
   01BC FB                  889 	mov	r3,a
   01BD 08                  890 	inc	r0
   01BE 86 05               891 	mov	ar5,@r0
   01C0 8A 82               892 	mov	dpl,r2
   01C2 8B 83               893 	mov	dph,r3
   01C4 8D F0               894 	mov	b,r5
   01C6 12s00r00            895 	lcall	__gptrget
   01C9 FA                  896 	mov	r2,a
   01CA EC                  897 	mov	a,r4
   01CB B5 02 02            898 	cjne	a,ar2,00127$
   01CE 80 09               899 	sjmp	00128$
   01D0                     900 00127$:
   01D0 D0 06               901 	pop	ar6
   01D2 D0 05               902 	pop	ar5
   01D4 D0 04               903 	pop	ar4
   01D6 02s02r94            904 	ljmp	00106$
   01D9                     905 00128$:
   01D9 D0 06               906 	pop	ar6
   01DB D0 05               907 	pop	ar5
   01DD D0 04               908 	pop	ar4
                            909 ;	../../../core/net/rime/ipolite.c:82: queuebuf_free(c->q);
   01DF 8C 82               910 	mov	dpl,r4
   01E1 8D 83               911 	mov	dph,r5
   01E3 8E F0               912 	mov	b,r6
   01E5 12s00r00            913 	lcall	__gptrget
   01E8 FA                  914 	mov	r2,a
   01E9 A3                  915 	inc	dptr
   01EA 12s00r00            916 	lcall	__gptrget
   01ED FB                  917 	mov	r3,a
   01EE A3                  918 	inc	dptr
   01EF 12s00r00            919 	lcall	__gptrget
   01F2 FF                  920 	mov	r7,a
   01F3 8A 82               921 	mov	dpl,r2
   01F5 8B 83               922 	mov	dph,r3
   01F7 8F F0               923 	mov	b,r7
   01F9 C0 04               924 	push	ar4
   01FB C0 05               925 	push	ar5
   01FD C0 06               926 	push	ar6
   01FF 12s00r00            927 	lcall	_queuebuf_free
   0202 D0 06               928 	pop	ar6
   0204 D0 05               929 	pop	ar5
   0206 D0 04               930 	pop	ar4
                            931 ;	../../../core/net/rime/ipolite.c:83: c->q = NULL;
   0208 8C 82               932 	mov	dpl,r4
   020A 8D 83               933 	mov	dph,r5
   020C 8E F0               934 	mov	b,r6
   020E E4                  935 	clr	a
   020F 12s00r00            936 	lcall	__gptrput
   0212 A3                  937 	inc	dptr
   0213 E4                  938 	clr	a
   0214 12s00r00            939 	lcall	__gptrput
   0217 A3                  940 	inc	dptr
   0218 E4                  941 	clr	a
   0219 12s00r00            942 	lcall	__gptrput
                            943 ;	../../../core/net/rime/ipolite.c:84: ctimer_stop(&c->t);
   021C E5*00               944 	mov	a,_bp
   021E 24 04               945 	add	a,#0x04
   0220 F8                  946 	mov	r0,a
   0221 74 12               947 	mov	a,#0x12
   0223 26                  948 	add	a,@r0
   0224 FA                  949 	mov	r2,a
   0225 E4                  950 	clr	a
   0226 08                  951 	inc	r0
   0227 36                  952 	addc	a,@r0
   0228 FB                  953 	mov	r3,a
   0229 08                  954 	inc	r0
   022A 86 04               955 	mov	ar4,@r0
   022C 8A 82               956 	mov	dpl,r2
   022E 8B 83               957 	mov	dph,r3
   0230 8C F0               958 	mov	b,r4
   0232 12s00r00            959 	lcall	_ctimer_stop
                            960 ;	../../../core/net/rime/ipolite.c:85: if(c->cb->dropped) {
   0235 E5*00               961 	mov	a,_bp
   0237 24 04               962 	add	a,#0x04
   0239 F8                  963 	mov	r0,a
   023A 74 0F               964 	mov	a,#0x0F
   023C 26                  965 	add	a,@r0
   023D FA                  966 	mov	r2,a
   023E E4                  967 	clr	a
   023F 08                  968 	inc	r0
   0240 36                  969 	addc	a,@r0
   0241 FB                  970 	mov	r3,a
   0242 08                  971 	inc	r0
   0243 86 04               972 	mov	ar4,@r0
   0245 8A 82               973 	mov	dpl,r2
   0247 8B 83               974 	mov	dph,r3
   0249 8C F0               975 	mov	b,r4
   024B 12s00r00            976 	lcall	__gptrget
   024E FA                  977 	mov	r2,a
   024F A3                  978 	inc	dptr
   0250 12s00r00            979 	lcall	__gptrget
   0253 FB                  980 	mov	r3,a
   0254 A3                  981 	inc	dptr
   0255 12s00r00            982 	lcall	__gptrget
   0258 FC                  983 	mov	r4,a
   0259 74 04               984 	mov	a,#0x04
   025B 2A                  985 	add	a,r2
   025C FA                  986 	mov	r2,a
   025D E4                  987 	clr	a
   025E 3B                  988 	addc	a,r3
   025F FB                  989 	mov	r3,a
   0260 8A 82               990 	mov	dpl,r2
   0262 8B 83               991 	mov	dph,r3
   0264 8C F0               992 	mov	b,r4
   0266 12s00r00            993 	lcall	__gptrget
   0269 FA                  994 	mov	r2,a
   026A A3                  995 	inc	dptr
   026B 12s00r00            996 	lcall	__gptrget
   026E FB                  997 	mov	r3,a
   026F 4A                  998 	orl	a,r2
   0270 60 22               999 	jz	00106$
                           1000 ;	../../../core/net/rime/ipolite.c:86: c->cb->dropped(c);
   0272 C0 02              1001 	push	ar2
   0274 C0 03              1002 	push	ar3
   0276 74r90              1003 	mov	a,#00130$
   0278 C0 E0              1004 	push	acc
   027A 74s02              1005 	mov	a,#(00130$ >> 8)
   027C C0 E0              1006 	push	acc
   027E C0 02              1007 	push	ar2
   0280 C0 03              1008 	push	ar3
   0282 E5*00              1009 	mov	a,_bp
   0284 24 04              1010 	add	a,#0x04
   0286 F8                 1011 	mov	r0,a
   0287 86 82              1012 	mov	dpl,@r0
   0289 08                 1013 	inc	r0
   028A 86 83              1014 	mov	dph,@r0
   028C 08                 1015 	inc	r0
   028D 86 F0              1016 	mov	b,@r0
   028F 22                 1017 	ret
   0290                    1018 00130$:
   0290 D0 03              1019 	pop	ar3
   0292 D0 02              1020 	pop	ar2
   0294                    1021 00106$:
                           1022 ;	../../../core/net/rime/ipolite.c:90: if(c->cb->recv) {
   0294 E5*00              1023 	mov	a,_bp
   0296 24 04              1024 	add	a,#0x04
   0298 F8                 1025 	mov	r0,a
   0299 74 0F              1026 	mov	a,#0x0F
   029B 26                 1027 	add	a,@r0
   029C FA                 1028 	mov	r2,a
   029D E4                 1029 	clr	a
   029E 08                 1030 	inc	r0
   029F 36                 1031 	addc	a,@r0
   02A0 FB                 1032 	mov	r3,a
   02A1 08                 1033 	inc	r0
   02A2 86 04              1034 	mov	ar4,@r0
   02A4 8A 82              1035 	mov	dpl,r2
   02A6 8B 83              1036 	mov	dph,r3
   02A8 8C F0              1037 	mov	b,r4
   02AA 12s00r00           1038 	lcall	__gptrget
   02AD FA                 1039 	mov	r2,a
   02AE A3                 1040 	inc	dptr
   02AF 12s00r00           1041 	lcall	__gptrget
   02B2 FB                 1042 	mov	r3,a
   02B3 A3                 1043 	inc	dptr
   02B4 12s00r00           1044 	lcall	__gptrget
   02B7 FC                 1045 	mov	r4,a
   02B8 8A 82              1046 	mov	dpl,r2
   02BA 8B 83              1047 	mov	dph,r3
   02BC 8C F0              1048 	mov	b,r4
   02BE 12s00r00           1049 	lcall	__gptrget
   02C1 FA                 1050 	mov	r2,a
   02C2 A3                 1051 	inc	dptr
   02C3 12s00r00           1052 	lcall	__gptrget
   02C6 FB                 1053 	mov	r3,a
   02C7 4A                 1054 	orl	a,r2
   02C8 60 38              1055 	jz	00111$
                           1056 ;	../../../core/net/rime/ipolite.c:91: c->cb->recv(c, from);
   02CA C0 02              1057 	push	ar2
   02CC C0 03              1058 	push	ar3
   02CE E5*00              1059 	mov	a,_bp
   02D0 24 FB              1060 	add	a,#0xfb
   02D2 F8                 1061 	mov	r0,a
   02D3 E6                 1062 	mov	a,@r0
   02D4 C0 E0              1063 	push	acc
   02D6 08                 1064 	inc	r0
   02D7 E6                 1065 	mov	a,@r0
   02D8 C0 E0              1066 	push	acc
   02DA 08                 1067 	inc	r0
   02DB E6                 1068 	mov	a,@r0
   02DC C0 E0              1069 	push	acc
   02DE 74rF8              1070 	mov	a,#00132$
   02E0 C0 E0              1071 	push	acc
   02E2 74s02              1072 	mov	a,#(00132$ >> 8)
   02E4 C0 E0              1073 	push	acc
   02E6 C0 02              1074 	push	ar2
   02E8 C0 03              1075 	push	ar3
   02EA E5*00              1076 	mov	a,_bp
   02EC 24 04              1077 	add	a,#0x04
   02EE F8                 1078 	mov	r0,a
   02EF 86 82              1079 	mov	dpl,@r0
   02F1 08                 1080 	inc	r0
   02F2 86 83              1081 	mov	dph,@r0
   02F4 08                 1082 	inc	r0
   02F5 86 F0              1083 	mov	b,@r0
   02F7 22                 1084 	ret
   02F8                    1085 00132$:
   02F8 15 81              1086 	dec	sp
   02FA 15 81              1087 	dec	sp
   02FC 15 81              1088 	dec	sp
   02FE D0 03              1089 	pop	ar3
   0300 D0 02              1090 	pop	ar2
   0302                    1091 00111$:
   0302 85*00 81           1092 	mov	sp,_bp
   0305 D0*00              1093 	pop	_bp
   0307 22                 1094 	ret
                           1095 ;------------------------------------------------------------
                           1096 ;Allocation info for local variables in function 'sent'
                           1097 ;------------------------------------------------------------
                           1098 ;status                    Allocated to stack - offset -4
                           1099 ;num_tx                    Allocated to stack - offset -6
                           1100 ;bc                        Allocated to registers 
                           1101 ;------------------------------------------------------------
                           1102 ;	../../../core/net/rime/ipolite.c:96: sent(struct broadcast_conn *bc, int status, int num_tx)
                           1103 ;	-----------------------------------------
                           1104 ;	 function sent
                           1105 ;	-----------------------------------------
   0308                    1106 _sent:
   0308 C0*00              1107 	push	_bp
   030A 85 81*00           1108 	mov	_bp,sp
                           1109 ;	../../../core/net/rime/ipolite.c:99: }
   030D D0*00              1110 	pop	_bp
   030F 22                 1111 	ret
                           1112 ;------------------------------------------------------------
                           1113 ;Allocation info for local variables in function 'send'
                           1114 ;------------------------------------------------------------
                           1115 ;ptr                       Allocated to stack - offset 1
                           1116 ;c                         Allocated to registers 
                           1117 ;sloc0                     Allocated to stack - offset 7
                           1118 ;------------------------------------------------------------
                           1119 ;	../../../core/net/rime/ipolite.c:102: send(void *ptr)
                           1120 ;	-----------------------------------------
                           1121 ;	 function send
                           1122 ;	-----------------------------------------
   0310                    1123 _send:
   0310 C0*00              1124 	push	_bp
   0312 85 81*00           1125 	mov	_bp,sp
   0315 C0 82              1126 	push	dpl
   0317 C0 83              1127 	push	dph
   0319 C0 F0              1128 	push	b
                           1129 ;	../../../core/net/rime/ipolite.c:110: if(c->q != NULL) {
   031B A8*00              1130 	mov	r0,_bp
   031D 08                 1131 	inc	r0
   031E 74 27              1132 	mov	a,#0x27
   0320 26                 1133 	add	a,@r0
   0321 FD                 1134 	mov	r5,a
   0322 E4                 1135 	clr	a
   0323 08                 1136 	inc	r0
   0324 36                 1137 	addc	a,@r0
   0325 FE                 1138 	mov	r6,a
   0326 08                 1139 	inc	r0
   0327 86 07              1140 	mov	ar7,@r0
   0329 8D 82              1141 	mov	dpl,r5
   032B 8E 83              1142 	mov	dph,r6
   032D 8F F0              1143 	mov	b,r7
   032F 12s00r00           1144 	lcall	__gptrget
   0332 FA                 1145 	mov	r2,a
   0333 A3                 1146 	inc	dptr
   0334 12s00r00           1147 	lcall	__gptrget
   0337 FB                 1148 	mov	r3,a
   0338 A3                 1149 	inc	dptr
   0339 12s00r00           1150 	lcall	__gptrget
   033C FC                 1151 	mov	r4,a
   033D EA                 1152 	mov	a,r2
   033E 4B                 1153 	orl	a,r3
   033F 4C                 1154 	orl	a,r4
   0340 70 03              1155 	jnz	00109$
   0342 02s04r00           1156 	ljmp	00105$
   0345                    1157 00109$:
                           1158 ;	../../../core/net/rime/ipolite.c:111: queuebuf_to_packetbuf(c->q);
   0345 8A 82              1159 	mov	dpl,r2
   0347 8B 83              1160 	mov	dph,r3
   0349 8C F0              1161 	mov	b,r4
   034B C0 05              1162 	push	ar5
   034D C0 06              1163 	push	ar6
   034F C0 07              1164 	push	ar7
   0351 12s00r00           1165 	lcall	_queuebuf_to_packetbuf
   0354 D0 07              1166 	pop	ar7
   0356 D0 06              1167 	pop	ar6
   0358 D0 05              1168 	pop	ar5
                           1169 ;	../../../core/net/rime/ipolite.c:112: queuebuf_free(c->q);
   035A 8D 82              1170 	mov	dpl,r5
   035C 8E 83              1171 	mov	dph,r6
   035E 8F F0              1172 	mov	b,r7
   0360 12s00r00           1173 	lcall	__gptrget
   0363 FA                 1174 	mov	r2,a
   0364 A3                 1175 	inc	dptr
   0365 12s00r00           1176 	lcall	__gptrget
   0368 FB                 1177 	mov	r3,a
   0369 A3                 1178 	inc	dptr
   036A 12s00r00           1179 	lcall	__gptrget
   036D FC                 1180 	mov	r4,a
   036E 8A 82              1181 	mov	dpl,r2
   0370 8B 83              1182 	mov	dph,r3
   0372 8C F0              1183 	mov	b,r4
   0374 C0 05              1184 	push	ar5
   0376 C0 06              1185 	push	ar6
   0378 C0 07              1186 	push	ar7
   037A 12s00r00           1187 	lcall	_queuebuf_free
   037D D0 07              1188 	pop	ar7
   037F D0 06              1189 	pop	ar6
   0381 D0 05              1190 	pop	ar5
                           1191 ;	../../../core/net/rime/ipolite.c:113: c->q = NULL;
   0383 8D 82              1192 	mov	dpl,r5
   0385 8E 83              1193 	mov	dph,r6
   0387 8F F0              1194 	mov	b,r7
   0389 E4                 1195 	clr	a
   038A 12s00r00           1196 	lcall	__gptrput
   038D A3                 1197 	inc	dptr
   038E E4                 1198 	clr	a
   038F 12s00r00           1199 	lcall	__gptrput
   0392 A3                 1200 	inc	dptr
   0393 E4                 1201 	clr	a
   0394 12s00r00           1202 	lcall	__gptrput
                           1203 ;	../../../core/net/rime/ipolite.c:114: broadcast_send(&c->c);
   0397 A8*00              1204 	mov	r0,_bp
   0399 08                 1205 	inc	r0
   039A 86 82              1206 	mov	dpl,@r0
   039C 08                 1207 	inc	r0
   039D 86 83              1208 	mov	dph,@r0
   039F 08                 1209 	inc	r0
   03A0 86 F0              1210 	mov	b,@r0
   03A2 12s00r00           1211 	lcall	_broadcast_send
                           1212 ;	../../../core/net/rime/ipolite.c:115: if(c->cb->sent) {
   03A5 A8*00              1213 	mov	r0,_bp
   03A7 08                 1214 	inc	r0
   03A8 74 0F              1215 	mov	a,#0x0F
   03AA 26                 1216 	add	a,@r0
   03AB FA                 1217 	mov	r2,a
   03AC E4                 1218 	clr	a
   03AD 08                 1219 	inc	r0
   03AE 36                 1220 	addc	a,@r0
   03AF FB                 1221 	mov	r3,a
   03B0 08                 1222 	inc	r0
   03B1 86 04              1223 	mov	ar4,@r0
   03B3 8A 82              1224 	mov	dpl,r2
   03B5 8B 83              1225 	mov	dph,r3
   03B7 8C F0              1226 	mov	b,r4
   03B9 12s00r00           1227 	lcall	__gptrget
   03BC FA                 1228 	mov	r2,a
   03BD A3                 1229 	inc	dptr
   03BE 12s00r00           1230 	lcall	__gptrget
   03C1 FB                 1231 	mov	r3,a
   03C2 A3                 1232 	inc	dptr
   03C3 12s00r00           1233 	lcall	__gptrget
   03C6 FC                 1234 	mov	r4,a
   03C7 74 02              1235 	mov	a,#0x02
   03C9 2A                 1236 	add	a,r2
   03CA FA                 1237 	mov	r2,a
   03CB E4                 1238 	clr	a
   03CC 3B                 1239 	addc	a,r3
   03CD FB                 1240 	mov	r3,a
   03CE 8A 82              1241 	mov	dpl,r2
   03D0 8B 83              1242 	mov	dph,r3
   03D2 8C F0              1243 	mov	b,r4
   03D4 12s00r00           1244 	lcall	__gptrget
   03D7 FA                 1245 	mov	r2,a
   03D8 A3                 1246 	inc	dptr
   03D9 12s00r00           1247 	lcall	__gptrget
   03DC FB                 1248 	mov	r3,a
   03DD 4A                 1249 	orl	a,r2
   03DE 60 20              1250 	jz	00105$
                           1251 ;	../../../core/net/rime/ipolite.c:116: c->cb->sent(c);
   03E0 C0 02              1252 	push	ar2
   03E2 C0 03              1253 	push	ar3
   03E4 74rFC              1254 	mov	a,#00111$
   03E6 C0 E0              1255 	push	acc
   03E8 74s03              1256 	mov	a,#(00111$ >> 8)
   03EA C0 E0              1257 	push	acc
   03EC C0 02              1258 	push	ar2
   03EE C0 03              1259 	push	ar3
   03F0 A8*00              1260 	mov	r0,_bp
   03F2 08                 1261 	inc	r0
   03F3 86 82              1262 	mov	dpl,@r0
   03F5 08                 1263 	inc	r0
   03F6 86 83              1264 	mov	dph,@r0
   03F8 08                 1265 	inc	r0
   03F9 86 F0              1266 	mov	b,@r0
   03FB 22                 1267 	ret
   03FC                    1268 00111$:
   03FC D0 03              1269 	pop	ar3
   03FE D0 02              1270 	pop	ar2
   0400                    1271 00105$:
   0400 85*00 81           1272 	mov	sp,_bp
   0403 D0*00              1273 	pop	_bp
   0405 22                 1274 	ret
                           1275 ;------------------------------------------------------------
                           1276 ;Allocation info for local variables in function 'ipolite_open'
                           1277 ;------------------------------------------------------------
                           1278 ;channel                   Allocated to stack - offset -4
                           1279 ;dups                      Allocated to stack - offset -5
                           1280 ;cb                        Allocated to stack - offset -8
                           1281 ;c                         Allocated to registers r2 r3 r4 
                           1282 ;------------------------------------------------------------
                           1283 ;	../../../core/net/rime/ipolite.c:124: ipolite_open(struct ipolite_conn *c, uint16_t channel, uint8_t dups,
                           1284 ;	-----------------------------------------
                           1285 ;	 function ipolite_open
                           1286 ;	-----------------------------------------
   0406                    1287 _ipolite_open:
   0406 C0*00              1288 	push	_bp
   0408 85 81*00           1289 	mov	_bp,sp
   040B AA 82              1290 	mov	r2,dpl
   040D AB 83              1291 	mov	r3,dph
   040F AC F0              1292 	mov	r4,b
                           1293 ;	../../../core/net/rime/ipolite.c:127: broadcast_open(&c->c, channel, &broadcast);
   0411 C0 02              1294 	push	ar2
   0413 C0 03              1295 	push	ar3
   0415 C0 04              1296 	push	ar4
   0417 74r00              1297 	mov	a,#_broadcast
   0419 C0 E0              1298 	push	acc
   041B 74s00              1299 	mov	a,#(_broadcast >> 8)
   041D C0 E0              1300 	push	acc
   041F 74 80              1301 	mov	a,#0x80
   0421 C0 E0              1302 	push	acc
   0423 E5*00              1303 	mov	a,_bp
   0425 24 FC              1304 	add	a,#0xfc
   0427 F8                 1305 	mov	r0,a
   0428 E6                 1306 	mov	a,@r0
   0429 C0 E0              1307 	push	acc
   042B 08                 1308 	inc	r0
   042C E6                 1309 	mov	a,@r0
   042D C0 E0              1310 	push	acc
   042F 8A 82              1311 	mov	dpl,r2
   0431 8B 83              1312 	mov	dph,r3
   0433 8C F0              1313 	mov	b,r4
   0435 12s00r00           1314 	lcall	_broadcast_open
   0438 E5 81              1315 	mov	a,sp
   043A 24 FB              1316 	add	a,#0xfb
   043C F5 81              1317 	mov	sp,a
   043E D0 04              1318 	pop	ar4
   0440 D0 03              1319 	pop	ar3
   0442 D0 02              1320 	pop	ar2
                           1321 ;	../../../core/net/rime/ipolite.c:128: c->cb = cb;
   0444 74 0F              1322 	mov	a,#0x0F
   0446 2A                 1323 	add	a,r2
   0447 FD                 1324 	mov	r5,a
   0448 E4                 1325 	clr	a
   0449 3B                 1326 	addc	a,r3
   044A FE                 1327 	mov	r6,a
   044B 8C 07              1328 	mov	ar7,r4
   044D 8D 82              1329 	mov	dpl,r5
   044F 8E 83              1330 	mov	dph,r6
   0451 8F F0              1331 	mov	b,r7
   0453 E5*00              1332 	mov	a,_bp
   0455 24 F8              1333 	add	a,#0xf8
   0457 F8                 1334 	mov	r0,a
   0458 E6                 1335 	mov	a,@r0
   0459 12s00r00           1336 	lcall	__gptrput
   045C A3                 1337 	inc	dptr
   045D 08                 1338 	inc	r0
   045E E6                 1339 	mov	a,@r0
   045F 12s00r00           1340 	lcall	__gptrput
   0462 A3                 1341 	inc	dptr
   0463 08                 1342 	inc	r0
   0464 E6                 1343 	mov	a,@r0
   0465 12s00r00           1344 	lcall	__gptrput
                           1345 ;	../../../core/net/rime/ipolite.c:129: c->maxdups = dups;
   0468 74 2B              1346 	mov	a,#0x2B
   046A 2A                 1347 	add	a,r2
   046B FA                 1348 	mov	r2,a
   046C E4                 1349 	clr	a
   046D 3B                 1350 	addc	a,r3
   046E FB                 1351 	mov	r3,a
   046F 8A 82              1352 	mov	dpl,r2
   0471 8B 83              1353 	mov	dph,r3
   0473 8C F0              1354 	mov	b,r4
   0475 E5*00              1355 	mov	a,_bp
   0477 24 FB              1356 	add	a,#0xfb
   0479 F8                 1357 	mov	r0,a
   047A E6                 1358 	mov	a,@r0
   047B 12s00r00           1359 	lcall	__gptrput
   047E D0*00              1360 	pop	_bp
   0480 22                 1361 	ret
                           1362 ;------------------------------------------------------------
                           1363 ;Allocation info for local variables in function 'ipolite_close'
                           1364 ;------------------------------------------------------------
                           1365 ;c                         Allocated to registers r2 r3 r4 
                           1366 ;------------------------------------------------------------
                           1367 ;	../../../core/net/rime/ipolite.c:134: ipolite_close(struct ipolite_conn *c)
                           1368 ;	-----------------------------------------
                           1369 ;	 function ipolite_close
                           1370 ;	-----------------------------------------
   0481                    1371 _ipolite_close:
                           1372 ;	../../../core/net/rime/ipolite.c:136: broadcast_close(&c->c);
   0481 AA 82              1373 	mov	r2,dpl
   0483 AB 83              1374 	mov	r3,dph
   0485 AC F0              1375 	mov	r4,b
   0487 C0 02              1376 	push	ar2
   0489 C0 03              1377 	push	ar3
   048B C0 04              1378 	push	ar4
   048D 12s00r00           1379 	lcall	_broadcast_close
   0490 D0 04              1380 	pop	ar4
   0492 D0 03              1381 	pop	ar3
   0494 D0 02              1382 	pop	ar2
                           1383 ;	../../../core/net/rime/ipolite.c:137: ctimer_stop(&c->t);
   0496 74 12              1384 	mov	a,#0x12
   0498 2A                 1385 	add	a,r2
   0499 FD                 1386 	mov	r5,a
   049A E4                 1387 	clr	a
   049B 3B                 1388 	addc	a,r3
   049C FE                 1389 	mov	r6,a
   049D 8C 07              1390 	mov	ar7,r4
   049F 8D 82              1391 	mov	dpl,r5
   04A1 8E 83              1392 	mov	dph,r6
   04A3 8F F0              1393 	mov	b,r7
   04A5 C0 02              1394 	push	ar2
   04A7 C0 03              1395 	push	ar3
   04A9 C0 04              1396 	push	ar4
   04AB 12s00r00           1397 	lcall	_ctimer_stop
   04AE D0 04              1398 	pop	ar4
   04B0 D0 03              1399 	pop	ar3
   04B2 D0 02              1400 	pop	ar2
                           1401 ;	../../../core/net/rime/ipolite.c:138: if(c->q != NULL) {
   04B4 74 27              1402 	mov	a,#0x27
   04B6 2A                 1403 	add	a,r2
   04B7 FA                 1404 	mov	r2,a
   04B8 E4                 1405 	clr	a
   04B9 3B                 1406 	addc	a,r3
   04BA FB                 1407 	mov	r3,a
   04BB 8A 82              1408 	mov	dpl,r2
   04BD 8B 83              1409 	mov	dph,r3
   04BF 8C F0              1410 	mov	b,r4
   04C1 12s00r00           1411 	lcall	__gptrget
   04C4 FD                 1412 	mov	r5,a
   04C5 A3                 1413 	inc	dptr
   04C6 12s00r00           1414 	lcall	__gptrget
   04C9 FE                 1415 	mov	r6,a
   04CA A3                 1416 	inc	dptr
   04CB 12s00r00           1417 	lcall	__gptrget
   04CE FF                 1418 	mov	r7,a
   04CF ED                 1419 	mov	a,r5
   04D0 4E                 1420 	orl	a,r6
   04D1 4F                 1421 	orl	a,r7
   04D2 60 29              1422 	jz	00103$
                           1423 ;	../../../core/net/rime/ipolite.c:139: queuebuf_free(c->q);
   04D4 8D 82              1424 	mov	dpl,r5
   04D6 8E 83              1425 	mov	dph,r6
   04D8 8F F0              1426 	mov	b,r7
   04DA C0 02              1427 	push	ar2
   04DC C0 03              1428 	push	ar3
   04DE C0 04              1429 	push	ar4
   04E0 12s00r00           1430 	lcall	_queuebuf_free
   04E3 D0 04              1431 	pop	ar4
   04E5 D0 03              1432 	pop	ar3
   04E7 D0 02              1433 	pop	ar2
                           1434 ;	../../../core/net/rime/ipolite.c:140: c->q = NULL;
   04E9 8A 82              1435 	mov	dpl,r2
   04EB 8B 83              1436 	mov	dph,r3
   04ED 8C F0              1437 	mov	b,r4
   04EF E4                 1438 	clr	a
   04F0 12s00r00           1439 	lcall	__gptrput
   04F3 A3                 1440 	inc	dptr
   04F4 E4                 1441 	clr	a
   04F5 12s00r00           1442 	lcall	__gptrput
   04F8 A3                 1443 	inc	dptr
   04F9 E4                 1444 	clr	a
   04FA 02s00r00           1445 	ljmp	__gptrput
   04FD                    1446 00103$:
   04FD 22                 1447 	ret
                           1448 ;------------------------------------------------------------
                           1449 ;Allocation info for local variables in function 'ipolite_send'
                           1450 ;------------------------------------------------------------
                           1451 ;interval                  Allocated to stack - offset -4
                           1452 ;hdrsize                   Allocated to stack - offset -5
                           1453 ;c                         Allocated to stack - offset 1
                           1454 ;sloc0                     Allocated to stack - offset 4
                           1455 ;------------------------------------------------------------
                           1456 ;	../../../core/net/rime/ipolite.c:145: ipolite_send(struct ipolite_conn *c, clock_time_t interval, uint8_t hdrsize)
                           1457 ;	-----------------------------------------
                           1458 ;	 function ipolite_send
                           1459 ;	-----------------------------------------
   04FE                    1460 _ipolite_send:
   04FE C0*00              1461 	push	_bp
   0500 85 81*00           1462 	mov	_bp,sp
   0503 C0 82              1463 	push	dpl
   0505 C0 83              1464 	push	dph
   0507 C0 F0              1465 	push	b
                           1466 ;	../../../core/net/rime/ipolite.c:147: if(c->q != NULL) {
   0509 A8*00              1467 	mov	r0,_bp
   050B 08                 1468 	inc	r0
   050C 74 27              1469 	mov	a,#0x27
   050E 26                 1470 	add	a,@r0
   050F FD                 1471 	mov	r5,a
   0510 E4                 1472 	clr	a
   0511 08                 1473 	inc	r0
   0512 36                 1474 	addc	a,@r0
   0513 FE                 1475 	mov	r6,a
   0514 08                 1476 	inc	r0
   0515 86 07              1477 	mov	ar7,@r0
   0517 8D 82              1478 	mov	dpl,r5
   0519 8E 83              1479 	mov	dph,r6
   051B 8F F0              1480 	mov	b,r7
   051D 12s00r00           1481 	lcall	__gptrget
   0520 FA                 1482 	mov	r2,a
   0521 A3                 1483 	inc	dptr
   0522 12s00r00           1484 	lcall	__gptrget
   0525 FB                 1485 	mov	r3,a
   0526 A3                 1486 	inc	dptr
   0527 12s00r00           1487 	lcall	__gptrget
   052A FC                 1488 	mov	r4,a
   052B EA                 1489 	mov	a,r2
   052C 4B                 1490 	orl	a,r3
   052D 4C                 1491 	orl	a,r4
   052E 60 15              1492 	jz	00102$
                           1493 ;	../../../core/net/rime/ipolite.c:151: queuebuf_free(c->q);
   0530 8A 82              1494 	mov	dpl,r2
   0532 8B 83              1495 	mov	dph,r3
   0534 8C F0              1496 	mov	b,r4
   0536 C0 05              1497 	push	ar5
   0538 C0 06              1498 	push	ar6
   053A C0 07              1499 	push	ar7
   053C 12s00r00           1500 	lcall	_queuebuf_free
   053F D0 07              1501 	pop	ar7
   0541 D0 06              1502 	pop	ar6
   0543 D0 05              1503 	pop	ar5
   0545                    1504 00102$:
                           1505 ;	../../../core/net/rime/ipolite.c:153: c->dups = 0;
   0545 C0 05              1506 	push	ar5
   0547 C0 06              1507 	push	ar6
   0549 C0 07              1508 	push	ar7
   054B A8*00              1509 	mov	r0,_bp
   054D 08                 1510 	inc	r0
   054E 74 2C              1511 	mov	a,#0x2C
   0550 26                 1512 	add	a,@r0
   0551 FD                 1513 	mov	r5,a
   0552 E4                 1514 	clr	a
   0553 08                 1515 	inc	r0
   0554 36                 1516 	addc	a,@r0
   0555 FE                 1517 	mov	r6,a
   0556 08                 1518 	inc	r0
   0557 86 07              1519 	mov	ar7,@r0
   0559 8D 82              1520 	mov	dpl,r5
   055B 8E 83              1521 	mov	dph,r6
   055D 8F F0              1522 	mov	b,r7
   055F E4                 1523 	clr	a
   0560 12s00r00           1524 	lcall	__gptrput
                           1525 ;	../../../core/net/rime/ipolite.c:154: c->hdrsize = hdrsize;
   0563 A8*00              1526 	mov	r0,_bp
   0565 08                 1527 	inc	r0
   0566 74 2A              1528 	mov	a,#0x2A
   0568 26                 1529 	add	a,@r0
   0569 FD                 1530 	mov	r5,a
   056A E4                 1531 	clr	a
   056B 08                 1532 	inc	r0
   056C 36                 1533 	addc	a,@r0
   056D FE                 1534 	mov	r6,a
   056E 08                 1535 	inc	r0
   056F 86 07              1536 	mov	ar7,@r0
   0571 8D 82              1537 	mov	dpl,r5
   0573 8E 83              1538 	mov	dph,r6
   0575 8F F0              1539 	mov	b,r7
   0577 E5*00              1540 	mov	a,_bp
   0579 24 FB              1541 	add	a,#0xfb
   057B F8                 1542 	mov	r0,a
   057C E6                 1543 	mov	a,@r0
   057D 12s00r00           1544 	lcall	__gptrput
                           1545 ;	../../../core/net/rime/ipolite.c:155: if(interval == 0) {
   0580 D0 07              1546 	pop	ar7
   0582 D0 06              1547 	pop	ar6
   0584 D0 05              1548 	pop	ar5
   0586 E5*00              1549 	mov	a,_bp
   0588 24 FC              1550 	add	a,#0xfc
   058A F8                 1551 	mov	r0,a
   058B E6                 1552 	mov	a,@r0
   058C 08                 1553 	inc	r0
   058D 46                 1554 	orl	a,@r0
   058E 60 03              1555 	jz	00120$
   0590 02s06r0E           1556 	ljmp	00110$
   0593                    1557 00120$:
                           1558 ;	../../../core/net/rime/ipolite.c:158: if(broadcast_send(&c->c)) {
   0593 A8*00              1559 	mov	r0,_bp
   0595 08                 1560 	inc	r0
   0596 86 82              1561 	mov	dpl,@r0
   0598 08                 1562 	inc	r0
   0599 86 83              1563 	mov	dph,@r0
   059B 08                 1564 	inc	r0
   059C 86 F0              1565 	mov	b,@r0
   059E 12s00r00           1566 	lcall	_broadcast_send
   05A1 E5 82              1567 	mov	a,dpl
   05A3 85 83 F0           1568 	mov	b,dph
   05A6 45 F0              1569 	orl	a,b
   05A8 70 03              1570 	jnz	00121$
   05AA 02s06rBA           1571 	ljmp	00111$
   05AD                    1572 00121$:
                           1573 ;	../../../core/net/rime/ipolite.c:159: if(c->cb->sent) {
   05AD A8*00              1574 	mov	r0,_bp
   05AF 08                 1575 	inc	r0
   05B0 74 0F              1576 	mov	a,#0x0F
   05B2 26                 1577 	add	a,@r0
   05B3 FA                 1578 	mov	r2,a
   05B4 E4                 1579 	clr	a
   05B5 08                 1580 	inc	r0
   05B6 36                 1581 	addc	a,@r0
   05B7 FB                 1582 	mov	r3,a
   05B8 08                 1583 	inc	r0
   05B9 86 04              1584 	mov	ar4,@r0
   05BB 8A 82              1585 	mov	dpl,r2
   05BD 8B 83              1586 	mov	dph,r3
   05BF 8C F0              1587 	mov	b,r4
   05C1 12s00r00           1588 	lcall	__gptrget
   05C4 FA                 1589 	mov	r2,a
   05C5 A3                 1590 	inc	dptr
   05C6 12s00r00           1591 	lcall	__gptrget
   05C9 FB                 1592 	mov	r3,a
   05CA A3                 1593 	inc	dptr
   05CB 12s00r00           1594 	lcall	__gptrget
   05CE FC                 1595 	mov	r4,a
   05CF 74 02              1596 	mov	a,#0x02
   05D1 2A                 1597 	add	a,r2
   05D2 FA                 1598 	mov	r2,a
   05D3 E4                 1599 	clr	a
   05D4 3B                 1600 	addc	a,r3
   05D5 FB                 1601 	mov	r3,a
   05D6 8A 82              1602 	mov	dpl,r2
   05D8 8B 83              1603 	mov	dph,r3
   05DA 8C F0              1604 	mov	b,r4
   05DC 12s00r00           1605 	lcall	__gptrget
   05DF FA                 1606 	mov	r2,a
   05E0 A3                 1607 	inc	dptr
   05E1 12s00r00           1608 	lcall	__gptrget
   05E4 FB                 1609 	mov	r3,a
   05E5 4A                 1610 	orl	a,r2
   05E6 60 20              1611 	jz	00104$
                           1612 ;	../../../core/net/rime/ipolite.c:160: c->cb->sent(c);
   05E8 C0 02              1613 	push	ar2
   05EA C0 03              1614 	push	ar3
   05EC 74r04              1615 	mov	a,#00123$
   05EE C0 E0              1616 	push	acc
   05F0 74s06              1617 	mov	a,#(00123$ >> 8)
   05F2 C0 E0              1618 	push	acc
   05F4 C0 02              1619 	push	ar2
   05F6 C0 03              1620 	push	ar3
   05F8 A8*00              1621 	mov	r0,_bp
   05FA 08                 1622 	inc	r0
   05FB 86 82              1623 	mov	dpl,@r0
   05FD 08                 1624 	inc	r0
   05FE 86 83              1625 	mov	dph,@r0
   0600 08                 1626 	inc	r0
   0601 86 F0              1627 	mov	b,@r0
   0603 22                 1628 	ret
   0604                    1629 00123$:
   0604 D0 03              1630 	pop	ar3
   0606 D0 02              1631 	pop	ar2
   0608                    1632 00104$:
                           1633 ;	../../../core/net/rime/ipolite.c:162: return 1;
   0608 90 00 01           1634 	mov	dptr,#0x0001
   060B 02s06rBD           1635 	ljmp	00112$
   060E                    1636 00110$:
                           1637 ;	../../../core/net/rime/ipolite.c:166: c->q = queuebuf_new_from_packetbuf();
   060E C0 05              1638 	push	ar5
   0610 C0 06              1639 	push	ar6
   0612 C0 07              1640 	push	ar7
   0614 12s00r00           1641 	lcall	_queuebuf_new_from_packetbuf
   0617 AA 82              1642 	mov	r2,dpl
   0619 AB 83              1643 	mov	r3,dph
   061B AC F0              1644 	mov	r4,b
   061D D0 07              1645 	pop	ar7
   061F D0 06              1646 	pop	ar6
   0621 D0 05              1647 	pop	ar5
   0623 8D 82              1648 	mov	dpl,r5
   0625 8E 83              1649 	mov	dph,r6
   0627 8F F0              1650 	mov	b,r7
   0629 EA                 1651 	mov	a,r2
   062A 12s00r00           1652 	lcall	__gptrput
   062D A3                 1653 	inc	dptr
   062E EB                 1654 	mov	a,r3
   062F 12s00r00           1655 	lcall	__gptrput
   0632 A3                 1656 	inc	dptr
   0633 EC                 1657 	mov	a,r4
   0634 12s00r00           1658 	lcall	__gptrput
                           1659 ;	../../../core/net/rime/ipolite.c:167: if(c->q != NULL) {
   0637 EA                 1660 	mov	a,r2
   0638 4B                 1661 	orl	a,r3
   0639 4C                 1662 	orl	a,r4
   063A 70 03              1663 	jnz	00124$
   063C 02s06rBA           1664 	ljmp	00111$
   063F                    1665 00124$:
                           1666 ;	../../../core/net/rime/ipolite.c:169: interval / 2 + (random_rand() % (interval / 2)),
   063F E5*00              1667 	mov	a,_bp
   0641 24 FC              1668 	add	a,#0xfc
   0643 F8                 1669 	mov	r0,a
   0644 86 02              1670 	mov	ar2,@r0
   0646 08                 1671 	inc	r0
   0647 E6                 1672 	mov	a,@r0
   0648 C3                 1673 	clr	c
   0649 13                 1674 	rrc	a
   064A CA                 1675 	xch	a,r2
   064B 13                 1676 	rrc	a
   064C CA                 1677 	xch	a,r2
   064D FB                 1678 	mov	r3,a
   064E C0 02              1679 	push	ar2
   0650 C0 03              1680 	push	ar3
   0652 12s00r00           1681 	lcall	_random_rand
   0655 AC 82              1682 	mov	r4,dpl
   0657 AD 83              1683 	mov	r5,dph
   0659 D0 03              1684 	pop	ar3
   065B D0 02              1685 	pop	ar2
   065D C0 02              1686 	push	ar2
   065F C0 03              1687 	push	ar3
   0661 C0 02              1688 	push	ar2
   0663 C0 03              1689 	push	ar3
   0665 8C 82              1690 	mov	dpl,r4
   0667 8D 83              1691 	mov	dph,r5
   0669 12s00r00           1692 	lcall	__moduint
   066C AC 82              1693 	mov	r4,dpl
   066E AD 83              1694 	mov	r5,dph
   0670 15 81              1695 	dec	sp
   0672 15 81              1696 	dec	sp
   0674 D0 03              1697 	pop	ar3
   0676 D0 02              1698 	pop	ar2
   0678 EC                 1699 	mov	a,r4
   0679 2A                 1700 	add	a,r2
   067A FA                 1701 	mov	r2,a
   067B ED                 1702 	mov	a,r5
   067C 3B                 1703 	addc	a,r3
   067D FB                 1704 	mov	r3,a
                           1705 ;	../../../core/net/rime/ipolite.c:168: ctimer_set(&c->t,
   067E A8*00              1706 	mov	r0,_bp
   0680 08                 1707 	inc	r0
   0681 74 12              1708 	mov	a,#0x12
   0683 26                 1709 	add	a,@r0
   0684 FC                 1710 	mov	r4,a
   0685 E4                 1711 	clr	a
   0686 08                 1712 	inc	r0
   0687 36                 1713 	addc	a,@r0
   0688 FD                 1714 	mov	r5,a
   0689 08                 1715 	inc	r0
   068A 86 06              1716 	mov	ar6,@r0
   068C A8*00              1717 	mov	r0,_bp
   068E 08                 1718 	inc	r0
   068F E6                 1719 	mov	a,@r0
   0690 C0 E0              1720 	push	acc
   0692 08                 1721 	inc	r0
   0693 E6                 1722 	mov	a,@r0
   0694 C0 E0              1723 	push	acc
   0696 08                 1724 	inc	r0
   0697 E6                 1725 	mov	a,@r0
   0698 C0 E0              1726 	push	acc
   069A 74r10              1727 	mov	a,#_send
   069C C0 E0              1728 	push	acc
   069E 74s03              1729 	mov	a,#(_send >> 8)
   06A0 C0 E0              1730 	push	acc
   06A2 C0 02              1731 	push	ar2
   06A4 C0 03              1732 	push	ar3
   06A6 8C 82              1733 	mov	dpl,r4
   06A8 8D 83              1734 	mov	dph,r5
   06AA 8E F0              1735 	mov	b,r6
   06AC 12s00r00           1736 	lcall	_ctimer_set
   06AF E5 81              1737 	mov	a,sp
   06B1 24 F9              1738 	add	a,#0xf9
   06B3 F5 81              1739 	mov	sp,a
                           1740 ;	../../../core/net/rime/ipolite.c:171: return 1;
   06B5 90 00 01           1741 	mov	dptr,#0x0001
   06B8 80 03              1742 	sjmp	00112$
   06BA                    1743 00111$:
                           1744 ;	../../../core/net/rime/ipolite.c:176: return 0;
   06BA 90 00 00           1745 	mov	dptr,#0x0000
   06BD                    1746 00112$:
   06BD 85*00 81           1747 	mov	sp,_bp
   06C0 D0*00              1748 	pop	_bp
   06C2 22                 1749 	ret
                           1750 ;------------------------------------------------------------
                           1751 ;Allocation info for local variables in function 'ipolite_cancel'
                           1752 ;------------------------------------------------------------
                           1753 ;c                         Allocated to registers r2 r3 r4 
                           1754 ;------------------------------------------------------------
                           1755 ;	../../../core/net/rime/ipolite.c:180: ipolite_cancel(struct ipolite_conn *c)
                           1756 ;	-----------------------------------------
                           1757 ;	 function ipolite_cancel
                           1758 ;	-----------------------------------------
   06C3                    1759 _ipolite_cancel:
   06C3 AA 82              1760 	mov	r2,dpl
   06C5 AB 83              1761 	mov	r3,dph
   06C7 AC F0              1762 	mov	r4,b
                           1763 ;	../../../core/net/rime/ipolite.c:182: ctimer_stop(&c->t);
   06C9 74 12              1764 	mov	a,#0x12
   06CB 2A                 1765 	add	a,r2
   06CC FD                 1766 	mov	r5,a
   06CD E4                 1767 	clr	a
   06CE 3B                 1768 	addc	a,r3
   06CF FE                 1769 	mov	r6,a
   06D0 8C 07              1770 	mov	ar7,r4
   06D2 8D 82              1771 	mov	dpl,r5
   06D4 8E 83              1772 	mov	dph,r6
   06D6 8F F0              1773 	mov	b,r7
   06D8 C0 02              1774 	push	ar2
   06DA C0 03              1775 	push	ar3
   06DC C0 04              1776 	push	ar4
   06DE 12s00r00           1777 	lcall	_ctimer_stop
   06E1 D0 04              1778 	pop	ar4
   06E3 D0 03              1779 	pop	ar3
   06E5 D0 02              1780 	pop	ar2
                           1781 ;	../../../core/net/rime/ipolite.c:183: if(c->q != NULL) {
   06E7 74 27              1782 	mov	a,#0x27
   06E9 2A                 1783 	add	a,r2
   06EA FA                 1784 	mov	r2,a
   06EB E4                 1785 	clr	a
   06EC 3B                 1786 	addc	a,r3
   06ED FB                 1787 	mov	r3,a
   06EE 8A 82              1788 	mov	dpl,r2
   06F0 8B 83              1789 	mov	dph,r3
   06F2 8C F0              1790 	mov	b,r4
   06F4 12s00r00           1791 	lcall	__gptrget
   06F7 FD                 1792 	mov	r5,a
   06F8 A3                 1793 	inc	dptr
   06F9 12s00r00           1794 	lcall	__gptrget
   06FC FE                 1795 	mov	r6,a
   06FD A3                 1796 	inc	dptr
   06FE 12s00r00           1797 	lcall	__gptrget
   0701 FF                 1798 	mov	r7,a
   0702 ED                 1799 	mov	a,r5
   0703 4E                 1800 	orl	a,r6
   0704 4F                 1801 	orl	a,r7
   0705 60 29              1802 	jz	00103$
                           1803 ;	../../../core/net/rime/ipolite.c:184: queuebuf_free(c->q);
   0707 8D 82              1804 	mov	dpl,r5
   0709 8E 83              1805 	mov	dph,r6
   070B 8F F0              1806 	mov	b,r7
   070D C0 02              1807 	push	ar2
   070F C0 03              1808 	push	ar3
   0711 C0 04              1809 	push	ar4
   0713 12s00r00           1810 	lcall	_queuebuf_free
   0716 D0 04              1811 	pop	ar4
   0718 D0 03              1812 	pop	ar3
   071A D0 02              1813 	pop	ar2
                           1814 ;	../../../core/net/rime/ipolite.c:185: c->q = NULL;
   071C 8A 82              1815 	mov	dpl,r2
   071E 8B 83              1816 	mov	dph,r3
   0720 8C F0              1817 	mov	b,r4
   0722 E4                 1818 	clr	a
   0723 12s00r00           1819 	lcall	__gptrput
   0726 A3                 1820 	inc	dptr
   0727 E4                 1821 	clr	a
   0728 12s00r00           1822 	lcall	__gptrput
   072B A3                 1823 	inc	dptr
   072C E4                 1824 	clr	a
   072D 02s00r00           1825 	ljmp	__gptrput
   0730                    1826 00103$:
   0730 22                 1827 	ret
                           1828 	.area CSEG    (CODE)
                           1829 	.area CONST   (CODE)
   0000                    1830 _broadcast:
   0000r00s00              1831 	.byte _recv,(_recv >> 8)
   0002r08s03              1832 	.byte _sent,(_sent >> 8)
                           1833 	.area XINIT   (CODE)
                           1834 	.area CABS    (ABS,CODE)
