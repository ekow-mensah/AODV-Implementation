                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:25:45 2018
                              5 ;--------------------------------------------------------
                              6 	.module cxmac
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _cxmac_driver
                             13 	.globl _cxmac_init
                             14 	.globl _cxmac_set_announcement_radio_txpower
                             15 	.globl _IRCON2_P2IF
                             16 	.globl _IRCON2_UTX0IF
                             17 	.globl _IRCON2_UTX1IF
                             18 	.globl _IRCON2_P1IF
                             19 	.globl _IRCON2_WDTIF
                             20 	.globl _CY
                             21 	.globl _AC
                             22 	.globl _F0
                             23 	.globl _RS1
                             24 	.globl _RS0
                             25 	.globl _OV
                             26 	.globl _F1
                             27 	.globl _P
                             28 	.globl _IRCON_DMAIF
                             29 	.globl _IRCON_T1IF
                             30 	.globl _IRCON_T2IF
                             31 	.globl _IRCON_T3IF
                             32 	.globl _IRCON_T4IF
                             33 	.globl _IRCON_P0IF
                             34 	.globl _IRCON_STIF
                             35 	.globl _IEN1_DMAIE
                             36 	.globl _IEN1_T1IE
                             37 	.globl _IEN1_T2IE
                             38 	.globl _IEN1_T3IE
                             39 	.globl _IEN1_T4IE
                             40 	.globl _IEN1_P0IE
                             41 	.globl _IEN0_RFERRIE
                             42 	.globl _IEN0_ADCIE
                             43 	.globl _IEN0_URX0IE
                             44 	.globl _IEN0_URX1IE
                             45 	.globl _IEN0_ENCIE
                             46 	.globl _IEN0_STIE
                             47 	.globl _IEN0_EA
                             48 	.globl _EA
                             49 	.globl _P2_4
                             50 	.globl _P2_3
                             51 	.globl _P2_2
                             52 	.globl _P2_1
                             53 	.globl _P2_0
                             54 	.globl _S0CON_ENCIF_0
                             55 	.globl _S0CON_ENCIF_1
                             56 	.globl _P1_7
                             57 	.globl _P1_6
                             58 	.globl _P1_5
                             59 	.globl _P1_4
                             60 	.globl _P1_3
                             61 	.globl _P1_2
                             62 	.globl _P1_1
                             63 	.globl _P1_0
                             64 	.globl _TCON_IT0
                             65 	.globl _TCON_RFERRIF
                             66 	.globl _TCON_IT1
                             67 	.globl _TCON_URX0IF
                             68 	.globl _TCON_ADCIF
                             69 	.globl _TCON_URX1IF
                             70 	.globl _P0_0
                             71 	.globl _P0_1
                             72 	.globl _P0_2
                             73 	.globl _P0_3
                             74 	.globl _P0_4
                             75 	.globl _P0_5
                             76 	.globl _P0_6
                             77 	.globl _P0_7
                             78 	.globl _P2DIR
                             79 	.globl _P1DIR
                             80 	.globl _P0DIR
                             81 	.globl _U1GCR
                             82 	.globl _U1UCR
                             83 	.globl _U1BAUD
                             84 	.globl _U1BUF
                             85 	.globl _U1CSR
                             86 	.globl _P2INP
                             87 	.globl _P1INP
                             88 	.globl _P2SEL
                             89 	.globl _P1SEL
                             90 	.globl _P0SEL
                             91 	.globl _ADCCFG
                             92 	.globl _PERCFG
                             93 	.globl _B
                             94 	.globl _T4CC1
                             95 	.globl _T4CCTL1
                             96 	.globl _T4CC0
                             97 	.globl _T4CCTL0
                             98 	.globl _T4CTL
                             99 	.globl _T4CNT
                            100 	.globl _RFIF
                            101 	.globl _IRCON2
                            102 	.globl _T1CCTL2
                            103 	.globl _T1CCTL1
                            104 	.globl _T1CCTL0
                            105 	.globl _T1CTL
                            106 	.globl _T1CNTH
                            107 	.globl _T1CNTL
                            108 	.globl _RFST
                            109 	.globl _ACC
                            110 	.globl _T1CC2H
                            111 	.globl _T1CC2L
                            112 	.globl _T1CC1H
                            113 	.globl _T1CC1L
                            114 	.globl _T1CC0H
                            115 	.globl _T1CC0L
                            116 	.globl _RFD
                            117 	.globl _TIMIF
                            118 	.globl _DMAREQ
                            119 	.globl _DMAARM
                            120 	.globl _DMA0CFGH
                            121 	.globl _DMA0CFGL
                            122 	.globl _DMA1CFGH
                            123 	.globl _DMA1CFGL
                            124 	.globl _DMAIRQ
                            125 	.globl _PSW
                            126 	.globl _T3CC1
                            127 	.globl _T3CCTL1
                            128 	.globl _T3CC0
                            129 	.globl _T3CCTL0
                            130 	.globl _T3CTL
                            131 	.globl _T3CNT
                            132 	.globl _WDCTL
                            133 	.globl _T2CON
                            134 	.globl _MEMCTR
                            135 	.globl _CLKCON
                            136 	.globl _U0GCR
                            137 	.globl _U0UCR
                            138 	.globl _T2CNF
                            139 	.globl _U0BAUD
                            140 	.globl _U0BUF
                            141 	.globl _IRCON
                            142 	.globl _SLEEP
                            143 	.globl _RNDH
                            144 	.globl _RNDL
                            145 	.globl _ADCH
                            146 	.globl _ADCL
                            147 	.globl _IP1
                            148 	.globl _IEN1
                            149 	.globl _RCCTL
                            150 	.globl _ADCCON3
                            151 	.globl _ADCCON2
                            152 	.globl _ADCCON1
                            153 	.globl _ENCCS
                            154 	.globl _ENCDO
                            155 	.globl _ENCDI
                            156 	.globl _FWDATA
                            157 	.globl _FCTL
                            158 	.globl _FADDRH
                            159 	.globl _FADDRL
                            160 	.globl _FWT
                            161 	.globl _IP0
                            162 	.globl _IEN0
                            163 	.globl _IE
                            164 	.globl _T2THD
                            165 	.globl _T2TLD
                            166 	.globl _T2CAPHPH
                            167 	.globl _T2CAPLPL
                            168 	.globl _T2OF2
                            169 	.globl _T2OF1
                            170 	.globl _T2OF0
                            171 	.globl _P2
                            172 	.globl _PSBANK
                            173 	.globl _FMAP
                            174 	.globl _T2PEROF2
                            175 	.globl _T2PEROF1
                            176 	.globl _T2PEROF0
                            177 	.globl _S1CON
                            178 	.globl _IEN2
                            179 	.globl _HSRC
                            180 	.globl _S0CON
                            181 	.globl _ST2
                            182 	.globl _ST1
                            183 	.globl _ST0
                            184 	.globl _T2CMP
                            185 	.globl __XPAGE
                            186 	.globl _DPS
                            187 	.globl _RFIM
                            188 	.globl _P1
                            189 	.globl _P0INP
                            190 	.globl _P1IEN
                            191 	.globl _PICTL
                            192 	.globl _P2IFG
                            193 	.globl _P1IFG
                            194 	.globl _P0IFG
                            195 	.globl _TCON
                            196 	.globl _PCON
                            197 	.globl _U0CSR
                            198 	.globl _DPH1
                            199 	.globl _DPL1
                            200 	.globl _DPH0
                            201 	.globl _DPL0
                            202 	.globl _SP
                            203 	.globl _P0
                            204 	.globl _cxmac_config
                            205 	.globl _ADC_SHADOW
                            206 	.globl _U1BUF_SHADOW
                            207 	.globl _RFD_SHADOW
                            208 	.globl _U0BUF_SHADOW
                            209 	.globl _RFSTATUS
                            210 	.globl _CHIPID
                            211 	.globl _CHVER
                            212 	.globl _FSMTC1
                            213 	.globl _RXFIFOCNT
                            214 	.globl _IOCFG3
                            215 	.globl _IOCFG2
                            216 	.globl _IOCFG1
                            217 	.globl _IOCFG0
                            218 	.globl _SHORTADDRL
                            219 	.globl _SHORTADDRH
                            220 	.globl _PANIDL
                            221 	.globl _PANIDH
                            222 	.globl _IEEE_ADDR7
                            223 	.globl _IEEE_ADDR6
                            224 	.globl _IEEE_ADDR5
                            225 	.globl _IEEE_ADDR4
                            226 	.globl _IEEE_ADDR3
                            227 	.globl _IEEE_ADDR2
                            228 	.globl _IEEE_ADDR1
                            229 	.globl _IEEE_ADDR0
                            230 	.globl _DACTSTL
                            231 	.globl _DACTSTH
                            232 	.globl _ADCTSTL
                            233 	.globl _ADCTSTH
                            234 	.globl _FSMSTATE
                            235 	.globl _AGCCTRLL
                            236 	.globl _AGCCTRLH
                            237 	.globl _MANORL
                            238 	.globl _MANORH
                            239 	.globl _MANANDL
                            240 	.globl _MANANDH
                            241 	.globl _FSMTCL
                            242 	.globl _FSMTCH
                            243 	.globl _RFPWR
                            244 	.globl _CSPT
                            245 	.globl _CSPCTRL
                            246 	.globl _CSPZ
                            247 	.globl _CSPY
                            248 	.globl _CSPX
                            249 	.globl _FSCTRLL
                            250 	.globl _FSCTRLH
                            251 	.globl _RXCTRL1L
                            252 	.globl _RXCTRL1H
                            253 	.globl _RXCTRL0L
                            254 	.globl _RXCTRL0H
                            255 	.globl _TXCTRLL
                            256 	.globl _TXCTRLH
                            257 	.globl _SYNCWORDL
                            258 	.globl _SYNCWORDH
                            259 	.globl _RSSIL
                            260 	.globl _RSSIH
                            261 	.globl _MDMCTRL1L
                            262 	.globl _MDMCTRL1H
                            263 	.globl _MDMCTRL0L
                            264 	.globl _MDMCTRL0H
                            265 ;--------------------------------------------------------
                            266 ; special function registers
                            267 ;--------------------------------------------------------
                            268 	.area RSEG    (ABS,DATA)
   0000                     269 	.org 0x0000
                    0080    270 _P0	=	0x0080
                    0081    271 _SP	=	0x0081
                    0082    272 _DPL0	=	0x0082
                    0083    273 _DPH0	=	0x0083
                    0084    274 _DPL1	=	0x0084
                    0085    275 _DPH1	=	0x0085
                    0086    276 _U0CSR	=	0x0086
                    0087    277 _PCON	=	0x0087
                    0088    278 _TCON	=	0x0088
                    0089    279 _P0IFG	=	0x0089
                    008A    280 _P1IFG	=	0x008a
                    008B    281 _P2IFG	=	0x008b
                    008C    282 _PICTL	=	0x008c
                    008D    283 _P1IEN	=	0x008d
                    008F    284 _P0INP	=	0x008f
                    0090    285 _P1	=	0x0090
                    0091    286 _RFIM	=	0x0091
                    0092    287 _DPS	=	0x0092
                    0093    288 __XPAGE	=	0x0093
                    0094    289 _T2CMP	=	0x0094
                    0095    290 _ST0	=	0x0095
                    0096    291 _ST1	=	0x0096
                    0097    292 _ST2	=	0x0097
                    0098    293 _S0CON	=	0x0098
                    0099    294 _HSRC	=	0x0099
                    009A    295 _IEN2	=	0x009a
                    009B    296 _S1CON	=	0x009b
                    009C    297 _T2PEROF0	=	0x009c
                    009D    298 _T2PEROF1	=	0x009d
                    009E    299 _T2PEROF2	=	0x009e
                    009F    300 _FMAP	=	0x009f
                    009F    301 _PSBANK	=	0x009f
                    00A0    302 _P2	=	0x00a0
                    00A1    303 _T2OF0	=	0x00a1
                    00A2    304 _T2OF1	=	0x00a2
                    00A3    305 _T2OF2	=	0x00a3
                    00A4    306 _T2CAPLPL	=	0x00a4
                    00A5    307 _T2CAPHPH	=	0x00a5
                    00A6    308 _T2TLD	=	0x00a6
                    00A7    309 _T2THD	=	0x00a7
                    00A8    310 _IE	=	0x00a8
                    00A8    311 _IEN0	=	0x00a8
                    00A9    312 _IP0	=	0x00a9
                    00AB    313 _FWT	=	0x00ab
                    00AC    314 _FADDRL	=	0x00ac
                    00AD    315 _FADDRH	=	0x00ad
                    00AE    316 _FCTL	=	0x00ae
                    00AF    317 _FWDATA	=	0x00af
                    00B1    318 _ENCDI	=	0x00b1
                    00B2    319 _ENCDO	=	0x00b2
                    00B3    320 _ENCCS	=	0x00b3
                    00B4    321 _ADCCON1	=	0x00b4
                    00B5    322 _ADCCON2	=	0x00b5
                    00B6    323 _ADCCON3	=	0x00b6
                    00B7    324 _RCCTL	=	0x00b7
                    00B8    325 _IEN1	=	0x00b8
                    00B9    326 _IP1	=	0x00b9
                    00BA    327 _ADCL	=	0x00ba
                    00BB    328 _ADCH	=	0x00bb
                    00BC    329 _RNDL	=	0x00bc
                    00BD    330 _RNDH	=	0x00bd
                    00BE    331 _SLEEP	=	0x00be
                    00C0    332 _IRCON	=	0x00c0
                    00C1    333 _U0BUF	=	0x00c1
                    00C2    334 _U0BAUD	=	0x00c2
                    00C3    335 _T2CNF	=	0x00c3
                    00C4    336 _U0UCR	=	0x00c4
                    00C5    337 _U0GCR	=	0x00c5
                    00C6    338 _CLKCON	=	0x00c6
                    00C7    339 _MEMCTR	=	0x00c7
                    00C8    340 _T2CON	=	0x00c8
                    00C9    341 _WDCTL	=	0x00c9
                    00CA    342 _T3CNT	=	0x00ca
                    00CB    343 _T3CTL	=	0x00cb
                    00CC    344 _T3CCTL0	=	0x00cc
                    00CD    345 _T3CC0	=	0x00cd
                    00CE    346 _T3CCTL1	=	0x00ce
                    00CF    347 _T3CC1	=	0x00cf
                    00D0    348 _PSW	=	0x00d0
                    00D1    349 _DMAIRQ	=	0x00d1
                    00D2    350 _DMA1CFGL	=	0x00d2
                    00D3    351 _DMA1CFGH	=	0x00d3
                    00D4    352 _DMA0CFGL	=	0x00d4
                    00D5    353 _DMA0CFGH	=	0x00d5
                    00D6    354 _DMAARM	=	0x00d6
                    00D7    355 _DMAREQ	=	0x00d7
                    00D8    356 _TIMIF	=	0x00d8
                    00D9    357 _RFD	=	0x00d9
                    00DA    358 _T1CC0L	=	0x00da
                    00DB    359 _T1CC0H	=	0x00db
                    00DC    360 _T1CC1L	=	0x00dc
                    00DD    361 _T1CC1H	=	0x00dd
                    00DE    362 _T1CC2L	=	0x00de
                    00DF    363 _T1CC2H	=	0x00df
                    00E0    364 _ACC	=	0x00e0
                    00E1    365 _RFST	=	0x00e1
                    00E2    366 _T1CNTL	=	0x00e2
                    00E3    367 _T1CNTH	=	0x00e3
                    00E4    368 _T1CTL	=	0x00e4
                    00E5    369 _T1CCTL0	=	0x00e5
                    00E6    370 _T1CCTL1	=	0x00e6
                    00E7    371 _T1CCTL2	=	0x00e7
                    00E8    372 _IRCON2	=	0x00e8
                    00E9    373 _RFIF	=	0x00e9
                    00EA    374 _T4CNT	=	0x00ea
                    00EB    375 _T4CTL	=	0x00eb
                    00EC    376 _T4CCTL0	=	0x00ec
                    00ED    377 _T4CC0	=	0x00ed
                    00EE    378 _T4CCTL1	=	0x00ee
                    00EF    379 _T4CC1	=	0x00ef
                    00F0    380 _B	=	0x00f0
                    00F1    381 _PERCFG	=	0x00f1
                    00F2    382 _ADCCFG	=	0x00f2
                    00F3    383 _P0SEL	=	0x00f3
                    00F4    384 _P1SEL	=	0x00f4
                    00F5    385 _P2SEL	=	0x00f5
                    00F6    386 _P1INP	=	0x00f6
                    00F7    387 _P2INP	=	0x00f7
                    00F8    388 _U1CSR	=	0x00f8
                    00F9    389 _U1BUF	=	0x00f9
                    00FA    390 _U1BAUD	=	0x00fa
                    00FB    391 _U1UCR	=	0x00fb
                    00FC    392 _U1GCR	=	0x00fc
                    00FD    393 _P0DIR	=	0x00fd
                    00FE    394 _P1DIR	=	0x00fe
                    00FF    395 _P2DIR	=	0x00ff
                            396 ;--------------------------------------------------------
                            397 ; special function bits
                            398 ;--------------------------------------------------------
                            399 	.area RSEG    (ABS,DATA)
   0000                     400 	.org 0x0000
                    0087    401 _P0_7	=	0x0087
                    0086    402 _P0_6	=	0x0086
                    0085    403 _P0_5	=	0x0085
                    0084    404 _P0_4	=	0x0084
                    0083    405 _P0_3	=	0x0083
                    0082    406 _P0_2	=	0x0082
                    0081    407 _P0_1	=	0x0081
                    0080    408 _P0_0	=	0x0080
                    008F    409 _TCON_URX1IF	=	0x008f
                    008D    410 _TCON_ADCIF	=	0x008d
                    008B    411 _TCON_URX0IF	=	0x008b
                    008A    412 _TCON_IT1	=	0x008a
                    0089    413 _TCON_RFERRIF	=	0x0089
                    0088    414 _TCON_IT0	=	0x0088
                    0090    415 _P1_0	=	0x0090
                    0091    416 _P1_1	=	0x0091
                    0092    417 _P1_2	=	0x0092
                    0093    418 _P1_3	=	0x0093
                    0094    419 _P1_4	=	0x0094
                    0095    420 _P1_5	=	0x0095
                    0096    421 _P1_6	=	0x0096
                    0097    422 _P1_7	=	0x0097
                    0099    423 _S0CON_ENCIF_1	=	0x0099
                    0098    424 _S0CON_ENCIF_0	=	0x0098
                    00A0    425 _P2_0	=	0x00a0
                    00A1    426 _P2_1	=	0x00a1
                    00A2    427 _P2_2	=	0x00a2
                    00A3    428 _P2_3	=	0x00a3
                    00A4    429 _P2_4	=	0x00a4
                    00AF    430 _EA	=	0x00af
                    00AF    431 _IEN0_EA	=	0x00af
                    00AD    432 _IEN0_STIE	=	0x00ad
                    00AC    433 _IEN0_ENCIE	=	0x00ac
                    00AB    434 _IEN0_URX1IE	=	0x00ab
                    00AA    435 _IEN0_URX0IE	=	0x00aa
                    00A9    436 _IEN0_ADCIE	=	0x00a9
                    00A8    437 _IEN0_RFERRIE	=	0x00a8
                    00BD    438 _IEN1_P0IE	=	0x00bd
                    00BC    439 _IEN1_T4IE	=	0x00bc
                    00BB    440 _IEN1_T3IE	=	0x00bb
                    00BA    441 _IEN1_T2IE	=	0x00ba
                    00B9    442 _IEN1_T1IE	=	0x00b9
                    00B8    443 _IEN1_DMAIE	=	0x00b8
                    00C7    444 _IRCON_STIF	=	0x00c7
                    00C5    445 _IRCON_P0IF	=	0x00c5
                    00C4    446 _IRCON_T4IF	=	0x00c4
                    00C3    447 _IRCON_T3IF	=	0x00c3
                    00C2    448 _IRCON_T2IF	=	0x00c2
                    00C1    449 _IRCON_T1IF	=	0x00c1
                    00C0    450 _IRCON_DMAIF	=	0x00c0
                    00D0    451 _P	=	0x00d0
                    00D1    452 _F1	=	0x00d1
                    00D2    453 _OV	=	0x00d2
                    00D3    454 _RS0	=	0x00d3
                    00D4    455 _RS1	=	0x00d4
                    00D5    456 _F0	=	0x00d5
                    00D6    457 _AC	=	0x00d6
                    00D7    458 _CY	=	0x00d7
                    00EC    459 _IRCON2_WDTIF	=	0x00ec
                    00EB    460 _IRCON2_P1IF	=	0x00eb
                    00EA    461 _IRCON2_UTX1IF	=	0x00ea
                    00E9    462 _IRCON2_UTX0IF	=	0x00e9
                    00E8    463 _IRCON2_P2IF	=	0x00e8
                            464 ;--------------------------------------------------------
                            465 ; overlayable register banks
                            466 ;--------------------------------------------------------
                            467 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     468 	.ds 8
                            469 ;--------------------------------------------------------
                            470 ; internal ram data
                            471 ;--------------------------------------------------------
                            472 	.area DSEG    (DATA)
                            473 ;--------------------------------------------------------
                            474 ; overlayable items in internal ram 
                            475 ;--------------------------------------------------------
                            476 	.area OSEG    (OVR,DATA)
                            477 ;--------------------------------------------------------
                            478 ; indirectly addressable internal ram data
                            479 ;--------------------------------------------------------
                            480 	.area ISEG    (DATA)
                            481 ;--------------------------------------------------------
                            482 ; absolute internal ram data
                            483 ;--------------------------------------------------------
                            484 	.area IABS    (ABS,DATA)
                            485 	.area IABS    (ABS,DATA)
                            486 ;--------------------------------------------------------
                            487 ; bit data
                            488 ;--------------------------------------------------------
                            489 	.area BSEG    (BIT)
                            490 ;--------------------------------------------------------
                            491 ; paged external ram data
                            492 ;--------------------------------------------------------
                            493 	.area PSEG    (PAG,XDATA)
                            494 ;--------------------------------------------------------
                            495 ; external ram data
                            496 ;--------------------------------------------------------
                            497 	.area XSEG    (XDATA)
                    DF02    498 _MDMCTRL0H	=	0xdf02
                    DF03    499 _MDMCTRL0L	=	0xdf03
                    DF04    500 _MDMCTRL1H	=	0xdf04
                    DF05    501 _MDMCTRL1L	=	0xdf05
                    DF06    502 _RSSIH	=	0xdf06
                    DF07    503 _RSSIL	=	0xdf07
                    DF08    504 _SYNCWORDH	=	0xdf08
                    DF09    505 _SYNCWORDL	=	0xdf09
                    DF0A    506 _TXCTRLH	=	0xdf0a
                    DF0B    507 _TXCTRLL	=	0xdf0b
                    DF0C    508 _RXCTRL0H	=	0xdf0c
                    DF0D    509 _RXCTRL0L	=	0xdf0d
                    DF0E    510 _RXCTRL1H	=	0xdf0e
                    DF0F    511 _RXCTRL1L	=	0xdf0f
                    DF10    512 _FSCTRLH	=	0xdf10
                    DF11    513 _FSCTRLL	=	0xdf11
                    DF12    514 _CSPX	=	0xdf12
                    DF13    515 _CSPY	=	0xdf13
                    DF14    516 _CSPZ	=	0xdf14
                    DF15    517 _CSPCTRL	=	0xdf15
                    DF16    518 _CSPT	=	0xdf16
                    DF17    519 _RFPWR	=	0xdf17
                    DF20    520 _FSMTCH	=	0xdf20
                    DF21    521 _FSMTCL	=	0xdf21
                    DF22    522 _MANANDH	=	0xdf22
                    DF23    523 _MANANDL	=	0xdf23
                    DF24    524 _MANORH	=	0xdf24
                    DF25    525 _MANORL	=	0xdf25
                    DF26    526 _AGCCTRLH	=	0xdf26
                    DF27    527 _AGCCTRLL	=	0xdf27
                    DF39    528 _FSMSTATE	=	0xdf39
                    DF3A    529 _ADCTSTH	=	0xdf3a
                    DF3B    530 _ADCTSTL	=	0xdf3b
                    DF3C    531 _DACTSTH	=	0xdf3c
                    DF3D    532 _DACTSTL	=	0xdf3d
                    DF43    533 _IEEE_ADDR0	=	0xdf43
                    DF44    534 _IEEE_ADDR1	=	0xdf44
                    DF45    535 _IEEE_ADDR2	=	0xdf45
                    DF46    536 _IEEE_ADDR3	=	0xdf46
                    DF47    537 _IEEE_ADDR4	=	0xdf47
                    DF48    538 _IEEE_ADDR5	=	0xdf48
                    DF49    539 _IEEE_ADDR6	=	0xdf49
                    DF4A    540 _IEEE_ADDR7	=	0xdf4a
                    DF4B    541 _PANIDH	=	0xdf4b
                    DF4C    542 _PANIDL	=	0xdf4c
                    DF4D    543 _SHORTADDRH	=	0xdf4d
                    DF4E    544 _SHORTADDRL	=	0xdf4e
                    DF4F    545 _IOCFG0	=	0xdf4f
                    DF50    546 _IOCFG1	=	0xdf50
                    DF51    547 _IOCFG2	=	0xdf51
                    DF52    548 _IOCFG3	=	0xdf52
                    DF53    549 _RXFIFOCNT	=	0xdf53
                    DF54    550 _FSMTC1	=	0xdf54
                    DF60    551 _CHVER	=	0xdf60
                    DF61    552 _CHIPID	=	0xdf61
                    DF62    553 _RFSTATUS	=	0xdf62
                    DFC1    554 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    555 _RFD_SHADOW	=	0xdfd9
                    DFF9    556 _U1BUF_SHADOW	=	0xdff9
                    DFBA    557 _ADC_SHADOW	=	0xdfba
   0000                     558 _pt:
   0000                     559 	.ds 2
   0002                     560 _is_listening:
   0002                     561 	.ds 1
   0003                     562 _encounter_memb_memb_count:
   0003                     563 	.ds 4
   0007                     564 _encounter_memb_memb_mem:
   0007                     565 	.ds 28
   0023                     566 _is_streaming:
   0023                     567 	.ds 1
   0024                     568 _is_streaming_to:
   0024                     569 	.ds 2
   0026                     570 _is_streaming_to_too:
   0026                     571 	.ds 2
   0028                     572 _stream_until:
   0028                     573 	.ds 2
   002A                     574 _cpowercycle_ctimer:
   002A                     575 	.ds 21
                            576 ;--------------------------------------------------------
                            577 ; absolute external ram data
                            578 ;--------------------------------------------------------
                            579 	.area XABS    (ABS,XDATA)
                            580 ;--------------------------------------------------------
                            581 ; external initialized ram data
                            582 ;--------------------------------------------------------
                            583 	.area XISEG   (XDATA)
   0000                     584 _cxmac_config::
   0000                     585 	.ds 8
   0008                     586 _cxmac_is_on:
   0008                     587 	.ds 1
   0009                     588 _waiting_for_packet:
   0009                     589 	.ds 1
   000A                     590 _someone_is_sending:
   000A                     591 	.ds 1
   000B                     592 _we_are_sending:
   000B                     593 	.ds 1
   000C                     594 _radio_is_on:
   000C                     595 	.ds 1
   000D                     596 _encounter_list_list:
   000D                     597 	.ds 3
   0010                     598 _encounter_list:
   0010                     599 	.ds 3
   0013                     600 _encounter_memb:
   0013                     601 	.ds 10
                            602 	.area HOME    (CODE)
                            603 	.area GSINIT0 (CODE)
                            604 	.area GSINIT1 (CODE)
                            605 	.area GSINIT2 (CODE)
                            606 	.area GSINIT3 (CODE)
                            607 	.area GSINIT4 (CODE)
                            608 	.area GSINIT5 (CODE)
                            609 	.area GSINIT  (CODE)
                            610 	.area GSFINAL (CODE)
                            611 	.area CSEG    (CODE)
                            612 ;--------------------------------------------------------
                            613 ; global & static initialisations
                            614 ;--------------------------------------------------------
                            615 	.area HOME    (CODE)
                            616 	.area GSINIT  (CODE)
                            617 	.area GSFINAL (CODE)
                            618 	.area GSINIT  (CODE)
                            619 ;--------------------------------------------------------
                            620 ; Home
                            621 ;--------------------------------------------------------
                            622 	.area HOME    (CODE)
                            623 	.area HOME    (CODE)
                            624 ;--------------------------------------------------------
                            625 ; code
                            626 ;--------------------------------------------------------
                            627 	.area CSEG    (CODE)
                            628 ;------------------------------------------------------------
                            629 ;Allocation info for local variables in function 'on'
                            630 ;------------------------------------------------------------
                            631 ;------------------------------------------------------------
                            632 ;	../../../core/net/mac/cxmac.c:225: on(void)
                            633 ;	-----------------------------------------
                            634 ;	 function on
                            635 ;	-----------------------------------------
   0000                     636 _on:
                    0002    637 	ar2 = 0x02
                    0003    638 	ar3 = 0x03
                    0004    639 	ar4 = 0x04
                    0005    640 	ar5 = 0x05
                    0006    641 	ar6 = 0x06
                    0007    642 	ar7 = 0x07
                    0000    643 	ar0 = 0x00
                    0001    644 	ar1 = 0x01
                            645 ;	../../../core/net/mac/cxmac.c:227: if(cxmac_is_on && radio_is_on == 0) {
   0000 90s00r08            646 	mov	dptr,#_cxmac_is_on
   0003 E0                  647 	movx	a,@dptr
   0004 FA                  648 	mov	r2,a
   0005 60 26               649 	jz	00104$
   0007 90s00r0C            650 	mov	dptr,#_radio_is_on
   000A E0                  651 	movx	a,@dptr
   000B FA                  652 	mov	r2,a
   000C 70 1F               653 	jnz	00104$
                            654 ;	../../../core/net/mac/cxmac.c:228: radio_is_on = 1;
   000E 90s00r0C            655 	mov	dptr,#_radio_is_on
   0011 74 01               656 	mov	a,#0x01
   0013 F0                  657 	movx	@dptr,a
                            658 ;	../../../core/net/mac/cxmac.c:229: NETSTACK_RADIO.on();
   0014 90s00r10            659 	mov	dptr,#(_cc2430_rf_driver + 0x0010)
   0017 E4                  660 	clr	a
   0018 93                  661 	movc	a,@a+dptr
   0019 FA                  662 	mov	r2,a
   001A A3                  663 	inc	dptr
   001B E4                  664 	clr	a
   001C 93                  665 	movc	a,@a+dptr
   001D FB                  666 	mov	r3,a
   001E C0 02               667 	push	ar2
   0020 C0 03               668 	push	ar3
   0022 8A 82               669 	mov	dpl,r2
   0024 8B 83               670 	mov	dph,r3
   0026 12s00r00            671 	lcall	__sdcc_call_dptr
   0029 D0 03               672 	pop	ar3
   002B D0 02               673 	pop	ar2
   002D                     674 00104$:
   002D 22                  675 	ret
                            676 ;------------------------------------------------------------
                            677 ;Allocation info for local variables in function 'off'
                            678 ;------------------------------------------------------------
                            679 ;------------------------------------------------------------
                            680 ;	../../../core/net/mac/cxmac.c:235: off(void)
                            681 ;	-----------------------------------------
                            682 ;	 function off
                            683 ;	-----------------------------------------
   002E                     684 _off:
                            685 ;	../../../core/net/mac/cxmac.c:237: if(cxmac_is_on && radio_is_on != 0 && is_listening == 0 &&
   002E 90s00r08            686 	mov	dptr,#_cxmac_is_on
   0031 E0                  687 	movx	a,@dptr
   0032 FA                  688 	mov	r2,a
   0033 60 33               689 	jz	00106$
   0035 90s00r0C            690 	mov	dptr,#_radio_is_on
   0038 E0                  691 	movx	a,@dptr
   0039 FA                  692 	mov	r2,a
   003A 60 2C               693 	jz	00106$
   003C 90s00r02            694 	mov	dptr,#_is_listening
   003F E0                  695 	movx	a,@dptr
   0040 FA                  696 	mov	r2,a
   0041 70 25               697 	jnz	00106$
                            698 ;	../../../core/net/mac/cxmac.c:238: is_streaming == 0) {
   0043 90s00r23            699 	mov	dptr,#_is_streaming
   0046 E0                  700 	movx	a,@dptr
   0047 FA                  701 	mov	r2,a
   0048 70 1E               702 	jnz	00106$
                            703 ;	../../../core/net/mac/cxmac.c:239: radio_is_on = 0;
   004A 90s00r0C            704 	mov	dptr,#_radio_is_on
   004D E4                  705 	clr	a
   004E F0                  706 	movx	@dptr,a
                            707 ;	../../../core/net/mac/cxmac.c:240: NETSTACK_RADIO.off();
   004F 90s00r12            708 	mov	dptr,#(_cc2430_rf_driver + 0x0012)
   0052 E4                  709 	clr	a
   0053 93                  710 	movc	a,@a+dptr
   0054 FA                  711 	mov	r2,a
   0055 A3                  712 	inc	dptr
   0056 E4                  713 	clr	a
   0057 93                  714 	movc	a,@a+dptr
   0058 FB                  715 	mov	r3,a
   0059 C0 02               716 	push	ar2
   005B C0 03               717 	push	ar3
   005D 8A 82               718 	mov	dpl,r2
   005F 8B 83               719 	mov	dph,r3
   0061 12s00r00            720 	lcall	__sdcc_call_dptr
   0064 D0 03               721 	pop	ar3
   0066 D0 02               722 	pop	ar2
   0068                     723 00106$:
   0068 22                  724 	ret
                            725 ;------------------------------------------------------------
                            726 ;Allocation info for local variables in function 'powercycle_turn_radio_off'
                            727 ;------------------------------------------------------------
                            728 ;------------------------------------------------------------
                            729 ;	../../../core/net/mac/cxmac.c:246: powercycle_turn_radio_off(void)
                            730 ;	-----------------------------------------
                            731 ;	 function powercycle_turn_radio_off
                            732 ;	-----------------------------------------
   0069                     733 _powercycle_turn_radio_off:
                            734 ;	../../../core/net/mac/cxmac.c:248: if(we_are_sending == 0 &&
   0069 90s00r0B            735 	mov	dptr,#_we_are_sending
   006C E0                  736 	movx	a,@dptr
   006D FA                  737 	mov	r2,a
   006E 70 0A               738 	jnz	00104$
                            739 ;	../../../core/net/mac/cxmac.c:249: waiting_for_packet == 0) {
   0070 90s00r09            740 	mov	dptr,#_waiting_for_packet
   0073 E0                  741 	movx	a,@dptr
   0074 FA                  742 	mov	r2,a
   0075 70 03               743 	jnz	00104$
                            744 ;	../../../core/net/mac/cxmac.c:250: off();
   0077 02s00r2E            745 	ljmp	_off
   007A                     746 00104$:
   007A 22                  747 	ret
                            748 ;------------------------------------------------------------
                            749 ;Allocation info for local variables in function 'powercycle_turn_radio_on'
                            750 ;------------------------------------------------------------
                            751 ;------------------------------------------------------------
                            752 ;	../../../core/net/mac/cxmac.c:257: powercycle_turn_radio_on(void)
                            753 ;	-----------------------------------------
                            754 ;	 function powercycle_turn_radio_on
                            755 ;	-----------------------------------------
   007B                     756 _powercycle_turn_radio_on:
                            757 ;	../../../core/net/mac/cxmac.c:259: if(we_are_sending == 0 &&
   007B 90s00r0B            758 	mov	dptr,#_we_are_sending
   007E E0                  759 	movx	a,@dptr
   007F FA                  760 	mov	r2,a
   0080 70 0A               761 	jnz	00104$
                            762 ;	../../../core/net/mac/cxmac.c:260: waiting_for_packet == 0) {
   0082 90s00r09            763 	mov	dptr,#_waiting_for_packet
   0085 E0                  764 	movx	a,@dptr
   0086 FA                  765 	mov	r2,a
   0087 70 03               766 	jnz	00104$
                            767 ;	../../../core/net/mac/cxmac.c:261: on();
   0089 02s00r00            768 	ljmp	_on
   008C                     769 00104$:
   008C 22                  770 	ret
                            771 ;------------------------------------------------------------
                            772 ;Allocation info for local variables in function 'cschedule_powercycle'
                            773 ;------------------------------------------------------------
                            774 ;time                      Allocated to registers r2 r3 
                            775 ;------------------------------------------------------------
                            776 ;	../../../core/net/mac/cxmac.c:269: cschedule_powercycle(clock_time_t time)
                            777 ;	-----------------------------------------
                            778 ;	 function cschedule_powercycle
                            779 ;	-----------------------------------------
   008D                     780 _cschedule_powercycle:
   008D AA 82               781 	mov	r2,dpl
   008F AB 83               782 	mov	r3,dph
                            783 ;	../../../core/net/mac/cxmac.c:272: if(cxmac_is_on) {
   0091 90s00r08            784 	mov	dptr,#_cxmac_is_on
   0094 E0                  785 	movx	a,@dptr
   0095 FC                  786 	mov	r4,a
   0096 60 29               787 	jz	00105$
                            788 ;	../../../core/net/mac/cxmac.c:273: if(time == 0) {
   0098 EA                  789 	mov	a,r2
   0099 4B                  790 	orl	a,r3
                            791 ;	../../../core/net/mac/cxmac.c:274: time = 1;
   009A 70 03               792 	jnz	00102$
   009C 7A 01               793 	mov	r2,#0x01
   009E FB                  794 	mov	r3,a
   009F                     795 00102$:
                            796 ;	../../../core/net/mac/cxmac.c:276: ctimer_set(&cpowercycle_ctimer, time,
   009F E4                  797 	clr	a
   00A0 C0 E0               798 	push	acc
   00A2 C0 E0               799 	push	acc
   00A4 C0 E0               800 	push	acc
   00A6 74rC2               801 	mov	a,#_cpowercycle
   00A8 C0 E0               802 	push	acc
   00AA 74s00               803 	mov	a,#(_cpowercycle >> 8)
   00AC C0 E0               804 	push	acc
   00AE C0 02               805 	push	ar2
   00B0 C0 03               806 	push	ar3
   00B2 90s00r2A            807 	mov	dptr,#_cpowercycle_ctimer
   00B5 75 F0 00            808 	mov	b,#0x00
   00B8 12s00r00            809 	lcall	_ctimer_set
   00BB E5 81               810 	mov	a,sp
   00BD 24 F9               811 	add	a,#0xf9
   00BF F5 81               812 	mov	sp,a
   00C1                     813 00105$:
   00C1 22                  814 	ret
                            815 ;------------------------------------------------------------
                            816 ;Allocation info for local variables in function 'cpowercycle'
                            817 ;------------------------------------------------------------
                            818 ;ptr                       Allocated to registers 
                            819 ;PT_YIELD_FLAG             Allocated to registers r2 
                            820 ;------------------------------------------------------------
                            821 ;	../../../core/net/mac/cxmac.c:282: cpowercycle(void *ptr)
                            822 ;	-----------------------------------------
                            823 ;	 function cpowercycle
                            824 ;	-----------------------------------------
   00C2                     825 _cpowercycle:
                            826 ;	../../../core/net/mac/cxmac.c:284: if(is_streaming) {
   00C2 90s00r23            827 	mov	dptr,#_is_streaming
   00C5 E0                  828 	movx	a,@dptr
   00C6 FA                  829 	mov	r2,a
   00C7 60 5B               830 	jz	00104$
                            831 ;	../../../core/net/mac/cxmac.c:285: if(!RTIMER_CLOCK_LT(RTIMER_NOW(), stream_until)) {
   00C9 AA E2               832 	mov	r2,_T1CNTL
   00CB 7B 00               833 	mov	r3,#0x00
   00CD AD E3               834 	mov	r5,_T1CNTH
   00CF 7C 00               835 	mov	r4,#0x00
   00D1 EC                  836 	mov	a,r4
   00D2 2A                  837 	add	a,r2
   00D3 FA                  838 	mov	r2,a
   00D4 ED                  839 	mov	a,r5
   00D5 3B                  840 	addc	a,r3
   00D6 FB                  841 	mov	r3,a
   00D7 90s00r28            842 	mov	dptr,#_stream_until
   00DA E0                  843 	movx	a,@dptr
   00DB FC                  844 	mov	r4,a
   00DC A3                  845 	inc	dptr
   00DD E0                  846 	movx	a,@dptr
   00DE FD                  847 	mov	r5,a
   00DF EA                  848 	mov	a,r2
   00E0 C3                  849 	clr	c
   00E1 9C                  850 	subb	a,r4
   00E2 FA                  851 	mov	r2,a
   00E3 EB                  852 	mov	a,r3
   00E4 9D                  853 	subb	a,r5
   00E5 FB                  854 	mov	r3,a
   00E6 20 E7 3B            855 	jb	acc.7,00104$
                            856 ;	../../../core/net/mac/cxmac.c:286: is_streaming = 0;
   00E9 90s00r23            857 	mov	dptr,#_is_streaming
   00EC E4                  858 	clr	a
   00ED F0                  859 	movx	@dptr,a
                            860 ;	../../../core/net/mac/cxmac.c:287: rimeaddr_copy(&is_streaming_to, &rimeaddr_null);
   00EE 74r00               861 	mov	a,#_rimeaddr_null
   00F0 C0 E0               862 	push	acc
   00F2 74s00               863 	mov	a,#(_rimeaddr_null >> 8)
   00F4 C0 E0               864 	push	acc
   00F6 74 80               865 	mov	a,#0x80
   00F8 C0 E0               866 	push	acc
   00FA 90s00r24            867 	mov	dptr,#_is_streaming_to
   00FD 75 F0 00            868 	mov	b,#0x00
   0100 12s00r00            869 	lcall	_rimeaddr_copy
   0103 15 81               870 	dec	sp
   0105 15 81               871 	dec	sp
   0107 15 81               872 	dec	sp
                            873 ;	../../../core/net/mac/cxmac.c:288: rimeaddr_copy(&is_streaming_to_too, &rimeaddr_null);
   0109 74r00               874 	mov	a,#_rimeaddr_null
   010B C0 E0               875 	push	acc
   010D 74s00               876 	mov	a,#(_rimeaddr_null >> 8)
   010F C0 E0               877 	push	acc
   0111 74 80               878 	mov	a,#0x80
   0113 C0 E0               879 	push	acc
   0115 90s00r26            880 	mov	dptr,#_is_streaming_to_too
   0118 75 F0 00            881 	mov	b,#0x00
   011B 12s00r00            882 	lcall	_rimeaddr_copy
   011E 15 81               883 	dec	sp
   0120 15 81               884 	dec	sp
   0122 15 81               885 	dec	sp
   0124                     886 00104$:
                            887 ;	../../../core/net/mac/cxmac.c:292: PT_BEGIN(&pt);
   0124 7A 01               888 	mov	r2,#0x01
   0126 90s00r00            889 	mov	dptr,#_pt
   0129 E0                  890 	movx	a,@dptr
   012A FB                  891 	mov	r3,a
   012B A3                  892 	inc	dptr
   012C E0                  893 	movx	a,@dptr
   012D FC                  894 	mov	r4,a
   012E BB 00 05            895 	cjne	r3,#0x00,00146$
   0131 BC 00 02            896 	cjne	r4,#0x00,00146$
   0134 80 13               897 	sjmp	00127$
   0136                     898 00146$:
   0136 BB 2F 05            899 	cjne	r3,#0x2F,00147$
   0139 BC 01 02            900 	cjne	r4,#0x01,00147$
   013C 80 30               901 	sjmp	00108$
   013E                     902 00147$:
   013E BB 3E 05            903 	cjne	r3,#0x3E,00148$
   0141 BC 01 02            904 	cjne	r4,#0x01,00148$
   0144 80 71               905 	sjmp	00118$
   0146                     906 00148$:
   0146 02s01rBE            907 	ljmp	00129$
                            908 ;	../../../core/net/mac/cxmac.c:294: while(1) {
   0149                     909 00127$:
                            910 ;	../../../core/net/mac/cxmac.c:296: if(someone_is_sending > 0) {
   0149 90s00r0A            911 	mov	dptr,#_someone_is_sending
   014C E0                  912 	movx	a,@dptr
   014D FB                  913 	mov	r3,a
   014E 60 09               914 	jz	00107$
                            915 ;	../../../core/net/mac/cxmac.c:297: someone_is_sending--;
   0150 90s00r0A            916 	mov	dptr,#_someone_is_sending
   0153 E0                  917 	movx	a,@dptr
   0154 14                  918 	dec	a
   0155 90s00r0A            919 	mov	dptr,#_someone_is_sending
   0158 F0                  920 	movx	@dptr,a
   0159                     921 00107$:
                            922 ;	../../../core/net/mac/cxmac.c:301: powercycle_turn_radio_on();
   0159 12s00r7B            923 	lcall	_powercycle_turn_radio_on
                            924 ;	../../../core/net/mac/cxmac.c:302: CSCHEDULE_POWERCYCLE(DEFAULT_ON_TIME);
   015C 90 00 00            925 	mov	dptr,#0x0000
   015F 12s00r8D            926 	lcall	_cschedule_powercycle
                            927 ;	../../../core/net/mac/cxmac.c:303: PT_YIELD(&pt);
   0162 7A 00               928 	mov	r2,#0x00
   0164 90s00r00            929 	mov	dptr,#_pt
   0167 74 2F               930 	mov	a,#0x2F
   0169 F0                  931 	movx	@dptr,a
   016A A3                  932 	inc	dptr
   016B 74 01               933 	mov	a,#0x01
   016D F0                  934 	movx	@dptr,a
   016E                     935 00108$:
   016E EA                  936 	mov	a,r2
   016F 70 04               937 	jnz	00112$
   0171 75 82 01            938 	mov	dpl,#0x01
   0174 22                  939 	ret
   0175                     940 00112$:
                            941 ;	../../../core/net/mac/cxmac.c:305: if(cxmac_config.off_time > 0) {
   0175 90s00r02            942 	mov	dptr,#(_cxmac_config + 0x0002)
   0178 E0                  943 	movx	a,@dptr
   0179 FB                  944 	mov	r3,a
   017A A3                  945 	inc	dptr
   017B E0                  946 	movx	a,@dptr
   017C FC                  947 	mov	r4,a
   017D 4B                  948 	orl	a,r3
   017E 60 C9               949 	jz	00127$
                            950 ;	../../../core/net/mac/cxmac.c:306: powercycle_turn_radio_off();
   0180 12s00r69            951 	lcall	_powercycle_turn_radio_off
                            952 ;	../../../core/net/mac/cxmac.c:307: if(waiting_for_packet != 0) {
   0183 90s00r09            953 	mov	dptr,#_waiting_for_packet
   0186 E0                  954 	movx	a,@dptr
   0187 FB                  955 	mov	r3,a
   0188 60 1B               956 	jz	00117$
                            957 ;	../../../core/net/mac/cxmac.c:308: waiting_for_packet++;
   018A 90s00r09            958 	mov	dptr,#_waiting_for_packet
   018D E0                  959 	movx	a,@dptr
   018E 24 01               960 	add	a,#0x01
   0190 F0                  961 	movx	@dptr,a
                            962 ;	../../../core/net/mac/cxmac.c:309: if(waiting_for_packet > 2) {
   0191 90s00r09            963 	mov	dptr,#_waiting_for_packet
   0194 E0                  964 	movx	a,@dptr
   0195 FB                  965 	mov	r3,a
   0196 74 02               966 	mov	a,#0x02
   0198 B5 03 00            967 	cjne	a,ar3,00153$
   019B                     968 00153$:
   019B 50 08               969 	jnc	00117$
                            970 ;	../../../core/net/mac/cxmac.c:313: waiting_for_packet = 0;
   019D 90s00r09            971 	mov	dptr,#_waiting_for_packet
   01A0 E4                  972 	clr	a
   01A1 F0                  973 	movx	@dptr,a
                            974 ;	../../../core/net/mac/cxmac.c:314: powercycle_turn_radio_off();
   01A2 12s00r69            975 	lcall	_powercycle_turn_radio_off
   01A5                     976 00117$:
                            977 ;	../../../core/net/mac/cxmac.c:317: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
   01A5 90 00 1F            978 	mov	dptr,#0x001F
   01A8 12s00r8D            979 	lcall	_cschedule_powercycle
                            980 ;	../../../core/net/mac/cxmac.c:318: PT_YIELD(&pt);
   01AB 7A 00               981 	mov	r2,#0x00
   01AD 90s00r00            982 	mov	dptr,#_pt
   01B0 74 3E               983 	mov	a,#0x3E
   01B2 F0                  984 	movx	@dptr,a
   01B3 A3                  985 	inc	dptr
   01B4 74 01               986 	mov	a,#0x01
   01B6 F0                  987 	movx	@dptr,a
   01B7                     988 00118$:
   01B7 EA                  989 	mov	a,r2
   01B8 70 8F               990 	jnz	00127$
   01BA 75 82 01            991 	mov	dpl,#0x01
                            992 ;	../../../core/net/mac/cxmac.c:322: PT_END(&pt);
   01BD 22                  993 	ret
   01BE                     994 00129$:
   01BE 90s00r00            995 	mov	dptr,#_pt
   01C1 E4                  996 	clr	a
   01C2 F0                  997 	movx	@dptr,a
   01C3 A3                  998 	inc	dptr
   01C4 F0                  999 	movx	@dptr,a
   01C5 75 82 03           1000 	mov	dpl,#0x03
   01C8 22                 1001 	ret
                           1002 ;------------------------------------------------------------
                           1003 ;Allocation info for local variables in function 'register_encounter'
                           1004 ;------------------------------------------------------------
                           1005 ;time                      Allocated to stack - offset -4
                           1006 ;neighbor                  Allocated to stack - offset 1
                           1007 ;e                         Allocated to registers r5 r6 r7 
                           1008 ;------------------------------------------------------------
                           1009 ;	../../../core/net/mac/cxmac.c:387: register_encounter(const rimeaddr_t *neighbor, rtimer_clock_t time)
                           1010 ;	-----------------------------------------
                           1011 ;	 function register_encounter
                           1012 ;	-----------------------------------------
   01C9                    1013 _register_encounter:
   01C9 C0*00              1014 	push	_bp
   01CB 85 81*00           1015 	mov	_bp,sp
   01CE C0 82              1016 	push	dpl
   01D0 C0 83              1017 	push	dph
   01D2 C0 F0              1018 	push	b
                           1019 ;	../../../core/net/mac/cxmac.c:392: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   01D4 90s00r10           1020 	mov	dptr,#_encounter_list
   01D7 E0                 1021 	movx	a,@dptr
   01D8 FD                 1022 	mov	r5,a
   01D9 A3                 1023 	inc	dptr
   01DA E0                 1024 	movx	a,@dptr
   01DB FE                 1025 	mov	r6,a
   01DC A3                 1026 	inc	dptr
   01DD E0                 1027 	movx	a,@dptr
   01DE FF                 1028 	mov	r7,a
   01DF 8D 82              1029 	mov	dpl,r5
   01E1 8E 83              1030 	mov	dph,r6
   01E3 8F F0              1031 	mov	b,r7
   01E5 12s00r00           1032 	lcall	_list_head
   01E8 AD 82              1033 	mov	r5,dpl
   01EA AE 83              1034 	mov	r6,dph
   01EC AF F0              1035 	mov	r7,b
   01EE                    1036 00103$:
   01EE ED                 1037 	mov	a,r5
   01EF 4E                 1038 	orl	a,r6
   01F0 4F                 1039 	orl	a,r7
   01F1 60 6E              1040 	jz	00106$
                           1041 ;	../../../core/net/mac/cxmac.c:393: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
   01F3 74 03              1042 	mov	a,#0x03
   01F5 2D                 1043 	add	a,r5
   01F6 FA                 1044 	mov	r2,a
   01F7 E4                 1045 	clr	a
   01F8 3E                 1046 	addc	a,r6
   01F9 FB                 1047 	mov	r3,a
   01FA 8F 04              1048 	mov	ar4,r7
   01FC C0 05              1049 	push	ar5
   01FE C0 06              1050 	push	ar6
   0200 C0 07              1051 	push	ar7
   0202 C0 02              1052 	push	ar2
   0204 C0 03              1053 	push	ar3
   0206 C0 04              1054 	push	ar4
   0208 A8*00              1055 	mov	r0,_bp
   020A 08                 1056 	inc	r0
   020B 86 82              1057 	mov	dpl,@r0
   020D 08                 1058 	inc	r0
   020E 86 83              1059 	mov	dph,@r0
   0210 08                 1060 	inc	r0
   0211 86 F0              1061 	mov	b,@r0
   0213 12s00r00           1062 	lcall	_rimeaddr_cmp
   0216 AA 82              1063 	mov	r2,dpl
   0218 AB 83              1064 	mov	r3,dph
   021A 15 81              1065 	dec	sp
   021C 15 81              1066 	dec	sp
   021E 15 81              1067 	dec	sp
   0220 D0 07              1068 	pop	ar7
   0222 D0 06              1069 	pop	ar6
   0224 D0 05              1070 	pop	ar5
   0226 EA                 1071 	mov	a,r2
   0227 4B                 1072 	orl	a,r3
   0228 60 20              1073 	jz	00105$
                           1074 ;	../../../core/net/mac/cxmac.c:394: e->time = time;
   022A 74 05              1075 	mov	a,#0x05
   022C 2D                 1076 	add	a,r5
   022D FA                 1077 	mov	r2,a
   022E E4                 1078 	clr	a
   022F 3E                 1079 	addc	a,r6
   0230 FB                 1080 	mov	r3,a
   0231 8F 04              1081 	mov	ar4,r7
   0233 8A 82              1082 	mov	dpl,r2
   0235 8B 83              1083 	mov	dph,r3
   0237 8C F0              1084 	mov	b,r4
   0239 E5*00              1085 	mov	a,_bp
   023B 24 FC              1086 	add	a,#0xfc
   023D F8                 1087 	mov	r0,a
   023E E6                 1088 	mov	a,@r0
   023F 12s00r00           1089 	lcall	__gptrput
   0242 A3                 1090 	inc	dptr
   0243 08                 1091 	inc	r0
   0244 E6                 1092 	mov	a,@r0
   0245 12s00r00           1093 	lcall	__gptrput
                           1094 ;	../../../core/net/mac/cxmac.c:395: break;
   0248 80 17              1095 	sjmp	00106$
   024A                    1096 00105$:
                           1097 ;	../../../core/net/mac/cxmac.c:392: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   024A 8D 82              1098 	mov	dpl,r5
   024C 8E 83              1099 	mov	dph,r6
   024E 8F F0              1100 	mov	b,r7
   0250 12s00r00           1101 	lcall	_list_item_next
   0253 AA 82              1102 	mov	r2,dpl
   0255 AB 83              1103 	mov	r3,dph
   0257 AC F0              1104 	mov	r4,b
   0259 8A 05              1105 	mov	ar5,r2
   025B 8B 06              1106 	mov	ar6,r3
   025D 8C 07              1107 	mov	ar7,r4
   025F 80 8D              1108 	sjmp	00103$
   0261                    1109 00106$:
                           1110 ;	../../../core/net/mac/cxmac.c:399: if(e == NULL) {
   0261 ED                 1111 	mov	a,r5
   0262 4E                 1112 	orl	a,r6
   0263 4F                 1113 	orl	a,r7
   0264 60 03              1114 	jz	00120$
   0266 02s02rF5           1115 	ljmp	00111$
   0269                    1116 00120$:
                           1117 ;	../../../core/net/mac/cxmac.c:400: e = memb_alloc(&encounter_memb);
   0269 90s00r13           1118 	mov	dptr,#_encounter_memb
   026C 75 F0 00           1119 	mov	b,#0x00
   026F 12s00r00           1120 	lcall	_memb_alloc
   0272 AA 82              1121 	mov	r2,dpl
   0274 AB 83              1122 	mov	r3,dph
   0276 AC F0              1123 	mov	r4,b
   0278 8A 05              1124 	mov	ar5,r2
   027A 8B 06              1125 	mov	ar6,r3
   027C 8C 07              1126 	mov	ar7,r4
                           1127 ;	../../../core/net/mac/cxmac.c:401: if(e == NULL) {
   027E ED                 1128 	mov	a,r5
   027F 4E                 1129 	orl	a,r6
   0280 4F                 1130 	orl	a,r7
   0281 70 02              1131 	jnz	00108$
                           1132 ;	../../../core/net/mac/cxmac.c:403: return;
   0283 80 70              1133 	sjmp	00111$
   0285                    1134 00108$:
                           1135 ;	../../../core/net/mac/cxmac.c:405: rimeaddr_copy(&e->neighbor, neighbor);
   0285 74 03              1136 	mov	a,#0x03
   0287 2D                 1137 	add	a,r5
   0288 FA                 1138 	mov	r2,a
   0289 E4                 1139 	clr	a
   028A 3E                 1140 	addc	a,r6
   028B FB                 1141 	mov	r3,a
   028C 8F 04              1142 	mov	ar4,r7
   028E C0 05              1143 	push	ar5
   0290 C0 06              1144 	push	ar6
   0292 C0 07              1145 	push	ar7
   0294 A8*00              1146 	mov	r0,_bp
   0296 08                 1147 	inc	r0
   0297 E6                 1148 	mov	a,@r0
   0298 C0 E0              1149 	push	acc
   029A 08                 1150 	inc	r0
   029B E6                 1151 	mov	a,@r0
   029C C0 E0              1152 	push	acc
   029E 08                 1153 	inc	r0
   029F E6                 1154 	mov	a,@r0
   02A0 C0 E0              1155 	push	acc
   02A2 8A 82              1156 	mov	dpl,r2
   02A4 8B 83              1157 	mov	dph,r3
   02A6 8C F0              1158 	mov	b,r4
   02A8 12s00r00           1159 	lcall	_rimeaddr_copy
   02AB 15 81              1160 	dec	sp
   02AD 15 81              1161 	dec	sp
   02AF 15 81              1162 	dec	sp
   02B1 D0 07              1163 	pop	ar7
   02B3 D0 06              1164 	pop	ar6
   02B5 D0 05              1165 	pop	ar5
                           1166 ;	../../../core/net/mac/cxmac.c:406: e->time = time;
   02B7 74 05              1167 	mov	a,#0x05
   02B9 2D                 1168 	add	a,r5
   02BA FA                 1169 	mov	r2,a
   02BB E4                 1170 	clr	a
   02BC 3E                 1171 	addc	a,r6
   02BD FB                 1172 	mov	r3,a
   02BE 8F 04              1173 	mov	ar4,r7
   02C0 8A 82              1174 	mov	dpl,r2
   02C2 8B 83              1175 	mov	dph,r3
   02C4 8C F0              1176 	mov	b,r4
   02C6 E5*00              1177 	mov	a,_bp
   02C8 24 FC              1178 	add	a,#0xfc
   02CA F8                 1179 	mov	r0,a
   02CB E6                 1180 	mov	a,@r0
   02CC 12s00r00           1181 	lcall	__gptrput
   02CF A3                 1182 	inc	dptr
   02D0 08                 1183 	inc	r0
   02D1 E6                 1184 	mov	a,@r0
   02D2 12s00r00           1185 	lcall	__gptrput
                           1186 ;	../../../core/net/mac/cxmac.c:407: list_add(encounter_list, e);
   02D5 90s00r10           1187 	mov	dptr,#_encounter_list
   02D8 E0                 1188 	movx	a,@dptr
   02D9 FA                 1189 	mov	r2,a
   02DA A3                 1190 	inc	dptr
   02DB E0                 1191 	movx	a,@dptr
   02DC FB                 1192 	mov	r3,a
   02DD A3                 1193 	inc	dptr
   02DE E0                 1194 	movx	a,@dptr
   02DF FC                 1195 	mov	r4,a
   02E0 C0 05              1196 	push	ar5
   02E2 C0 06              1197 	push	ar6
   02E4 C0 07              1198 	push	ar7
   02E6 8A 82              1199 	mov	dpl,r2
   02E8 8B 83              1200 	mov	dph,r3
   02EA 8C F0              1201 	mov	b,r4
   02EC 12s00r00           1202 	lcall	_list_add
   02EF 15 81              1203 	dec	sp
   02F1 15 81              1204 	dec	sp
   02F3 15 81              1205 	dec	sp
   02F5                    1206 00111$:
   02F5 85*00 81           1207 	mov	sp,_bp
   02F8 D0*00              1208 	pop	_bp
   02FA 22                 1209 	ret
                           1210 ;------------------------------------------------------------
                           1211 ;Allocation info for local variables in function 'send_packet'
                           1212 ;------------------------------------------------------------
                           1213 ;t0                        Allocated to stack - offset 1
                           1214 ;t                         Allocated to stack - offset 3
                           1215 ;encounter_time            Allocated to stack - offset 5
                           1216 ;strobes                   Allocated to stack - offset 7
                           1217 ;hdr                       Allocated to registers r3 r6 r7 
                           1218 ;got_strobe_ack            Allocated to stack - offset 9
                           1219 ;strobe                    Allocated to stack - offset 11
                           1220 ;strobe_len                Allocated to stack - offset 61
                           1221 ;len                       Allocated to stack - offset 63
                           1222 ;is_broadcast              Allocated to stack - offset 65
                           1223 ;is_reliable               Allocated to registers 
                           1224 ;e                         Allocated to stack - offset 67
                           1225 ;packet                    Allocated to stack - offset 70
                           1226 ;is_already_streaming      Allocated to stack - offset 73
                           1227 ;collisions                Allocated to stack - offset 75
                           1228 ;neighbor                  Allocated to registers r2 r3 r4 
                           1229 ;wait                      Allocated to registers 
                           1230 ;now                       Allocated to registers r5 r6 
                           1231 ;expected                  Allocated to registers r7 r6 
                           1232 ;now                       Allocated to stack - offset 76
                           1233 ;sloc0                     Allocated to stack - offset 78
                           1234 ;sloc1                     Allocated to stack - offset 79
                           1235 ;------------------------------------------------------------
                           1236 ;	../../../core/net/mac/cxmac.c:413: send_packet(void)
                           1237 ;	-----------------------------------------
                           1238 ;	 function send_packet
                           1239 ;	-----------------------------------------
   02FB                    1240 _send_packet:
   02FB C0*00              1241 	push	_bp
   02FD E5 81              1242 	mov	a,sp
   02FF F5*00              1243 	mov	_bp,a
   0301 24 50              1244 	add	a,#0x50
   0303 F5 81              1245 	mov	sp,a
                           1246 ;	../../../core/net/mac/cxmac.c:417: rtimer_clock_t encounter_time = 0;
   0305 E5*00              1247 	mov	a,_bp
   0307 24 05              1248 	add	a,#0x05
   0309 F8                 1249 	mov	r0,a
   030A E4                 1250 	clr	a
   030B F6                 1251 	mov	@r0,a
   030C 08                 1252 	inc	r0
   030D F6                 1253 	mov	@r0,a
                           1254 ;	../../../core/net/mac/cxmac.c:420: int got_strobe_ack = 0;
   030E E5*00              1255 	mov	a,_bp
   0310 24 09              1256 	add	a,#0x09
   0312 F8                 1257 	mov	r0,a
   0313 E4                 1258 	clr	a
   0314 F6                 1259 	mov	@r0,a
   0315 08                 1260 	inc	r0
   0316 F6                 1261 	mov	@r0,a
                           1262 ;	../../../core/net/mac/cxmac.c:423: int is_broadcast = 0;
   0317 E5*00              1263 	mov	a,_bp
   0319 24 41              1264 	add	a,#0x41
   031B F8                 1265 	mov	r0,a
   031C E4                 1266 	clr	a
   031D F6                 1267 	mov	@r0,a
   031E 08                 1268 	inc	r0
   031F F6                 1269 	mov	@r0,a
                           1270 ;	../../../core/net/mac/cxmac.c:427: int is_already_streaming = 0;
   0320 E5*00              1271 	mov	a,_bp
   0322 24 49              1272 	add	a,#0x49
   0324 F8                 1273 	mov	r0,a
   0325 E4                 1274 	clr	a
   0326 F6                 1275 	mov	@r0,a
   0327 08                 1276 	inc	r0
   0328 F6                 1277 	mov	@r0,a
                           1278 ;	../../../core/net/mac/cxmac.c:432: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
   0329 74r00              1279 	mov	a,#_rimeaddr_node_addr
   032B C0 E0              1280 	push	acc
   032D 74s00              1281 	mov	a,#(_rimeaddr_node_addr >> 8)
   032F C0 E0              1282 	push	acc
   0331 E4                 1283 	clr	a
   0332 C0 E0              1284 	push	acc
   0334 75 82 18           1285 	mov	dpl,#0x18
   0337 12s00r00           1286 	lcall	_packetbuf_set_addr
   033A 15 81              1287 	dec	sp
   033C 15 81              1288 	dec	sp
   033E 15 81              1289 	dec	sp
                           1290 ;	../../../core/net/mac/cxmac.c:433: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), &rimeaddr_null)) {
   0340 75 82 19           1291 	mov	dpl,#0x19
   0343 12s00r00           1292 	lcall	_packetbuf_addr
   0346 AA 82              1293 	mov	r2,dpl
   0348 AB 83              1294 	mov	r3,dph
   034A AE F0              1295 	mov	r6,b
   034C 74r00              1296 	mov	a,#_rimeaddr_null
   034E C0 E0              1297 	push	acc
   0350 74s00              1298 	mov	a,#(_rimeaddr_null >> 8)
   0352 C0 E0              1299 	push	acc
   0354 74 80              1300 	mov	a,#0x80
   0356 C0 E0              1301 	push	acc
   0358 8A 82              1302 	mov	dpl,r2
   035A 8B 83              1303 	mov	dph,r3
   035C 8E F0              1304 	mov	b,r6
   035E 12s00r00           1305 	lcall	_rimeaddr_cmp
   0361 AA 82              1306 	mov	r2,dpl
   0363 AB 83              1307 	mov	r3,dph
   0365 15 81              1308 	dec	sp
   0367 15 81              1309 	dec	sp
   0369 15 81              1310 	dec	sp
   036B EA                 1311 	mov	a,r2
   036C 4B                 1312 	orl	a,r3
   036D 60 0A              1313 	jz	00102$
                           1314 ;	../../../core/net/mac/cxmac.c:434: is_broadcast = 1;
   036F E5*00              1315 	mov	a,_bp
   0371 24 41              1316 	add	a,#0x41
   0373 F8                 1317 	mov	r0,a
   0374 76 01              1318 	mov	@r0,#0x01
   0376 08                 1319 	inc	r0
   0377 76 00              1320 	mov	@r0,#0x00
   0379                    1321 00102$:
                           1322 ;	../../../core/net/mac/cxmac.c:453: is_reliable = packetbuf_attr(PACKETBUF_ATTR_RELIABLE) ||
   0379 75 82 0C           1323 	mov	dpl,#0x0C
   037C 12s00r00           1324 	lcall	_packetbuf_attr
   037F E5 82              1325 	mov	a,dpl
   0381 85 83 F0           1326 	mov	b,dph
   0384 45 F0              1327 	orl	a,b
   0386 70 0B              1328 	jnz	00184$
                           1329 ;	../../../core/net/mac/cxmac.c:454: packetbuf_attr(PACKETBUF_ATTR_ERELIABLE);
   0388 75 82 17           1330 	mov	dpl,#0x17
   038B 12s00r00           1331 	lcall	_packetbuf_attr
   038E E5 82              1332 	mov	a,dpl
   0390 85 83 F0           1333 	mov	b,dph
   0393                    1334 00184$:
                           1335 ;	../../../core/net/mac/cxmac.c:455: len = NETSTACK_FRAMER.create();
   0393 90s00r00           1336 	mov	dptr,#_framer_nullmac
   0396 E4                 1337 	clr	a
   0397 93                 1338 	movc	a,@a+dptr
   0398 FA                 1339 	mov	r2,a
   0399 A3                 1340 	inc	dptr
   039A E4                 1341 	clr	a
   039B 93                 1342 	movc	a,@a+dptr
   039C FB                 1343 	mov	r3,a
   039D 8A 82              1344 	mov	dpl,r2
   039F 8B 83              1345 	mov	dph,r3
   03A1 12s00r00           1346 	lcall	__sdcc_call_dptr
   03A4 AA 82              1347 	mov	r2,dpl
   03A6 AB 83              1348 	mov	r3,dph
   03A8 E5*00              1349 	mov	a,_bp
   03AA 24 3F              1350 	add	a,#0x3f
   03AC F8                 1351 	mov	r0,a
   03AD A6 02              1352 	mov	@r0,ar2
   03AF 08                 1353 	inc	r0
   03B0 A6 03              1354 	mov	@r0,ar3
                           1355 ;	../../../core/net/mac/cxmac.c:456: strobe_len = len + sizeof(struct cxmac_hdr);
   03B2 E5*00              1356 	mov	a,_bp
   03B4 24 3F              1357 	add	a,#0x3f
   03B6 F8                 1358 	mov	r0,a
   03B7 E5*00              1359 	mov	a,_bp
   03B9 24 3D              1360 	add	a,#0x3d
   03BB F9                 1361 	mov	r1,a
   03BC 74 02              1362 	mov	a,#0x02
   03BE 26                 1363 	add	a,@r0
   03BF F7                 1364 	mov	@r1,a
   03C0 E4                 1365 	clr	a
   03C1 08                 1366 	inc	r0
   03C2 36                 1367 	addc	a,@r0
   03C3 09                 1368 	inc	r1
   03C4 F7                 1369 	mov	@r1,a
                           1370 ;	../../../core/net/mac/cxmac.c:457: if(len == 0 || strobe_len > sizeof(strobe)) {
   03C5 E5*00              1371 	mov	a,_bp
   03C7 24 3F              1372 	add	a,#0x3f
   03C9 F8                 1373 	mov	r0,a
   03CA E6                 1374 	mov	a,@r0
   03CB 08                 1375 	inc	r0
   03CC 46                 1376 	orl	a,@r0
   03CD 60 15              1377 	jz	00103$
   03CF E5*00              1378 	mov	a,_bp
   03D1 24 3D              1379 	add	a,#0x3d
   03D3 F8                 1380 	mov	r0,a
   03D4 C3                 1381 	clr	c
   03D5 74 32              1382 	mov	a,#0x32
   03D7 96                 1383 	subb	a,@r0
   03D8 74 80              1384 	mov	a,#(0x00 ^ 0x80)
   03DA 08                 1385 	inc	r0
   03DB 86 F0              1386 	mov	b,@r0
   03DD 63 F0 80           1387 	xrl	b,#0x80
   03E0 95 F0              1388 	subb	a,b
   03E2 50 06              1389 	jnc	00104$
   03E4                    1390 00103$:
                           1391 ;	../../../core/net/mac/cxmac.c:460: return MAC_TX_ERR_FATAL;
   03E4 90 00 05           1392 	mov	dptr,#0x0005
   03E7 02s0Br79           1393 	ljmp	00180$
   03EA                    1394 00104$:
                           1395 ;	../../../core/net/mac/cxmac.c:462: memcpy(strobe, packetbuf_hdrptr(), len);
   03EA 12s00r00           1396 	lcall	_packetbuf_hdrptr
   03ED AE 82              1397 	mov	r6,dpl
   03EF AF 83              1398 	mov	r7,dph
   03F1 AA F0              1399 	mov	r2,b
   03F3 E5*00              1400 	mov	a,_bp
   03F5 24 4E              1401 	add	a,#0x4e
   03F7 F8                 1402 	mov	r0,a
   03F8 E5*00              1403 	mov	a,_bp
   03FA 24 0B              1404 	add	a,#0x0b
   03FC F6                 1405 	mov	@r0,a
   03FD E5*00              1406 	mov	a,_bp
   03FF 24 4E              1407 	add	a,#0x4e
   0401 F8                 1408 	mov	r0,a
   0402 86 03              1409 	mov	ar3,@r0
   0404 7C 00              1410 	mov	r4,#0x00
   0406 7D 40              1411 	mov	r5,#0x40
   0408 E5*00              1412 	mov	a,_bp
   040A 24 3F              1413 	add	a,#0x3f
   040C F8                 1414 	mov	r0,a
   040D E6                 1415 	mov	a,@r0
   040E C0 E0              1416 	push	acc
   0410 08                 1417 	inc	r0
   0411 E6                 1418 	mov	a,@r0
   0412 C0 E0              1419 	push	acc
   0414 C0 06              1420 	push	ar6
   0416 C0 07              1421 	push	ar7
   0418 C0 02              1422 	push	ar2
   041A 8B 82              1423 	mov	dpl,r3
   041C 8C 83              1424 	mov	dph,r4
   041E 8D F0              1425 	mov	b,r5
   0420 12s00r00           1426 	lcall	_memcpy
   0423 E5 81              1427 	mov	a,sp
   0425 24 FB              1428 	add	a,#0xfb
   0427 F5 81              1429 	mov	sp,a
                           1430 ;	../../../core/net/mac/cxmac.c:463: strobe[len] = DISPATCH; /* dispatch */
   0429 E5*00              1431 	mov	a,_bp
   042B 24 4E              1432 	add	a,#0x4e
   042D F8                 1433 	mov	r0,a
   042E E5*00              1434 	mov	a,_bp
   0430 24 3F              1435 	add	a,#0x3f
   0432 F9                 1436 	mov	r1,a
   0433 E7                 1437 	mov	a,@r1
   0434 26                 1438 	add	a,@r0
   0435 F8                 1439 	mov	r0,a
   0436 76 00              1440 	mov	@r0,#0x00
                           1441 ;	../../../core/net/mac/cxmac.c:464: strobe[len + 1] = TYPE_STROBE; /* type */
   0438 E5*00              1442 	mov	a,_bp
   043A 24 3F              1443 	add	a,#0x3f
   043C F8                 1444 	mov	r0,a
   043D E6                 1445 	mov	a,@r0
   043E 04                 1446 	inc	a
   043F C8                 1447 	xch	a,r0
   0440 E5*00              1448 	mov	a,_bp
   0442 24 4E              1449 	add	a,#0x4e
   0444 C8                 1450 	xch	a,r0
   0445 26                 1451 	add	a,@r0
   0446 F8                 1452 	mov	r0,a
   0447 76 10              1453 	mov	@r0,#0x10
                           1454 ;	../../../core/net/mac/cxmac.c:466: packetbuf_compact();
   0449 12s00r00           1455 	lcall	_packetbuf_compact
                           1456 ;	../../../core/net/mac/cxmac.c:467: packet = queuebuf_new_from_packetbuf();
   044C 12s00r00           1457 	lcall	_queuebuf_new_from_packetbuf
   044F AA 82              1458 	mov	r2,dpl
   0451 AB 83              1459 	mov	r3,dph
   0453 AC F0              1460 	mov	r4,b
   0455 E5*00              1461 	mov	a,_bp
   0457 24 46              1462 	add	a,#0x46
   0459 F8                 1463 	mov	r0,a
   045A A6 02              1464 	mov	@r0,ar2
   045C 08                 1465 	inc	r0
   045D A6 03              1466 	mov	@r0,ar3
   045F 08                 1467 	inc	r0
   0460 A6 04              1468 	mov	@r0,ar4
                           1469 ;	../../../core/net/mac/cxmac.c:468: if(packet == NULL) {
   0462 E5*00              1470 	mov	a,_bp
   0464 24 46              1471 	add	a,#0x46
   0466 F8                 1472 	mov	r0,a
   0467 E6                 1473 	mov	a,@r0
   0468 08                 1474 	inc	r0
   0469 46                 1475 	orl	a,@r0
   046A 08                 1476 	inc	r0
   046B 46                 1477 	orl	a,@r0
   046C 70 06              1478 	jnz	00107$
                           1479 ;	../../../core/net/mac/cxmac.c:472: return MAC_TX_ERR;
   046E 90 00 04           1480 	mov	dptr,#0x0004
   0471 02s0Br79           1481 	ljmp	00180$
   0474                    1482 00107$:
                           1483 ;	../../../core/net/mac/cxmac.c:476: if(is_streaming == 1 &&
   0474 90s00r23           1484 	mov	dptr,#_is_streaming
   0477 E0                 1485 	movx	a,@dptr
   0478 FA                 1486 	mov	r2,a
   0479 BA 01 66           1487 	cjne	r2,#0x01,00109$
                           1488 ;	../../../core/net/mac/cxmac.c:478: &is_streaming_to) ||
                           1489 ;	../../../core/net/mac/cxmac.c:477: (rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
   047C 75 82 19           1490 	mov	dpl,#0x19
   047F 12s00r00           1491 	lcall	_packetbuf_addr
   0482 AA 82              1492 	mov	r2,dpl
   0484 AB 83              1493 	mov	r3,dph
   0486 AC F0              1494 	mov	r4,b
   0488 74r24              1495 	mov	a,#_is_streaming_to
   048A C0 E0              1496 	push	acc
   048C 74s00              1497 	mov	a,#(_is_streaming_to >> 8)
   048E C0 E0              1498 	push	acc
   0490 E4                 1499 	clr	a
   0491 C0 E0              1500 	push	acc
   0493 8A 82              1501 	mov	dpl,r2
   0495 8B 83              1502 	mov	dph,r3
   0497 8C F0              1503 	mov	b,r4
   0499 12s00r00           1504 	lcall	_rimeaddr_cmp
   049C AA 82              1505 	mov	r2,dpl
   049E AB 83              1506 	mov	r3,dph
   04A0 15 81              1507 	dec	sp
   04A2 15 81              1508 	dec	sp
   04A4 15 81              1509 	dec	sp
   04A6 EA                 1510 	mov	a,r2
   04A7 4B                 1511 	orl	a,r3
   04A8 70 2E              1512 	jnz	00108$
                           1513 ;	../../../core/net/mac/cxmac.c:480: &is_streaming_to_too))) {
                           1514 ;	../../../core/net/mac/cxmac.c:479: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
   04AA 75 82 19           1515 	mov	dpl,#0x19
   04AD 12s00r00           1516 	lcall	_packetbuf_addr
   04B0 AA 82              1517 	mov	r2,dpl
   04B2 AB 83              1518 	mov	r3,dph
   04B4 AC F0              1519 	mov	r4,b
   04B6 74r26              1520 	mov	a,#_is_streaming_to_too
   04B8 C0 E0              1521 	push	acc
   04BA 74s00              1522 	mov	a,#(_is_streaming_to_too >> 8)
   04BC C0 E0              1523 	push	acc
   04BE E4                 1524 	clr	a
   04BF C0 E0              1525 	push	acc
   04C1 8A 82              1526 	mov	dpl,r2
   04C3 8B 83              1527 	mov	dph,r3
   04C5 8C F0              1528 	mov	b,r4
   04C7 12s00r00           1529 	lcall	_rimeaddr_cmp
   04CA AA 82              1530 	mov	r2,dpl
   04CC AB 83              1531 	mov	r3,dph
   04CE 15 81              1532 	dec	sp
   04D0 15 81              1533 	dec	sp
   04D2 15 81              1534 	dec	sp
   04D4 EA                 1535 	mov	a,r2
   04D5 4B                 1536 	orl	a,r3
   04D6 60 0A              1537 	jz	00109$
   04D8                    1538 00108$:
                           1539 ;	../../../core/net/mac/cxmac.c:481: is_already_streaming = 1;
   04D8 E5*00              1540 	mov	a,_bp
   04DA 24 49              1541 	add	a,#0x49
   04DC F8                 1542 	mov	r0,a
   04DD 76 01              1543 	mov	@r0,#0x01
   04DF 08                 1544 	inc	r0
   04E0 76 00              1545 	mov	@r0,#0x00
   04E2                    1546 00109$:
                           1547 ;	../../../core/net/mac/cxmac.c:483: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
   04E2 75 82 0E           1548 	mov	dpl,#0x0E
   04E5 12s00r00           1549 	lcall	_packetbuf_attr
   04E8 AA 82              1550 	mov	r2,dpl
   04EA AB 83              1551 	mov	r3,dph
   04EC BA 02 05           1552 	cjne	r2,#0x02,00238$
   04EF BB 00 02           1553 	cjne	r3,#0x00,00238$
   04F2 80 03              1554 	sjmp	00239$
   04F4                    1555 00238$:
   04F4 02s05rA6           1556 	ljmp	00118$
   04F7                    1557 00239$:
                           1558 ;	../../../core/net/mac/cxmac.c:485: is_streaming = 1;
   04F7 90s00r23           1559 	mov	dptr,#_is_streaming
   04FA 74 01              1560 	mov	a,#0x01
   04FC F0                 1561 	movx	@dptr,a
                           1562 ;	../../../core/net/mac/cxmac.c:486: if(rimeaddr_cmp(&is_streaming_to, &rimeaddr_null)) {
   04FD 74r00              1563 	mov	a,#_rimeaddr_null
   04FF C0 E0              1564 	push	acc
   0501 74s00              1565 	mov	a,#(_rimeaddr_null >> 8)
   0503 C0 E0              1566 	push	acc
   0505 74 80              1567 	mov	a,#0x80
   0507 C0 E0              1568 	push	acc
   0509 90s00r24           1569 	mov	dptr,#_is_streaming_to
   050C 75 F0 00           1570 	mov	b,#0x00
   050F 12s00r00           1571 	lcall	_rimeaddr_cmp
   0512 AA 82              1572 	mov	r2,dpl
   0514 AB 83              1573 	mov	r3,dph
   0516 15 81              1574 	dec	sp
   0518 15 81              1575 	dec	sp
   051A 15 81              1576 	dec	sp
   051C EA                 1577 	mov	a,r2
   051D 4B                 1578 	orl	a,r3
   051E 60 23              1579 	jz	00115$
                           1580 ;	../../../core/net/mac/cxmac.c:487: rimeaddr_copy(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
   0520 75 82 19           1581 	mov	dpl,#0x19
   0523 12s00r00           1582 	lcall	_packetbuf_addr
   0526 AA 82              1583 	mov	r2,dpl
   0528 AB 83              1584 	mov	r3,dph
   052A AC F0              1585 	mov	r4,b
   052C C0 02              1586 	push	ar2
   052E C0 03              1587 	push	ar3
   0530 C0 04              1588 	push	ar4
   0532 90s00r24           1589 	mov	dptr,#_is_streaming_to
   0535 75 F0 00           1590 	mov	b,#0x00
   0538 12s00r00           1591 	lcall	_rimeaddr_copy
   053B 15 81              1592 	dec	sp
   053D 15 81              1593 	dec	sp
   053F 15 81              1594 	dec	sp
   0541 80 4A              1595 	sjmp	00116$
   0543                    1596 00115$:
                           1597 ;	../../../core/net/mac/cxmac.c:488: } else if(!rimeaddr_cmp(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER))) {
   0543 75 82 19           1598 	mov	dpl,#0x19
   0546 12s00r00           1599 	lcall	_packetbuf_addr
   0549 AA 82              1600 	mov	r2,dpl
   054B AB 83              1601 	mov	r3,dph
   054D AC F0              1602 	mov	r4,b
   054F C0 02              1603 	push	ar2
   0551 C0 03              1604 	push	ar3
   0553 C0 04              1605 	push	ar4
   0555 90s00r24           1606 	mov	dptr,#_is_streaming_to
   0558 75 F0 00           1607 	mov	b,#0x00
   055B 12s00r00           1608 	lcall	_rimeaddr_cmp
   055E AA 82              1609 	mov	r2,dpl
   0560 AB 83              1610 	mov	r3,dph
   0562 15 81              1611 	dec	sp
   0564 15 81              1612 	dec	sp
   0566 15 81              1613 	dec	sp
   0568 EA                 1614 	mov	a,r2
   0569 4B                 1615 	orl	a,r3
   056A 70 21              1616 	jnz	00116$
                           1617 ;	../../../core/net/mac/cxmac.c:489: rimeaddr_copy(&is_streaming_to_too, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
   056C 75 82 19           1618 	mov	dpl,#0x19
   056F 12s00r00           1619 	lcall	_packetbuf_addr
   0572 AA 82              1620 	mov	r2,dpl
   0574 AB 83              1621 	mov	r3,dph
   0576 AC F0              1622 	mov	r4,b
   0578 C0 02              1623 	push	ar2
   057A C0 03              1624 	push	ar3
   057C C0 04              1625 	push	ar4
   057E 90s00r26           1626 	mov	dptr,#_is_streaming_to_too
   0581 75 F0 00           1627 	mov	b,#0x00
   0584 12s00r00           1628 	lcall	_rimeaddr_copy
   0587 15 81              1629 	dec	sp
   0589 15 81              1630 	dec	sp
   058B 15 81              1631 	dec	sp
   058D                    1632 00116$:
                           1633 ;	../../../core/net/mac/cxmac.c:491: stream_until = RTIMER_NOW() + DEFAULT_STREAM_TIME;
   058D AA E2              1634 	mov	r2,_T1CNTL
   058F 7B 00              1635 	mov	r3,#0x00
   0591 AD E3              1636 	mov	r5,_T1CNTH
   0593 E4                 1637 	clr	a
   0594 FC                 1638 	mov	r4,a
   0595 2A                 1639 	add	a,r2
   0596 FA                 1640 	mov	r2,a
   0597 ED                 1641 	mov	a,r5
   0598 3B                 1642 	addc	a,r3
   0599 FB                 1643 	mov	r3,a
   059A 90s00r28           1644 	mov	dptr,#_stream_until
   059D 74 09              1645 	mov	a,#0x09
   059F 2A                 1646 	add	a,r2
   05A0 F0                 1647 	movx	@dptr,a
   05A1 74 3D              1648 	mov	a,#0x3D
   05A3 3B                 1649 	addc	a,r3
   05A4 A3                 1650 	inc	dptr
   05A5 F0                 1651 	movx	@dptr,a
   05A6                    1652 00118$:
                           1653 ;	../../../core/net/mac/cxmac.c:495: off();
   05A6 12s00r2E           1654 	lcall	_off
                           1655 ;	../../../core/net/mac/cxmac.c:502: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   05A9 90s00r10           1656 	mov	dptr,#_encounter_list
   05AC E0                 1657 	movx	a,@dptr
   05AD FA                 1658 	mov	r2,a
   05AE A3                 1659 	inc	dptr
   05AF E0                 1660 	movx	a,@dptr
   05B0 FB                 1661 	mov	r3,a
   05B1 A3                 1662 	inc	dptr
   05B2 E0                 1663 	movx	a,@dptr
   05B3 FC                 1664 	mov	r4,a
   05B4 8A 82              1665 	mov	dpl,r2
   05B6 8B 83              1666 	mov	dph,r3
   05B8 8C F0              1667 	mov	b,r4
   05BA 12s00r00           1668 	lcall	_list_head
   05BD AA 82              1669 	mov	r2,dpl
   05BF AB 83              1670 	mov	r3,dph
   05C1 AC F0              1671 	mov	r4,b
   05C3 E5*00              1672 	mov	a,_bp
   05C5 24 43              1673 	add	a,#0x43
   05C7 F8                 1674 	mov	r0,a
   05C8 A6 02              1675 	mov	@r0,ar2
   05CA 08                 1676 	inc	r0
   05CB A6 03              1677 	mov	@r0,ar3
   05CD 08                 1678 	inc	r0
   05CE A6 04              1679 	mov	@r0,ar4
   05D0                    1680 00170$:
   05D0 E5*00              1681 	mov	a,_bp
   05D2 24 43              1682 	add	a,#0x43
   05D4 F8                 1683 	mov	r0,a
   05D5 B6 00 0B           1684 	cjne	@r0,#0x00,00242$
   05D8 08                 1685 	inc	r0
   05D9 B6 00 07           1686 	cjne	@r0,#0x00,00242$
   05DC 08                 1687 	inc	r0
   05DD B6 00 03           1688 	cjne	@r0,#0x00,00242$
   05E0 02s06rDC           1689 	ljmp	00173$
   05E3                    1690 00242$:
                           1691 ;	../../../core/net/mac/cxmac.c:503: const rimeaddr_t *neighbor = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
   05E3 75 82 19           1692 	mov	dpl,#0x19
   05E6 12s00r00           1693 	lcall	_packetbuf_addr
   05E9 AA 82              1694 	mov	r2,dpl
   05EB AB 83              1695 	mov	r3,dph
   05ED AC F0              1696 	mov	r4,b
                           1697 ;	../../../core/net/mac/cxmac.c:505: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
   05EF E5*00              1698 	mov	a,_bp
   05F1 24 43              1699 	add	a,#0x43
   05F3 F8                 1700 	mov	r0,a
   05F4 74 03              1701 	mov	a,#0x03
   05F6 26                 1702 	add	a,@r0
   05F7 FD                 1703 	mov	r5,a
   05F8 E4                 1704 	clr	a
   05F9 08                 1705 	inc	r0
   05FA 36                 1706 	addc	a,@r0
   05FB FE                 1707 	mov	r6,a
   05FC 08                 1708 	inc	r0
   05FD 86 07              1709 	mov	ar7,@r0
   05FF C0 05              1710 	push	ar5
   0601 C0 06              1711 	push	ar6
   0603 C0 07              1712 	push	ar7
   0605 8A 82              1713 	mov	dpl,r2
   0607 8B 83              1714 	mov	dph,r3
   0609 8C F0              1715 	mov	b,r4
   060B 12s00r00           1716 	lcall	_rimeaddr_cmp
   060E AD 82              1717 	mov	r5,dpl
   0610 AE 83              1718 	mov	r6,dph
   0612 15 81              1719 	dec	sp
   0614 15 81              1720 	dec	sp
   0616 15 81              1721 	dec	sp
   0618 ED                 1722 	mov	a,r5
   0619 4E                 1723 	orl	a,r6
   061A 70 03              1724 	jnz	00243$
   061C 02s06rB6           1725 	ljmp	00172$
   061F                    1726 00243$:
                           1727 ;	../../../core/net/mac/cxmac.c:515: now = RTIMER_NOW();
   061F AD E2              1728 	mov	r5,_T1CNTL
   0621 7E 00              1729 	mov	r6,#0x00
   0623 AA E3              1730 	mov	r2,_T1CNTH
   0625 E4                 1731 	clr	a
   0626 2D                 1732 	add	a,r5
   0627 FD                 1733 	mov	r5,a
   0628 EA                 1734 	mov	a,r2
   0629 3E                 1735 	addc	a,r6
   062A FE                 1736 	mov	r6,a
                           1737 ;	../../../core/net/mac/cxmac.c:516: wait = ((rtimer_clock_t)(e->time - now)) % (DEFAULT_PERIOD);
   062B E5*00              1738 	mov	a,_bp
   062D 24 43              1739 	add	a,#0x43
   062F F8                 1740 	mov	r0,a
   0630 74 05              1741 	mov	a,#0x05
   0632 26                 1742 	add	a,@r0
   0633 FA                 1743 	mov	r2,a
   0634 E4                 1744 	clr	a
   0635 08                 1745 	inc	r0
   0636 36                 1746 	addc	a,@r0
   0637 FB                 1747 	mov	r3,a
   0638 08                 1748 	inc	r0
   0639 86 04              1749 	mov	ar4,@r0
   063B 8A 82              1750 	mov	dpl,r2
   063D 8B 83              1751 	mov	dph,r3
   063F 8C F0              1752 	mov	b,r4
   0641 12s00r00           1753 	lcall	__gptrget
   0644 FA                 1754 	mov	r2,a
   0645 A3                 1755 	inc	dptr
   0646 12s00r00           1756 	lcall	__gptrget
   0649 FB                 1757 	mov	r3,a
   064A EA                 1758 	mov	a,r2
   064B C3                 1759 	clr	c
   064C 9D                 1760 	subb	a,r5
   064D FA                 1761 	mov	r2,a
   064E EB                 1762 	mov	a,r3
   064F 9E                 1763 	subb	a,r6
   0650 FB                 1764 	mov	r3,a
   0651 C0 05              1765 	push	ar5
   0653 C0 06              1766 	push	ar6
   0655 74 42              1767 	mov	a,#0x42
   0657 C0 E0              1768 	push	acc
   0659 74 0F              1769 	mov	a,#0x0F
   065B C0 E0              1770 	push	acc
   065D 8A 82              1771 	mov	dpl,r2
   065F 8B 83              1772 	mov	dph,r3
   0661 12s00r00           1773 	lcall	__moduint
   0664 AA 82              1774 	mov	r2,dpl
   0666 AB 83              1775 	mov	r3,dph
   0668 15 81              1776 	dec	sp
   066A 15 81              1777 	dec	sp
   066C D0 06              1778 	pop	ar6
   066E D0 05              1779 	pop	ar5
                           1780 ;	../../../core/net/mac/cxmac.c:517: expected = now + wait - 2 * DEFAULT_ON_TIME;
   0670 EA                 1781 	mov	a,r2
   0671 2D                 1782 	add	a,r5
   0672 FD                 1783 	mov	r5,a
   0673 EB                 1784 	mov	a,r3
   0674 3E                 1785 	addc	a,r6
   0675 FE                 1786 	mov	r6,a
   0676 ED                 1787 	mov	a,r5
   0677 24 3E              1788 	add	a,#0x3e
   0679 FF                 1789 	mov	r7,a
   067A EE                 1790 	mov	a,r6
   067B 34 FF              1791 	addc	a,#0xff
   067D FE                 1792 	mov	r6,a
                           1793 ;	../../../core/net/mac/cxmac.c:521: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) !=
   067E 75 82 0E           1794 	mov	dpl,#0x0E
   0681 C0 06              1795 	push	ar6
   0683 C0 07              1796 	push	ar7
   0685 12s00r00           1797 	lcall	_packetbuf_attr
   0688 AA 82              1798 	mov	r2,dpl
   068A AB 83              1799 	mov	r3,dph
   068C D0 07              1800 	pop	ar7
   068E D0 06              1801 	pop	ar6
   0690 BA 01 05           1802 	cjne	r2,#0x01,00244$
   0693 BB 00 02           1803 	cjne	r3,#0x00,00244$
   0696 80 1E              1804 	sjmp	00172$
   0698                    1805 00244$:
                           1806 ;	../../../core/net/mac/cxmac.c:523: is_streaming == 0) {
   0698 90s00r23           1807 	mov	dptr,#_is_streaming
   069B E0                 1808 	movx	a,@dptr
   069C FA                 1809 	mov	r2,a
   069D 70 17              1810 	jnz	00172$
                           1811 ;	../../../core/net/mac/cxmac.c:526: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
   069F                    1812 00119$:
   069F AA E2              1813 	mov	r2,_T1CNTL
   06A1 7B 00              1814 	mov	r3,#0x00
   06A3 AD E3              1815 	mov	r5,_T1CNTH
   06A5 E4                 1816 	clr	a
   06A6 FC                 1817 	mov	r4,a
   06A7 2A                 1818 	add	a,r2
   06A8 FA                 1819 	mov	r2,a
   06A9 ED                 1820 	mov	a,r5
   06AA 3B                 1821 	addc	a,r3
   06AB FB                 1822 	mov	r3,a
   06AC EA                 1823 	mov	a,r2
   06AD C3                 1824 	clr	c
   06AE 9F                 1825 	subb	a,r7
   06AF FA                 1826 	mov	r2,a
   06B0 EB                 1827 	mov	a,r3
   06B1 9E                 1828 	subb	a,r6
   06B2 FB                 1829 	mov	r3,a
   06B3 20 E7 E9           1830 	jb	acc.7,00119$
   06B6                    1831 00172$:
                           1832 ;	../../../core/net/mac/cxmac.c:502: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
   06B6 E5*00              1833 	mov	a,_bp
   06B8 24 43              1834 	add	a,#0x43
   06BA F8                 1835 	mov	r0,a
   06BB 86 82              1836 	mov	dpl,@r0
   06BD 08                 1837 	inc	r0
   06BE 86 83              1838 	mov	dph,@r0
   06C0 08                 1839 	inc	r0
   06C1 86 F0              1840 	mov	b,@r0
   06C3 12s00r00           1841 	lcall	_list_item_next
   06C6 AA 82              1842 	mov	r2,dpl
   06C8 AB 83              1843 	mov	r3,dph
   06CA AC F0              1844 	mov	r4,b
   06CC E5*00              1845 	mov	a,_bp
   06CE 24 43              1846 	add	a,#0x43
   06D0 F8                 1847 	mov	r0,a
   06D1 A6 02              1848 	mov	@r0,ar2
   06D3 08                 1849 	inc	r0
   06D4 A6 03              1850 	mov	@r0,ar3
   06D6 08                 1851 	inc	r0
   06D7 A6 04              1852 	mov	@r0,ar4
   06D9 02s05rD0           1853 	ljmp	00170$
   06DC                    1854 00173$:
                           1855 ;	../../../core/net/mac/cxmac.c:538: we_are_sending = 1;
   06DC 90s00r0B           1856 	mov	dptr,#_we_are_sending
   06DF 74 01              1857 	mov	a,#0x01
   06E1 F0                 1858 	movx	@dptr,a
                           1859 ;	../../../core/net/mac/cxmac.c:540: t0 = RTIMER_NOW();
   06E2 AA E2              1860 	mov	r2,_T1CNTL
   06E4 7B 00              1861 	mov	r3,#0x00
   06E6 AD E3              1862 	mov	r5,_T1CNTH
   06E8 E4                 1863 	clr	a
   06E9 2A                 1864 	add	a,r2
   06EA FA                 1865 	mov	r2,a
   06EB ED                 1866 	mov	a,r5
   06EC 3B                 1867 	addc	a,r3
   06ED FB                 1868 	mov	r3,a
   06EE A8*00              1869 	mov	r0,_bp
   06F0 08                 1870 	inc	r0
   06F1 A6 02              1871 	mov	@r0,ar2
   06F3 08                 1872 	inc	r0
   06F4 A6 03              1873 	mov	@r0,ar3
                           1874 ;	../../../core/net/mac/cxmac.c:548: on();
   06F6 12s00r00           1875 	lcall	_on
                           1876 ;	../../../core/net/mac/cxmac.c:549: collisions = 0;
   06F9 E5*00              1877 	mov	a,_bp
   06FB 24 4B              1878 	add	a,#0x4b
   06FD F8                 1879 	mov	r0,a
   06FE 76 00              1880 	mov	@r0,#0x00
                           1881 ;	../../../core/net/mac/cxmac.c:550: if(!is_already_streaming) {
   0700 E5*00              1882 	mov	a,_bp
   0702 24 49              1883 	add	a,#0x49
   0704 F8                 1884 	mov	r0,a
   0705 E6                 1885 	mov	a,@r0
   0706 08                 1886 	inc	r0
   0707 46                 1887 	orl	a,@r0
   0708 60 03              1888 	jz	00247$
   070A 02s0Ar2E           1889 	ljmp	00148$
   070D                    1890 00247$:
                           1891 ;	../../../core/net/mac/cxmac.c:551: watchdog_stop();
   070D 12s00r00           1892 	lcall	_watchdog_stop
                           1893 ;	../../../core/net/mac/cxmac.c:552: got_strobe_ack = 0;
   0710 E5*00              1894 	mov	a,_bp
   0712 24 09              1895 	add	a,#0x09
   0714 F8                 1896 	mov	r0,a
   0715 E4                 1897 	clr	a
   0716 F6                 1898 	mov	@r0,a
   0717 08                 1899 	inc	r0
   0718 F6                 1900 	mov	@r0,a
                           1901 ;	../../../core/net/mac/cxmac.c:553: t = RTIMER_NOW();
   0719 AD E2              1902 	mov	r5,_T1CNTL
   071B 7A 00              1903 	mov	r2,#0x00
   071D AE E3              1904 	mov	r6,_T1CNTH
   071F E4                 1905 	clr	a
   0720 FB                 1906 	mov	r3,a
   0721 2D                 1907 	add	a,r5
   0722 FD                 1908 	mov	r5,a
   0723 EE                 1909 	mov	a,r6
   0724 3A                 1910 	addc	a,r2
   0725 FA                 1911 	mov	r2,a
   0726 E5*00              1912 	mov	a,_bp
   0728 24 03              1913 	add	a,#0x03
   072A F8                 1914 	mov	r0,a
   072B A6 05              1915 	mov	@r0,ar5
   072D 08                 1916 	inc	r0
   072E A6 02              1917 	mov	@r0,ar2
                           1918 ;	../../../core/net/mac/cxmac.c:554: for(strobes = 0, collisions = 0;
   0730 E5*00              1919 	mov	a,_bp
   0732 24 4B              1920 	add	a,#0x4b
   0734 F8                 1921 	mov	r0,a
   0735 76 00              1922 	mov	@r0,#0x00
                           1923 ;	../../../core/net/mac/cxmac.c:680: return MAC_TX_COLLISION;
                           1924 ;	../../../core/net/mac/cxmac.c:554: for(strobes = 0, collisions = 0;
   0737 E5*00              1925 	mov	a,_bp
   0739 24 4E              1926 	add	a,#0x4e
   073B F8                 1927 	mov	r0,a
   073C 86 05              1928 	mov	ar5,@r0
   073E E5*00              1929 	mov	a,_bp
   0740 24 07              1930 	add	a,#0x07
   0742 F8                 1931 	mov	r0,a
   0743 E4                 1932 	clr	a
   0744 F6                 1933 	mov	@r0,a
   0745 08                 1934 	inc	r0
   0746 F6                 1935 	mov	@r0,a
   0747                    1936 00176$:
                           1937 ;	../../../core/net/mac/cxmac.c:555: got_strobe_ack == 0 && collisions == 0 &&
   0747 E5*00              1938 	mov	a,_bp
   0749 24 09              1939 	add	a,#0x09
   074B F8                 1940 	mov	r0,a
   074C B6 00 06           1941 	cjne	@r0,#0x00,00248$
   074F 08                 1942 	inc	r0
   0750 B6 00 02           1943 	cjne	@r0,#0x00,00248$
   0753 80 03              1944 	sjmp	00249$
   0755                    1945 00248$:
   0755 02s0Ar2E           1946 	ljmp	00148$
   0758                    1947 00249$:
   0758 E5*00              1948 	mov	a,_bp
   075A 24 4B              1949 	add	a,#0x4b
   075C F8                 1950 	mov	r0,a
   075D B6 00 02           1951 	cjne	@r0,#0x00,00250$
   0760 80 03              1952 	sjmp	00251$
   0762                    1953 00250$:
   0762 02s0Ar2E           1954 	ljmp	00148$
   0765                    1955 00251$:
                           1956 ;	../../../core/net/mac/cxmac.c:556: RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + cxmac_config.strobe_time);
   0765 C0 05              1957 	push	ar5
   0767 AD E2              1958 	mov	r5,_T1CNTL
   0769 7E 00              1959 	mov	r6,#0x00
   076B AA E3              1960 	mov	r2,_T1CNTH
   076D E4                 1961 	clr	a
   076E FF                 1962 	mov	r7,a
   076F 2D                 1963 	add	a,r5
   0770 FD                 1964 	mov	r5,a
   0771 EA                 1965 	mov	a,r2
   0772 3E                 1966 	addc	a,r6
   0773 FE                 1967 	mov	r6,a
   0774 90s00r04           1968 	mov	dptr,#(_cxmac_config + 0x0004)
   0777 E0                 1969 	movx	a,@dptr
   0778 FA                 1970 	mov	r2,a
   0779 A3                 1971 	inc	dptr
   077A E0                 1972 	movx	a,@dptr
   077B FB                 1973 	mov	r3,a
   077C A8*00              1974 	mov	r0,_bp
   077E 08                 1975 	inc	r0
   077F EA                 1976 	mov	a,r2
   0780 26                 1977 	add	a,@r0
   0781 FA                 1978 	mov	r2,a
   0782 EB                 1979 	mov	a,r3
   0783 08                 1980 	inc	r0
   0784 36                 1981 	addc	a,@r0
   0785 FB                 1982 	mov	r3,a
   0786 ED                 1983 	mov	a,r5
   0787 C3                 1984 	clr	c
   0788 9A                 1985 	subb	a,r2
   0789 EE                 1986 	mov	a,r6
   078A 9B                 1987 	subb	a,r3
   078B FE                 1988 	mov	r6,a
   078C D0 05              1989 	pop	ar5
   078E 20 E7 03           1990 	jb	acc.7,00252$
   0791 02s0Ar2E           1991 	ljmp	00148$
   0794                    1992 00252$:
                           1993 ;	../../../core/net/mac/cxmac.c:559: while(got_strobe_ack == 0 &&
   0794 E5*00              1994 	mov	a,_bp
   0796 24 4B              1995 	add	a,#0x4b
   0798 F8                 1996 	mov	r0,a
   0799 86 02              1997 	mov	ar2,@r0
   079B                    1998 00138$:
   079B E5*00              1999 	mov	a,_bp
   079D 24 09              2000 	add	a,#0x09
   079F F8                 2001 	mov	r0,a
   07A0 E6                 2002 	mov	a,@r0
   07A1 08                 2003 	inc	r0
   07A2 46                 2004 	orl	a,@r0
   07A3 60 03              2005 	jz	00253$
   07A5 02s09r1B           2006 	ljmp	00226$
   07A8                    2007 00253$:
                           2008 ;	../../../core/net/mac/cxmac.c:560: RTIMER_CLOCK_LT(RTIMER_NOW(), t + cxmac_config.strobe_wait_time)) {
   07A8 C0 05              2009 	push	ar5
   07AA AB E2              2010 	mov	r3,_T1CNTL
   07AC 7E 00              2011 	mov	r6,#0x00
   07AE AD E3              2012 	mov	r5,_T1CNTH
   07B0 E4                 2013 	clr	a
   07B1 2B                 2014 	add	a,r3
   07B2 FB                 2015 	mov	r3,a
   07B3 ED                 2016 	mov	a,r5
   07B4 3E                 2017 	addc	a,r6
   07B5 FE                 2018 	mov	r6,a
   07B6 90s00r06           2019 	mov	dptr,#(_cxmac_config + 0x0006)
   07B9 E0                 2020 	movx	a,@dptr
   07BA FD                 2021 	mov	r5,a
   07BB A3                 2022 	inc	dptr
   07BC E0                 2023 	movx	a,@dptr
   07BD FF                 2024 	mov	r7,a
   07BE E5*00              2025 	mov	a,_bp
   07C0 24 03              2026 	add	a,#0x03
   07C2 F8                 2027 	mov	r0,a
   07C3 ED                 2028 	mov	a,r5
   07C4 26                 2029 	add	a,@r0
   07C5 FD                 2030 	mov	r5,a
   07C6 EF                 2031 	mov	a,r7
   07C7 08                 2032 	inc	r0
   07C8 36                 2033 	addc	a,@r0
   07C9 FF                 2034 	mov	r7,a
   07CA EB                 2035 	mov	a,r3
   07CB C3                 2036 	clr	c
   07CC 9D                 2037 	subb	a,r5
   07CD FB                 2038 	mov	r3,a
   07CE EE                 2039 	mov	a,r6
   07CF 9F                 2040 	subb	a,r7
   07D0 FE                 2041 	mov	r6,a
   07D1 D0 05              2042 	pop	ar5
   07D3 20 E7 03           2043 	jb	acc.7,00254$
   07D6 02s09r1B           2044 	ljmp	00226$
   07D9                    2045 00254$:
                           2046 ;	../../../core/net/mac/cxmac.c:561: rtimer_clock_t now = RTIMER_NOW();
   07D9 C0 05              2047 	push	ar5
   07DB AB E2              2048 	mov	r3,_T1CNTL
   07DD 7E 00              2049 	mov	r6,#0x00
   07DF AD E3              2050 	mov	r5,_T1CNTH
   07E1 E4                 2051 	clr	a
   07E2 2B                 2052 	add	a,r3
   07E3 FB                 2053 	mov	r3,a
   07E4 ED                 2054 	mov	a,r5
   07E5 3E                 2055 	addc	a,r6
   07E6 FE                 2056 	mov	r6,a
   07E7 E5*00              2057 	mov	a,_bp
   07E9 24 4C              2058 	add	a,#0x4c
   07EB F8                 2059 	mov	r0,a
   07EC A6 03              2060 	mov	@r0,ar3
   07EE 08                 2061 	inc	r0
   07EF A6 06              2062 	mov	@r0,ar6
                           2063 ;	../../../core/net/mac/cxmac.c:564: packetbuf_clear();
   07F1 C0 02              2064 	push	ar2
   07F3 C0 05              2065 	push	ar5
   07F5 12s00r00           2066 	lcall	_packetbuf_clear
                           2067 ;	../../../core/net/mac/cxmac.c:565: len = NETSTACK_RADIO.read(packetbuf_dataptr(), PACKETBUF_SIZE);
   07F8 90s00r08           2068 	mov	dptr,#(_cc2430_rf_driver + 0x0008)
   07FB E5*00              2069 	mov	a,_bp
   07FD 24 4F              2070 	add	a,#0x4f
   07FF F8                 2071 	mov	r0,a
   0800 E4                 2072 	clr	a
   0801 93                 2073 	movc	a,@a+dptr
   0802 F6                 2074 	mov	@r0,a
   0803 A3                 2075 	inc	dptr
   0804 E4                 2076 	clr	a
   0805 93                 2077 	movc	a,@a+dptr
   0806 08                 2078 	inc	r0
   0807 F6                 2079 	mov	@r0,a
   0808 12s00r00           2080 	lcall	_packetbuf_dataptr
   080B AE 82              2081 	mov	r6,dpl
   080D AF 83              2082 	mov	r7,dph
   080F AB F0              2083 	mov	r3,b
   0811 D0 05              2084 	pop	ar5
   0813 74 80              2085 	mov	a,#0x80
   0815 C0 E0              2086 	push	acc
   0817 E4                 2087 	clr	a
   0818 C0 E0              2088 	push	acc
   081A 74r35              2089 	mov	a,#00255$
   081C C0 E0              2090 	push	acc
   081E 74s08              2091 	mov	a,#(00255$ >> 8)
   0820 C0 E0              2092 	push	acc
   0822 E5*00              2093 	mov	a,_bp
   0824 24 4F              2094 	add	a,#0x4f
   0826 F8                 2095 	mov	r0,a
   0827 E6                 2096 	mov	a,@r0
   0828 C0 E0              2097 	push	acc
   082A 08                 2098 	inc	r0
   082B E6                 2099 	mov	a,@r0
   082C C0 E0              2100 	push	acc
   082E 8E 82              2101 	mov	dpl,r6
   0830 8F 83              2102 	mov	dph,r7
   0832 8B F0              2103 	mov	b,r3
   0834 22                 2104 	ret
   0835                    2105 00255$:
   0835 AB 82              2106 	mov	r3,dpl
   0837 AD 83              2107 	mov	r5,dph
   0839 15 81              2108 	dec	sp
   083B 15 81              2109 	dec	sp
   083D D0 02              2110 	pop	ar2
   083F E5*00              2111 	mov	a,_bp
   0841 24 3F              2112 	add	a,#0x3f
   0843 F8                 2113 	mov	r0,a
   0844 A6 03              2114 	mov	@r0,ar3
   0846 08                 2115 	inc	r0
   0847 A6 05              2116 	mov	@r0,ar5
                           2117 ;	../../../core/net/mac/cxmac.c:566: if(len > 0) {
   0849 E5*00              2118 	mov	a,_bp
   084B 24 3F              2119 	add	a,#0x3f
   084D F8                 2120 	mov	r0,a
   084E C3                 2121 	clr	c
   084F E4                 2122 	clr	a
   0850 96                 2123 	subb	a,@r0
   0851 74 80              2124 	mov	a,#(0x00 ^ 0x80)
   0853 08                 2125 	inc	r0
   0854 86 F0              2126 	mov	b,@r0
   0856 63 F0 80           2127 	xrl	b,#0x80
   0859 95 F0              2128 	subb	a,b
   085B D0 05              2129 	pop	ar5
   085D 40 03              2130 	jc	00256$
   085F 02s07r9B           2131 	ljmp	00138$
   0862                    2132 00256$:
                           2133 ;	../../../core/net/mac/cxmac.c:567: packetbuf_set_datalen(len);
   0862 E5*00              2134 	mov	a,_bp
   0864 24 3F              2135 	add	a,#0x3f
   0866 F8                 2136 	mov	r0,a
   0867 86 82              2137 	mov	dpl,@r0
   0869 08                 2138 	inc	r0
   086A 86 83              2139 	mov	dph,@r0
   086C C0 02              2140 	push	ar2
   086E C0 05              2141 	push	ar5
   0870 12s00r00           2142 	lcall	_packetbuf_set_datalen
                           2143 ;	../../../core/net/mac/cxmac.c:568: if(NETSTACK_FRAMER.parse()) {
   0873 90s00r02           2144 	mov	dptr,#(_framer_nullmac + 0x0002)
   0876 E4                 2145 	clr	a
   0877 93                 2146 	movc	a,@a+dptr
   0878 FB                 2147 	mov	r3,a
   0879 A3                 2148 	inc	dptr
   087A E4                 2149 	clr	a
   087B 93                 2150 	movc	a,@a+dptr
   087C FE                 2151 	mov	r6,a
   087D 8B 82              2152 	mov	dpl,r3
   087F 8E 83              2153 	mov	dph,r6
   0881 12s00r00           2154 	lcall	__sdcc_call_dptr
   0884 AB 82              2155 	mov	r3,dpl
   0886 AE 83              2156 	mov	r6,dph
   0888 D0 05              2157 	pop	ar5
   088A D0 02              2158 	pop	ar2
   088C EB                 2159 	mov	a,r3
   088D 4E                 2160 	orl	a,r6
   088E 70 03              2161 	jnz	00258$
   0890 02s07r9B           2162 	ljmp	00138$
   0893                    2163 00258$:
                           2164 ;	../../../core/net/mac/cxmac.c:569: hdr = packetbuf_dataptr();
   0893 C0 02              2165 	push	ar2
   0895 C0 05              2166 	push	ar5
   0897 12s00r00           2167 	lcall	_packetbuf_dataptr
   089A AB 82              2168 	mov	r3,dpl
   089C AE 83              2169 	mov	r6,dph
   089E AF F0              2170 	mov	r7,b
   08A0 D0 05              2171 	pop	ar5
   08A2 D0 02              2172 	pop	ar2
                           2173 ;	../../../core/net/mac/cxmac.c:570: if(hdr->dispatch == DISPATCH && hdr->type == TYPE_STROBE_ACK) {
   08A4 8B 82              2174 	mov	dpl,r3
   08A6 8E 83              2175 	mov	dph,r6
   08A8 8F F0              2176 	mov	b,r7
   08AA 12s00r00           2177 	lcall	__gptrget
   08AD 70 68              2178 	jnz	00130$
   08AF 0B                 2179 	inc	r3
   08B0 BB 00 01           2180 	cjne	r3,#0x00,00260$
   08B3 0E                 2181 	inc	r6
   08B4                    2182 00260$:
   08B4 8B 82              2183 	mov	dpl,r3
   08B6 8E 83              2184 	mov	dph,r6
   08B8 8F F0              2185 	mov	b,r7
   08BA 12s00r00           2186 	lcall	__gptrget
   08BD FB                 2187 	mov	r3,a
   08BE BB 13 56           2188 	cjne	r3,#0x13,00130$
                           2189 ;	../../../core/net/mac/cxmac.c:572: &rimeaddr_node_addr)) {
                           2190 ;	../../../core/net/mac/cxmac.c:571: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
   08C1 75 82 19           2191 	mov	dpl,#0x19
   08C4 C0 02              2192 	push	ar2
   08C6 C0 05              2193 	push	ar5
   08C8 12s00r00           2194 	lcall	_packetbuf_addr
   08CB AB 82              2195 	mov	r3,dpl
   08CD AE 83              2196 	mov	r6,dph
   08CF AF F0              2197 	mov	r7,b
   08D1 74r00              2198 	mov	a,#_rimeaddr_node_addr
   08D3 C0 E0              2199 	push	acc
   08D5 74s00              2200 	mov	a,#(_rimeaddr_node_addr >> 8)
   08D7 C0 E0              2201 	push	acc
   08D9 E4                 2202 	clr	a
   08DA C0 E0              2203 	push	acc
   08DC 8B 82              2204 	mov	dpl,r3
   08DE 8E 83              2205 	mov	dph,r6
   08E0 8F F0              2206 	mov	b,r7
   08E2 12s00r00           2207 	lcall	_rimeaddr_cmp
   08E5 AB 82              2208 	mov	r3,dpl
   08E7 AE 83              2209 	mov	r6,dph
   08E9 15 81              2210 	dec	sp
   08EB 15 81              2211 	dec	sp
   08ED 15 81              2212 	dec	sp
   08EF D0 05              2213 	pop	ar5
   08F1 D0 02              2214 	pop	ar2
   08F3 EB                 2215 	mov	a,r3
   08F4 4E                 2216 	orl	a,r6
   08F5 70 03              2217 	jnz	00263$
   08F7 02s07r9B           2218 	ljmp	00138$
   08FA                    2219 00263$:
                           2220 ;	../../../core/net/mac/cxmac.c:575: got_strobe_ack = 1;
   08FA E5*00              2221 	mov	a,_bp
   08FC 24 09              2222 	add	a,#0x09
   08FE F8                 2223 	mov	r0,a
   08FF 76 01              2224 	mov	@r0,#0x01
   0901 08                 2225 	inc	r0
   0902 76 00              2226 	mov	@r0,#0x00
                           2227 ;	../../../core/net/mac/cxmac.c:576: encounter_time = now;
   0904 E5*00              2228 	mov	a,_bp
   0906 24 4C              2229 	add	a,#0x4c
   0908 F8                 2230 	mov	r0,a
   0909 E5*00              2231 	mov	a,_bp
   090B 24 05              2232 	add	a,#0x05
   090D F9                 2233 	mov	r1,a
   090E E6                 2234 	mov	a,@r0
   090F F7                 2235 	mov	@r1,a
   0910 08                 2236 	inc	r0
   0911 09                 2237 	inc	r1
   0912 E6                 2238 	mov	a,@r0
   0913 F7                 2239 	mov	@r1,a
   0914 02s07r9B           2240 	ljmp	00138$
   0917                    2241 00130$:
                           2242 ;	../../../core/net/mac/cxmac.c:582: collisions++;
   0917 0A                 2243 	inc	r2
   0918 02s07r9B           2244 	ljmp	00138$
   091B                    2245 00226$:
   091B E5*00              2246 	mov	a,_bp
   091D 24 4B              2247 	add	a,#0x4b
   091F F8                 2248 	mov	r0,a
   0920 A6 02              2249 	mov	@r0,ar2
                           2250 ;	../../../core/net/mac/cxmac.c:590: t = RTIMER_NOW();
   0922 C0 05              2251 	push	ar5
   0924 AB E2              2252 	mov	r3,_T1CNTL
   0926 7E 00              2253 	mov	r6,#0x00
   0928 AD E3              2254 	mov	r5,_T1CNTH
   092A E4                 2255 	clr	a
   092B FF                 2256 	mov	r7,a
   092C 2B                 2257 	add	a,r3
   092D FB                 2258 	mov	r3,a
   092E ED                 2259 	mov	a,r5
   092F 3E                 2260 	addc	a,r6
   0930 FE                 2261 	mov	r6,a
   0931 E5*00              2262 	mov	a,_bp
   0933 24 03              2263 	add	a,#0x03
   0935 F8                 2264 	mov	r0,a
   0936 A6 03              2265 	mov	@r0,ar3
   0938 08                 2266 	inc	r0
   0939 A6 06              2267 	mov	@r0,ar6
                           2268 ;	../../../core/net/mac/cxmac.c:592: if(got_strobe_ack == 0 && collisions == 0) {
   093B E5*00              2269 	mov	a,_bp
   093D 24 09              2270 	add	a,#0x09
   093F F8                 2271 	mov	r0,a
   0940 E6                 2272 	mov	a,@r0
   0941 08                 2273 	inc	r0
   0942 46                 2274 	orl	a,@r0
   0943 D0 05              2275 	pop	ar5
   0945 60 03              2276 	jz	00264$
   0947 02s0Ar20           2277 	ljmp	00178$
   094A                    2278 00264$:
   094A EA                 2279 	mov	a,r2
   094B 60 03              2280 	jz	00265$
   094D 02s0Ar20           2281 	ljmp	00178$
   0950                    2282 00265$:
                           2283 ;	../../../core/net/mac/cxmac.c:593: if(is_broadcast) {
   0950 E5*00              2284 	mov	a,_bp
   0952 24 41              2285 	add	a,#0x41
   0954 F8                 2286 	mov	r0,a
   0955 E6                 2287 	mov	a,@r0
   0956 08                 2288 	inc	r0
   0957 46                 2289 	orl	a,@r0
   0958 70 03              2290 	jnz	00266$
   095A 02s09rDA           2291 	ljmp	00142$
   095D                    2292 00266$:
                           2293 ;	../../../core/net/mac/cxmac.c:598: queuebuf_to_packetbuf(packet);
   095D C0 05              2294 	push	ar5
   095F E5*00              2295 	mov	a,_bp
   0961 24 46              2296 	add	a,#0x46
   0963 F8                 2297 	mov	r0,a
   0964 86 82              2298 	mov	dpl,@r0
   0966 08                 2299 	inc	r0
   0967 86 83              2300 	mov	dph,@r0
   0969 08                 2301 	inc	r0
   096A 86 F0              2302 	mov	b,@r0
   096C C0 05              2303 	push	ar5
   096E 12s00r00           2304 	lcall	_queuebuf_to_packetbuf
   0971 D0 05              2305 	pop	ar5
                           2306 ;	../../../core/net/mac/cxmac.c:599: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
   0973 90s00r06           2307 	mov	dptr,#(_cc2430_rf_driver + 0x0006)
   0976 E4                 2308 	clr	a
   0977 93                 2309 	movc	a,@a+dptr
   0978 FA                 2310 	mov	r2,a
   0979 A3                 2311 	inc	dptr
   097A E4                 2312 	clr	a
   097B 93                 2313 	movc	a,@a+dptr
   097C FB                 2314 	mov	r3,a
   097D C0 02              2315 	push	ar2
   097F C0 03              2316 	push	ar3
   0981 C0 05              2317 	push	ar5
   0983 12s00r00           2318 	lcall	_packetbuf_totlen
   0986 C8                 2319 	xch	a,r0
   0987 E5*00              2320 	mov	a,_bp
   0989 24 4F              2321 	add	a,#0x4f
   098B C8                 2322 	xch	a,r0
   098C A6 82              2323 	mov	@r0,dpl
   098E 08                 2324 	inc	r0
   098F A6 83              2325 	mov	@r0,dph
   0991 D0 05              2326 	pop	ar5
   0993 12s00r00           2327 	lcall	_packetbuf_hdrptr
   0996 AD 82              2328 	mov	r5,dpl
   0998 AC 83              2329 	mov	r4,dph
   099A AE F0              2330 	mov	r6,b
   099C D0 03              2331 	pop	ar3
   099E D0 02              2332 	pop	ar2
   09A0 C0 02              2333 	push	ar2
   09A2 C0 03              2334 	push	ar3
   09A4 C0 05              2335 	push	ar5
   09A6 E5*00              2336 	mov	a,_bp
   09A8 24 4F              2337 	add	a,#0x4f
   09AA F8                 2338 	mov	r0,a
   09AB E6                 2339 	mov	a,@r0
   09AC C0 E0              2340 	push	acc
   09AE 08                 2341 	inc	r0
   09AF E6                 2342 	mov	a,@r0
   09B0 C0 E0              2343 	push	acc
   09B2 74rC5              2344 	mov	a,#00267$
   09B4 C0 E0              2345 	push	acc
   09B6 74s09              2346 	mov	a,#(00267$ >> 8)
   09B8 C0 E0              2347 	push	acc
   09BA C0 02              2348 	push	ar2
   09BC C0 03              2349 	push	ar3
   09BE 8D 82              2350 	mov	dpl,r5
   09C0 8C 83              2351 	mov	dph,r4
   09C2 8E F0              2352 	mov	b,r6
   09C4 22                 2353 	ret
   09C5                    2354 00267$:
   09C5 15 81              2355 	dec	sp
   09C7 15 81              2356 	dec	sp
   09C9 D0 05              2357 	pop	ar5
   09CB D0 03              2358 	pop	ar3
   09CD D0 02              2359 	pop	ar2
                           2360 ;	../../../core/net/mac/cxmac.c:601: off();
   09CF C0 05              2361 	push	ar5
   09D1 12s00r2E           2362 	lcall	_off
   09D4 D0 05              2363 	pop	ar5
   09D6 D0 05              2364 	pop	ar5
   09D8 80 46              2365 	sjmp	00178$
   09DA                    2366 00142$:
                           2367 ;	../../../core/net/mac/cxmac.c:603: NETSTACK_RADIO.send(strobe, strobe_len);
   09DA 90s00r06           2368 	mov	dptr,#(_cc2430_rf_driver + 0x0006)
   09DD E4                 2369 	clr	a
   09DE 93                 2370 	movc	a,@a+dptr
   09DF FA                 2371 	mov	r2,a
   09E0 A3                 2372 	inc	dptr
   09E1 E4                 2373 	clr	a
   09E2 93                 2374 	movc	a,@a+dptr
   09E3 FB                 2375 	mov	r3,a
   09E4 8D 04              2376 	mov	ar4,r5
   09E6 7E 00              2377 	mov	r6,#0x00
   09E8 7F 40              2378 	mov	r7,#0x40
   09EA C0 02              2379 	push	ar2
   09EC C0 03              2380 	push	ar3
   09EE C0 05              2381 	push	ar5
   09F0 E5*00              2382 	mov	a,_bp
   09F2 24 3D              2383 	add	a,#0x3d
   09F4 F8                 2384 	mov	r0,a
   09F5 E6                 2385 	mov	a,@r0
   09F6 C0 E0              2386 	push	acc
   09F8 08                 2387 	inc	r0
   09F9 E6                 2388 	mov	a,@r0
   09FA C0 E0              2389 	push	acc
   09FC 74r0F              2390 	mov	a,#00268$
   09FE C0 E0              2391 	push	acc
   0A00 74s0A              2392 	mov	a,#(00268$ >> 8)
   0A02 C0 E0              2393 	push	acc
   0A04 C0 02              2394 	push	ar2
   0A06 C0 03              2395 	push	ar3
   0A08 8C 82              2396 	mov	dpl,r4
   0A0A 8E 83              2397 	mov	dph,r6
   0A0C 8F F0              2398 	mov	b,r7
   0A0E 22                 2399 	ret
   0A0F                    2400 00268$:
   0A0F 15 81              2401 	dec	sp
   0A11 15 81              2402 	dec	sp
   0A13 D0 05              2403 	pop	ar5
   0A15 D0 03              2404 	pop	ar3
   0A17 D0 02              2405 	pop	ar2
                           2406 ;	../../../core/net/mac/cxmac.c:612: on();
   0A19 C0 05              2407 	push	ar5
   0A1B 12s00r00           2408 	lcall	_on
   0A1E D0 05              2409 	pop	ar5
   0A20                    2410 00178$:
                           2411 ;	../../../core/net/mac/cxmac.c:557: strobes++) {
   0A20 E5*00              2412 	mov	a,_bp
   0A22 24 07              2413 	add	a,#0x07
   0A24 F8                 2414 	mov	r0,a
   0A25 06                 2415 	inc	@r0
   0A26 B6 00 02           2416 	cjne	@r0,#0x00,00269$
   0A29 08                 2417 	inc	r0
   0A2A 06                 2418 	inc	@r0
   0A2B                    2419 00269$:
   0A2B 02s07r47           2420 	ljmp	00176$
   0A2E                    2421 00148$:
                           2422 ;	../../../core/net/mac/cxmac.c:622: if(got_strobe_ack && (packetbuf_attr(PACKETBUF_ATTR_RELIABLE) ||
   0A2E E5*00              2423 	mov	a,_bp
   0A30 24 09              2424 	add	a,#0x09
   0A32 F8                 2425 	mov	r0,a
   0A33 E6                 2426 	mov	a,@r0
   0A34 08                 2427 	inc	r0
   0A35 46                 2428 	orl	a,@r0
   0A36 60 39              2429 	jz	00150$
   0A38 75 82 0C           2430 	mov	dpl,#0x0C
   0A3B 12s00r00           2431 	lcall	_packetbuf_attr
   0A3E E5 82              2432 	mov	a,dpl
   0A40 85 83 F0           2433 	mov	b,dph
   0A43 45 F0              2434 	orl	a,b
   0A45 70 1F              2435 	jnz	00149$
                           2436 ;	../../../core/net/mac/cxmac.c:623: packetbuf_attr(PACKETBUF_ATTR_ERELIABLE) ||
   0A47 75 82 17           2437 	mov	dpl,#0x17
   0A4A 12s00r00           2438 	lcall	_packetbuf_attr
   0A4D E5 82              2439 	mov	a,dpl
   0A4F 85 83 F0           2440 	mov	b,dph
   0A52 45 F0              2441 	orl	a,b
   0A54 70 10              2442 	jnz	00149$
                           2443 ;	../../../core/net/mac/cxmac.c:624: packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
   0A56 75 82 0E           2444 	mov	dpl,#0x0E
   0A59 12s00r00           2445 	lcall	_packetbuf_attr
   0A5C AA 82              2446 	mov	r2,dpl
   0A5E AB 83              2447 	mov	r3,dph
   0A60 BA 02 0E           2448 	cjne	r2,#0x02,00150$
   0A63 BB 00 0B           2449 	cjne	r3,#0x00,00150$
   0A66                    2450 00149$:
                           2451 ;	../../../core/net/mac/cxmac.c:626: on(); /* Wait for ACK packet */
   0A66 12s00r00           2452 	lcall	_on
                           2453 ;	../../../core/net/mac/cxmac.c:627: waiting_for_packet = 1;
   0A69 90s00r09           2454 	mov	dptr,#_waiting_for_packet
   0A6C 74 01              2455 	mov	a,#0x01
   0A6E F0                 2456 	movx	@dptr,a
   0A6F 80 03              2457 	sjmp	00151$
   0A71                    2458 00150$:
                           2459 ;	../../../core/net/mac/cxmac.c:629: off();
   0A71 12s00r2E           2460 	lcall	_off
   0A74                    2461 00151$:
                           2462 ;	../../../core/net/mac/cxmac.c:636: queuebuf_to_packetbuf(packet);
   0A74 E5*00              2463 	mov	a,_bp
   0A76 24 46              2464 	add	a,#0x46
   0A78 F8                 2465 	mov	r0,a
   0A79 86 82              2466 	mov	dpl,@r0
   0A7B 08                 2467 	inc	r0
   0A7C 86 83              2468 	mov	dph,@r0
   0A7E 08                 2469 	inc	r0
   0A7F 86 F0              2470 	mov	b,@r0
   0A81 12s00r00           2471 	lcall	_queuebuf_to_packetbuf
                           2472 ;	../../../core/net/mac/cxmac.c:637: queuebuf_free(packet);
   0A84 E5*00              2473 	mov	a,_bp
   0A86 24 46              2474 	add	a,#0x46
   0A88 F8                 2475 	mov	r0,a
   0A89 86 82              2476 	mov	dpl,@r0
   0A8B 08                 2477 	inc	r0
   0A8C 86 83              2478 	mov	dph,@r0
   0A8E 08                 2479 	inc	r0
   0A8F 86 F0              2480 	mov	b,@r0
   0A91 12s00r00           2481 	lcall	_queuebuf_free
                           2482 ;	../../../core/net/mac/cxmac.c:640: if((is_broadcast || got_strobe_ack || is_streaming) && collisions == 0) {
   0A94 E5*00              2483 	mov	a,_bp
   0A96 24 41              2484 	add	a,#0x41
   0A98 F8                 2485 	mov	r0,a
   0A99 E6                 2486 	mov	a,@r0
   0A9A 08                 2487 	inc	r0
   0A9B 46                 2488 	orl	a,@r0
   0A9C 70 11              2489 	jnz	00159$
   0A9E E5*00              2490 	mov	a,_bp
   0AA0 24 09              2491 	add	a,#0x09
   0AA2 F8                 2492 	mov	r0,a
   0AA3 E6                 2493 	mov	a,@r0
   0AA4 08                 2494 	inc	r0
   0AA5 46                 2495 	orl	a,@r0
   0AA6 70 07              2496 	jnz	00159$
   0AA8 90s00r23           2497 	mov	dptr,#_is_streaming
   0AAB E0                 2498 	movx	a,@dptr
   0AAC FA                 2499 	mov	r2,a
   0AAD 60 5C              2500 	jz	00156$
   0AAF                    2501 00159$:
   0AAF E5*00              2502 	mov	a,_bp
   0AB1 24 4B              2503 	add	a,#0x4b
   0AB3 F8                 2504 	mov	r0,a
   0AB4 E6                 2505 	mov	a,@r0
   0AB5 70 54              2506 	jnz	00156$
                           2507 ;	../../../core/net/mac/cxmac.c:641: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
   0AB7 90s00r06           2508 	mov	dptr,#(_cc2430_rf_driver + 0x0006)
   0ABA E4                 2509 	clr	a
   0ABB 93                 2510 	movc	a,@a+dptr
   0ABC FA                 2511 	mov	r2,a
   0ABD A3                 2512 	inc	dptr
   0ABE E4                 2513 	clr	a
   0ABF 93                 2514 	movc	a,@a+dptr
   0AC0 FB                 2515 	mov	r3,a
   0AC1 C0 02              2516 	push	ar2
   0AC3 C0 03              2517 	push	ar3
   0AC5 12s00r00           2518 	lcall	_packetbuf_totlen
   0AC8 C8                 2519 	xch	a,r0
   0AC9 E5*00              2520 	mov	a,_bp
   0ACB 24 4F              2521 	add	a,#0x4f
   0ACD C8                 2522 	xch	a,r0
   0ACE A6 82              2523 	mov	@r0,dpl
   0AD0 08                 2524 	inc	r0
   0AD1 A6 83              2525 	mov	@r0,dph
   0AD3 12s00r00           2526 	lcall	_packetbuf_hdrptr
   0AD6 AE 82              2527 	mov	r6,dpl
   0AD8 AF 83              2528 	mov	r7,dph
   0ADA AC F0              2529 	mov	r4,b
   0ADC D0 03              2530 	pop	ar3
   0ADE D0 02              2531 	pop	ar2
   0AE0 C0 02              2532 	push	ar2
   0AE2 C0 03              2533 	push	ar3
   0AE4 E5*00              2534 	mov	a,_bp
   0AE6 24 4F              2535 	add	a,#0x4f
   0AE8 F8                 2536 	mov	r0,a
   0AE9 E6                 2537 	mov	a,@r0
   0AEA C0 E0              2538 	push	acc
   0AEC 08                 2539 	inc	r0
   0AED E6                 2540 	mov	a,@r0
   0AEE C0 E0              2541 	push	acc
   0AF0 74r03              2542 	mov	a,#00279$
   0AF2 C0 E0              2543 	push	acc
   0AF4 74s0B              2544 	mov	a,#(00279$ >> 8)
   0AF6 C0 E0              2545 	push	acc
   0AF8 C0 02              2546 	push	ar2
   0AFA C0 03              2547 	push	ar3
   0AFC 8E 82              2548 	mov	dpl,r6
   0AFE 8F 83              2549 	mov	dph,r7
   0B00 8C F0              2550 	mov	b,r4
   0B02 22                 2551 	ret
   0B03                    2552 00279$:
   0B03 15 81              2553 	dec	sp
   0B05 15 81              2554 	dec	sp
   0B07 D0 03              2555 	pop	ar3
   0B09 D0 02              2556 	pop	ar2
   0B0B                    2557 00156$:
                           2558 ;	../../../core/net/mac/cxmac.c:645: if(got_strobe_ack && !is_streaming) {
   0B0B E5*00              2559 	mov	a,_bp
   0B0D 24 09              2560 	add	a,#0x09
   0B0F F8                 2561 	mov	r0,a
   0B10 E6                 2562 	mov	a,@r0
   0B11 08                 2563 	inc	r0
   0B12 46                 2564 	orl	a,@r0
   0B13 60 2C              2565 	jz	00161$
   0B15 90s00r23           2566 	mov	dptr,#_is_streaming
   0B18 E0                 2567 	movx	a,@dptr
   0B19 FA                 2568 	mov	r2,a
   0B1A 70 25              2569 	jnz	00161$
                           2570 ;	../../../core/net/mac/cxmac.c:646: register_encounter(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), encounter_time);
   0B1C 75 82 19           2571 	mov	dpl,#0x19
   0B1F 12s00r00           2572 	lcall	_packetbuf_addr
   0B22 AA 82              2573 	mov	r2,dpl
   0B24 AB 83              2574 	mov	r3,dph
   0B26 AC F0              2575 	mov	r4,b
   0B28 E5*00              2576 	mov	a,_bp
   0B2A 24 05              2577 	add	a,#0x05
   0B2C F8                 2578 	mov	r0,a
   0B2D E6                 2579 	mov	a,@r0
   0B2E C0 E0              2580 	push	acc
   0B30 08                 2581 	inc	r0
   0B31 E6                 2582 	mov	a,@r0
   0B32 C0 E0              2583 	push	acc
   0B34 8A 82              2584 	mov	dpl,r2
   0B36 8B 83              2585 	mov	dph,r3
   0B38 8C F0              2586 	mov	b,r4
   0B3A 12s01rC9           2587 	lcall	_register_encounter
   0B3D 15 81              2588 	dec	sp
   0B3F 15 81              2589 	dec	sp
   0B41                    2590 00161$:
                           2591 ;	../../../core/net/mac/cxmac.c:649: watchdog_start();
   0B41 12s00r00           2592 	lcall	_watchdog_start
                           2593 ;	../../../core/net/mac/cxmac.c:669: we_are_sending = 0;
   0B44 90s00r0B           2594 	mov	dptr,#_we_are_sending
   0B47 E4                 2595 	clr	a
   0B48 F0                 2596 	movx	@dptr,a
                           2597 ;	../../../core/net/mac/cxmac.c:672: if(collisions == 0) {
   0B49 E5*00              2598 	mov	a,_bp
   0B4B 24 4B              2599 	add	a,#0x4b
   0B4D F8                 2600 	mov	r0,a
   0B4E E6                 2601 	mov	a,@r0
   0B4F 70 1E              2602 	jnz	00168$
                           2603 ;	../../../core/net/mac/cxmac.c:673: if(!is_broadcast && !got_strobe_ack) {
   0B51 E5*00              2604 	mov	a,_bp
   0B53 24 41              2605 	add	a,#0x41
   0B55 F8                 2606 	mov	r0,a
   0B56 E6                 2607 	mov	a,@r0
   0B57 08                 2608 	inc	r0
   0B58 46                 2609 	orl	a,@r0
   0B59 70 0F              2610 	jnz	00164$
   0B5B E5*00              2611 	mov	a,_bp
   0B5D 24 09              2612 	add	a,#0x09
   0B5F F8                 2613 	mov	r0,a
   0B60 E6                 2614 	mov	a,@r0
   0B61 08                 2615 	inc	r0
   0B62 46                 2616 	orl	a,@r0
   0B63 70 05              2617 	jnz	00164$
                           2618 ;	../../../core/net/mac/cxmac.c:674: return MAC_TX_NOACK;
   0B65 90 00 02           2619 	mov	dptr,#0x0002
   0B68 80 0F              2620 	sjmp	00180$
   0B6A                    2621 00164$:
                           2622 ;	../../../core/net/mac/cxmac.c:676: return MAC_TX_OK;
   0B6A 90 00 00           2623 	mov	dptr,#0x0000
   0B6D 80 0A              2624 	sjmp	00180$
   0B6F                    2625 00168$:
                           2626 ;	../../../core/net/mac/cxmac.c:679: someone_is_sending++;
   0B6F 90s00r0A           2627 	mov	dptr,#_someone_is_sending
   0B72 E0                 2628 	movx	a,@dptr
   0B73 24 01              2629 	add	a,#0x01
   0B75 F0                 2630 	movx	@dptr,a
                           2631 ;	../../../core/net/mac/cxmac.c:680: return MAC_TX_COLLISION;
   0B76 90 00 01           2632 	mov	dptr,#0x0001
   0B79                    2633 00180$:
   0B79 85*00 81           2634 	mov	sp,_bp
   0B7C D0*00              2635 	pop	_bp
   0B7E 22                 2636 	ret
                           2637 ;------------------------------------------------------------
                           2638 ;Allocation info for local variables in function 'qsend_packet'
                           2639 ;------------------------------------------------------------
                           2640 ;ptr                       Allocated to stack - offset -5
                           2641 ;sent                      Allocated to registers r2 r3 
                           2642 ;ret                       Allocated to registers r4 r5 
                           2643 ;------------------------------------------------------------
                           2644 ;	../../../core/net/mac/cxmac.c:686: qsend_packet(mac_callback_t sent, void *ptr)
                           2645 ;	-----------------------------------------
                           2646 ;	 function qsend_packet
                           2647 ;	-----------------------------------------
   0B7F                    2648 _qsend_packet:
   0B7F C0*00              2649 	push	_bp
   0B81 85 81*00           2650 	mov	_bp,sp
   0B84 AA 82              2651 	mov	r2,dpl
   0B86 AB 83              2652 	mov	r3,dph
                           2653 ;	../../../core/net/mac/cxmac.c:689: if(someone_is_sending) {
   0B88 90s00r0A           2654 	mov	dptr,#_someone_is_sending
   0B8B E0                 2655 	movx	a,@dptr
   0B8C FC                 2656 	mov	r4,a
   0B8D 60 2F              2657 	jz	00102$
                           2658 ;	../../../core/net/mac/cxmac.c:692: RIMESTATS_ADD(sendingdrop);
   0B8F 90s00r3C           2659 	mov	dptr,#(_rimestats + 0x003c)
   0B92 E0                 2660 	movx	a,@dptr
   0B93 FC                 2661 	mov	r4,a
   0B94 A3                 2662 	inc	dptr
   0B95 E0                 2663 	movx	a,@dptr
   0B96 FD                 2664 	mov	r5,a
   0B97 A3                 2665 	inc	dptr
   0B98 E0                 2666 	movx	a,@dptr
   0B99 FE                 2667 	mov	r6,a
   0B9A A3                 2668 	inc	dptr
   0B9B E0                 2669 	movx	a,@dptr
   0B9C FF                 2670 	mov	r7,a
   0B9D 0C                 2671 	inc	r4
   0B9E BC 00 09           2672 	cjne	r4,#0x00,00108$
   0BA1 0D                 2673 	inc	r5
   0BA2 BD 00 05           2674 	cjne	r5,#0x00,00108$
   0BA5 0E                 2675 	inc	r6
   0BA6 BE 00 01           2676 	cjne	r6,#0x00,00108$
   0BA9 0F                 2677 	inc	r7
   0BAA                    2678 00108$:
   0BAA 90s00r3C           2679 	mov	dptr,#(_rimestats + 0x003c)
   0BAD EC                 2680 	mov	a,r4
   0BAE F0                 2681 	movx	@dptr,a
   0BAF A3                 2682 	inc	dptr
   0BB0 ED                 2683 	mov	a,r5
   0BB1 F0                 2684 	movx	@dptr,a
   0BB2 A3                 2685 	inc	dptr
   0BB3 EE                 2686 	mov	a,r6
   0BB4 F0                 2687 	movx	@dptr,a
   0BB5 A3                 2688 	inc	dptr
   0BB6 EF                 2689 	mov	a,r7
   0BB7 F0                 2690 	movx	@dptr,a
                           2691 ;	../../../core/net/mac/cxmac.c:693: ret = MAC_TX_COLLISION;
   0BB8 7C 01              2692 	mov	r4,#0x01
   0BBA 7D 00              2693 	mov	r5,#0x00
   0BBC 80 13              2694 	sjmp	00103$
   0BBE                    2695 00102$:
                           2696 ;	../../../core/net/mac/cxmac.c:696: ret = send_packet();
   0BBE C0 02              2697 	push	ar2
   0BC0 C0 03              2698 	push	ar3
   0BC2 12s02rFB           2699 	lcall	_send_packet
   0BC5 AE 82              2700 	mov	r6,dpl
   0BC7 AF 83              2701 	mov	r7,dph
   0BC9 D0 03              2702 	pop	ar3
   0BCB D0 02              2703 	pop	ar2
   0BCD 8E 04              2704 	mov	ar4,r6
   0BCF 8F 05              2705 	mov	ar5,r7
   0BD1                    2706 00103$:
                           2707 ;	../../../core/net/mac/cxmac.c:699: mac_call_sent_callback(sent, ptr, ret, 1);
   0BD1 74 01              2708 	mov	a,#0x01
   0BD3 C0 E0              2709 	push	acc
   0BD5 E4                 2710 	clr	a
   0BD6 C0 E0              2711 	push	acc
   0BD8 C0 04              2712 	push	ar4
   0BDA C0 05              2713 	push	ar5
   0BDC E5*00              2714 	mov	a,_bp
   0BDE 24 FB              2715 	add	a,#0xfb
   0BE0 F8                 2716 	mov	r0,a
   0BE1 E6                 2717 	mov	a,@r0
   0BE2 C0 E0              2718 	push	acc
   0BE4 08                 2719 	inc	r0
   0BE5 E6                 2720 	mov	a,@r0
   0BE6 C0 E0              2721 	push	acc
   0BE8 08                 2722 	inc	r0
   0BE9 E6                 2723 	mov	a,@r0
   0BEA C0 E0              2724 	push	acc
   0BEC 8A 82              2725 	mov	dpl,r2
   0BEE 8B 83              2726 	mov	dph,r3
   0BF0 12s00r00           2727 	lcall	_mac_call_sent_callback
   0BF3 E5 81              2728 	mov	a,sp
   0BF5 24 F9              2729 	add	a,#0xf9
   0BF7 F5 81              2730 	mov	sp,a
   0BF9 D0*00              2731 	pop	_bp
   0BFB 22                 2732 	ret
                           2733 ;------------------------------------------------------------
                           2734 ;Allocation info for local variables in function 'input_packet'
                           2735 ;------------------------------------------------------------
                           2736 ;hdr                       Allocated to registers r2 r3 r4 
                           2737 ;sloc0                     Allocated to stack - offset 1
                           2738 ;------------------------------------------------------------
                           2739 ;	../../../core/net/mac/cxmac.c:703: input_packet(void)
                           2740 ;	-----------------------------------------
                           2741 ;	 function input_packet
                           2742 ;	-----------------------------------------
   0BFC                    2743 _input_packet:
   0BFC C0*00              2744 	push	_bp
   0BFE 85 81*00           2745 	mov	_bp,sp
   0C01 05 81              2746 	inc	sp
   0C03 05 81              2747 	inc	sp
                           2748 ;	../../../core/net/mac/cxmac.c:707: if(NETSTACK_FRAMER.parse()) {
   0C05 90s00r02           2749 	mov	dptr,#(_framer_nullmac + 0x0002)
   0C08 E4                 2750 	clr	a
   0C09 93                 2751 	movc	a,@a+dptr
   0C0A FA                 2752 	mov	r2,a
   0C0B A3                 2753 	inc	dptr
   0C0C E4                 2754 	clr	a
   0C0D 93                 2755 	movc	a,@a+dptr
   0C0E FB                 2756 	mov	r3,a
   0C0F 8A 82              2757 	mov	dpl,r2
   0C11 8B 83              2758 	mov	dph,r3
   0C13 12s00r00           2759 	lcall	__sdcc_call_dptr
   0C16 AA 82              2760 	mov	r2,dpl
   0C18 AB 83              2761 	mov	r3,dph
   0C1A EA                 2762 	mov	a,r2
   0C1B 4B                 2763 	orl	a,r3
   0C1C 70 03              2764 	jnz	00129$
   0C1E 02s0Er0C           2765 	ljmp	00119$
   0C21                    2766 00129$:
                           2767 ;	../../../core/net/mac/cxmac.c:708: hdr = packetbuf_dataptr();
   0C21 12s00r00           2768 	lcall	_packetbuf_dataptr
                           2769 ;	../../../core/net/mac/cxmac.c:710: if(hdr->dispatch != DISPATCH) {
   0C24 AA 82              2770 	mov	r2,dpl
   0C26 AB 83              2771 	mov	r3,dph
   0C28 AC F0              2772 	mov	r4,b
   0C2A 12s00r00           2773 	lcall	__gptrget
   0C2D 70 03              2774 	jnz	00130$
   0C2F 02s0CrBB           2775 	ljmp	00115$
   0C32                    2776 00130$:
                           2777 ;	../../../core/net/mac/cxmac.c:711: someone_is_sending = 0;
   0C32 90s00r0A           2778 	mov	dptr,#_someone_is_sending
   0C35 E4                 2779 	clr	a
   0C36 F0                 2780 	movx	@dptr,a
                           2781 ;	../../../core/net/mac/cxmac.c:713: &rimeaddr_node_addr) ||
                           2782 ;	../../../core/net/mac/cxmac.c:712: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
   0C37 75 82 19           2783 	mov	dpl,#0x19
   0C3A 12s00r00           2784 	lcall	_packetbuf_addr
   0C3D AD 82              2785 	mov	r5,dpl
   0C3F AE 83              2786 	mov	r6,dph
   0C41 AF F0              2787 	mov	r7,b
   0C43 74r00              2788 	mov	a,#_rimeaddr_node_addr
   0C45 C0 E0              2789 	push	acc
   0C47 74s00              2790 	mov	a,#(_rimeaddr_node_addr >> 8)
   0C49 C0 E0              2791 	push	acc
   0C4B E4                 2792 	clr	a
   0C4C C0 E0              2793 	push	acc
   0C4E 8D 82              2794 	mov	dpl,r5
   0C50 8E 83              2795 	mov	dph,r6
   0C52 8F F0              2796 	mov	b,r7
   0C54 12s00r00           2797 	lcall	_rimeaddr_cmp
   0C57 AD 82              2798 	mov	r5,dpl
   0C59 AE 83              2799 	mov	r6,dph
   0C5B 15 81              2800 	dec	sp
   0C5D 15 81              2801 	dec	sp
   0C5F 15 81              2802 	dec	sp
   0C61 ED                 2803 	mov	a,r5
   0C62 4E                 2804 	orl	a,r6
   0C63 70 32              2805 	jnz	00101$
                           2806 ;	../../../core/net/mac/cxmac.c:715: &rimeaddr_null)) {
                           2807 ;	../../../core/net/mac/cxmac.c:714: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
   0C65 75 82 19           2808 	mov	dpl,#0x19
   0C68 12s00r00           2809 	lcall	_packetbuf_addr
   0C6B AD 82              2810 	mov	r5,dpl
   0C6D AE 83              2811 	mov	r6,dph
   0C6F AF F0              2812 	mov	r7,b
   0C71 74r00              2813 	mov	a,#_rimeaddr_null
   0C73 C0 E0              2814 	push	acc
   0C75 74s00              2815 	mov	a,#(_rimeaddr_null >> 8)
   0C77 C0 E0              2816 	push	acc
   0C79 74 80              2817 	mov	a,#0x80
   0C7B C0 E0              2818 	push	acc
   0C7D 8D 82              2819 	mov	dpl,r5
   0C7F 8E 83              2820 	mov	dph,r6
   0C81 8F F0              2821 	mov	b,r7
   0C83 12s00r00           2822 	lcall	_rimeaddr_cmp
   0C86 AD 82              2823 	mov	r5,dpl
   0C88 AE 83              2824 	mov	r6,dph
   0C8A 15 81              2825 	dec	sp
   0C8C 15 81              2826 	dec	sp
   0C8E 15 81              2827 	dec	sp
   0C90 ED                 2828 	mov	a,r5
   0C91 4E                 2829 	orl	a,r6
   0C92 70 03              2830 	jnz	00132$
   0C94 02s0Er0C           2831 	ljmp	00119$
   0C97                    2832 00132$:
   0C97                    2833 00101$:
                           2834 ;	../../../core/net/mac/cxmac.c:721: off();
   0C97 12s00r2E           2835 	lcall	_off
                           2836 ;	../../../core/net/mac/cxmac.c:737: waiting_for_packet = 0;
   0C9A 90s00r09           2837 	mov	dptr,#_waiting_for_packet
   0C9D E4                 2838 	clr	a
   0C9E F0                 2839 	movx	@dptr,a
                           2840 ;	../../../core/net/mac/cxmac.c:740: NETSTACK_MAC.input();
   0C9F 90s00r07           2841 	mov	dptr,#(_csma_driver + 0x0007)
   0CA2 E4                 2842 	clr	a
   0CA3 93                 2843 	movc	a,@a+dptr
   0CA4 FD                 2844 	mov	r5,a
   0CA5 A3                 2845 	inc	dptr
   0CA6 E4                 2846 	clr	a
   0CA7 93                 2847 	movc	a,@a+dptr
   0CA8 FE                 2848 	mov	r6,a
   0CA9 C0 05              2849 	push	ar5
   0CAB C0 06              2850 	push	ar6
   0CAD 8D 82              2851 	mov	dpl,r5
   0CAF 8E 83              2852 	mov	dph,r6
   0CB1 12s00r00           2853 	lcall	__sdcc_call_dptr
   0CB4 D0 06              2854 	pop	ar6
   0CB6 D0 05              2855 	pop	ar5
                           2856 ;	../../../core/net/mac/cxmac.c:741: return;
   0CB8 02s0Er0C           2857 	ljmp	00119$
   0CBB                    2858 00115$:
                           2859 ;	../../../core/net/mac/cxmac.c:746: } else if(hdr->type == TYPE_STROBE) {
   0CBB 0A                 2860 	inc	r2
   0CBC BA 00 01           2861 	cjne	r2,#0x00,00134$
   0CBF 0B                 2862 	inc	r3
   0CC0                    2863 00134$:
   0CC0 8A 82              2864 	mov	dpl,r2
   0CC2 8B 83              2865 	mov	dph,r3
   0CC4 8C F0              2866 	mov	b,r4
   0CC6 12s00r00           2867 	lcall	__gptrget
   0CC9 FD                 2868 	mov	r5,a
   0CCA BD 10 02           2869 	cjne	r5,#0x10,00135$
   0CCD 80 03              2870 	sjmp	00136$
   0CCF                    2871 00135$:
   0CCF 02s0Er0C           2872 	ljmp	00119$
   0CD2                    2873 00136$:
                           2874 ;	../../../core/net/mac/cxmac.c:747: someone_is_sending = 2;
   0CD2 90s00r0A           2875 	mov	dptr,#_someone_is_sending
   0CD5 74 02              2876 	mov	a,#0x02
   0CD7 F0                 2877 	movx	@dptr,a
                           2878 ;	../../../core/net/mac/cxmac.c:750: &rimeaddr_node_addr)) {
                           2879 ;	../../../core/net/mac/cxmac.c:749: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
   0CD8 75 82 19           2880 	mov	dpl,#0x19
   0CDB C0 02              2881 	push	ar2
   0CDD C0 03              2882 	push	ar3
   0CDF C0 04              2883 	push	ar4
   0CE1 12s00r00           2884 	lcall	_packetbuf_addr
   0CE4 AD 82              2885 	mov	r5,dpl
   0CE6 AE 83              2886 	mov	r6,dph
   0CE8 AF F0              2887 	mov	r7,b
   0CEA 74r00              2888 	mov	a,#_rimeaddr_node_addr
   0CEC C0 E0              2889 	push	acc
   0CEE 74s00              2890 	mov	a,#(_rimeaddr_node_addr >> 8)
   0CF0 C0 E0              2891 	push	acc
   0CF2 E4                 2892 	clr	a
   0CF3 C0 E0              2893 	push	acc
   0CF5 8D 82              2894 	mov	dpl,r5
   0CF7 8E 83              2895 	mov	dph,r6
   0CF9 8F F0              2896 	mov	b,r7
   0CFB 12s00r00           2897 	lcall	_rimeaddr_cmp
   0CFE AD 82              2898 	mov	r5,dpl
   0D00 AE 83              2899 	mov	r6,dph
   0D02 15 81              2900 	dec	sp
   0D04 15 81              2901 	dec	sp
   0D06 15 81              2902 	dec	sp
   0D08 D0 04              2903 	pop	ar4
   0D0A D0 03              2904 	pop	ar3
   0D0C D0 02              2905 	pop	ar2
   0D0E ED                 2906 	mov	a,r5
   0D0F 4E                 2907 	orl	a,r6
   0D10 70 03              2908 	jnz	00137$
   0D12 02s0DrD4           2909 	ljmp	00109$
   0D15                    2910 00137$:
                           2911 ;	../../../core/net/mac/cxmac.c:757: hdr->type = TYPE_STROBE_ACK;
   0D15 8A 82              2912 	mov	dpl,r2
   0D17 8B 83              2913 	mov	dph,r3
   0D19 8C F0              2914 	mov	b,r4
   0D1B 74 13              2915 	mov	a,#0x13
   0D1D 12s00r00           2916 	lcall	__gptrput
                           2917 ;	../../../core/net/mac/cxmac.c:759: packetbuf_addr(PACKETBUF_ADDR_SENDER));
   0D20 75 82 18           2918 	mov	dpl,#0x18
   0D23 12s00r00           2919 	lcall	_packetbuf_addr
   0D26 AA 82              2920 	mov	r2,dpl
   0D28 AB 83              2921 	mov	r3,dph
   0D2A AC F0              2922 	mov	r4,b
                           2923 ;	../../../core/net/mac/cxmac.c:758: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER,
   0D2C C0 02              2924 	push	ar2
   0D2E C0 03              2925 	push	ar3
   0D30 C0 04              2926 	push	ar4
   0D32 75 82 19           2927 	mov	dpl,#0x19
   0D35 12s00r00           2928 	lcall	_packetbuf_set_addr
   0D38 15 81              2929 	dec	sp
   0D3A 15 81              2930 	dec	sp
   0D3C 15 81              2931 	dec	sp
                           2932 ;	../../../core/net/mac/cxmac.c:760: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
   0D3E 74r00              2933 	mov	a,#_rimeaddr_node_addr
   0D40 C0 E0              2934 	push	acc
   0D42 74s00              2935 	mov	a,#(_rimeaddr_node_addr >> 8)
   0D44 C0 E0              2936 	push	acc
   0D46 E4                 2937 	clr	a
   0D47 C0 E0              2938 	push	acc
   0D49 75 82 18           2939 	mov	dpl,#0x18
   0D4C 12s00r00           2940 	lcall	_packetbuf_set_addr
   0D4F 15 81              2941 	dec	sp
   0D51 15 81              2942 	dec	sp
   0D53 15 81              2943 	dec	sp
                           2944 ;	../../../core/net/mac/cxmac.c:761: packetbuf_compact();
   0D55 12s00r00           2945 	lcall	_packetbuf_compact
                           2946 ;	../../../core/net/mac/cxmac.c:762: if(NETSTACK_FRAMER.create()) {
   0D58 90s00r00           2947 	mov	dptr,#_framer_nullmac
   0D5B E4                 2948 	clr	a
   0D5C 93                 2949 	movc	a,@a+dptr
   0D5D FA                 2950 	mov	r2,a
   0D5E A3                 2951 	inc	dptr
   0D5F E4                 2952 	clr	a
   0D60 93                 2953 	movc	a,@a+dptr
   0D61 FB                 2954 	mov	r3,a
   0D62 8A 82              2955 	mov	dpl,r2
   0D64 8B 83              2956 	mov	dph,r3
   0D66 12s00r00           2957 	lcall	__sdcc_call_dptr
   0D69 AA 82              2958 	mov	r2,dpl
   0D6B AB 83              2959 	mov	r3,dph
   0D6D EA                 2960 	mov	a,r2
   0D6E 4B                 2961 	orl	a,r3
   0D6F 70 03              2962 	jnz	00139$
   0D71 02s0Er0C           2963 	ljmp	00110$
   0D74                    2964 00139$:
                           2965 ;	../../../core/net/mac/cxmac.c:765: someone_is_sending = 1;
   0D74 90s00r0A           2966 	mov	dptr,#_someone_is_sending
   0D77 74 01              2967 	mov	a,#0x01
   0D79 F0                 2968 	movx	@dptr,a
                           2969 ;	../../../core/net/mac/cxmac.c:766: waiting_for_packet = 1;
   0D7A 90s00r09           2970 	mov	dptr,#_waiting_for_packet
   0D7D 74 01              2971 	mov	a,#0x01
   0D7F F0                 2972 	movx	@dptr,a
                           2973 ;	../../../core/net/mac/cxmac.c:767: on();
   0D80 12s00r00           2974 	lcall	_on
                           2975 ;	../../../core/net/mac/cxmac.c:768: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
   0D83 90s00r06           2976 	mov	dptr,#(_cc2430_rf_driver + 0x0006)
   0D86 E4                 2977 	clr	a
   0D87 93                 2978 	movc	a,@a+dptr
   0D88 FA                 2979 	mov	r2,a
   0D89 A3                 2980 	inc	dptr
   0D8A E4                 2981 	clr	a
   0D8B 93                 2982 	movc	a,@a+dptr
   0D8C FB                 2983 	mov	r3,a
   0D8D C0 02              2984 	push	ar2
   0D8F C0 03              2985 	push	ar3
   0D91 12s00r00           2986 	lcall	_packetbuf_totlen
   0D94 A8*00              2987 	mov	r0,_bp
   0D96 08                 2988 	inc	r0
   0D97 A6 82              2989 	mov	@r0,dpl
   0D99 08                 2990 	inc	r0
   0D9A A6 83              2991 	mov	@r0,dph
   0D9C 12s00r00           2992 	lcall	_packetbuf_hdrptr
   0D9F AE 82              2993 	mov	r6,dpl
   0DA1 AF 83              2994 	mov	r7,dph
   0DA3 AC F0              2995 	mov	r4,b
   0DA5 D0 03              2996 	pop	ar3
   0DA7 D0 02              2997 	pop	ar2
   0DA9 C0 02              2998 	push	ar2
   0DAB C0 03              2999 	push	ar3
   0DAD A8*00              3000 	mov	r0,_bp
   0DAF 08                 3001 	inc	r0
   0DB0 E6                 3002 	mov	a,@r0
   0DB1 C0 E0              3003 	push	acc
   0DB3 08                 3004 	inc	r0
   0DB4 E6                 3005 	mov	a,@r0
   0DB5 C0 E0              3006 	push	acc
   0DB7 74rCA              3007 	mov	a,#00140$
   0DB9 C0 E0              3008 	push	acc
   0DBB 74s0D              3009 	mov	a,#(00140$ >> 8)
   0DBD C0 E0              3010 	push	acc
   0DBF C0 02              3011 	push	ar2
   0DC1 C0 03              3012 	push	ar3
   0DC3 8E 82              3013 	mov	dpl,r6
   0DC5 8F 83              3014 	mov	dph,r7
   0DC7 8C F0              3015 	mov	b,r4
   0DC9 22                 3016 	ret
   0DCA                    3017 00140$:
   0DCA 15 81              3018 	dec	sp
   0DCC 15 81              3019 	dec	sp
   0DCE D0 03              3020 	pop	ar3
   0DD0 D0 02              3021 	pop	ar2
   0DD2 80 38              3022 	sjmp	00110$
   0DD4                    3023 00109$:
                           3024 ;	../../../core/net/mac/cxmac.c:774: &rimeaddr_null)) {
                           3025 ;	../../../core/net/mac/cxmac.c:773: } else if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
   0DD4 75 82 19           3026 	mov	dpl,#0x19
   0DD7 12s00r00           3027 	lcall	_packetbuf_addr
   0DDA AA 82              3028 	mov	r2,dpl
   0DDC AB 83              3029 	mov	r3,dph
   0DDE AC F0              3030 	mov	r4,b
   0DE0 74r00              3031 	mov	a,#_rimeaddr_null
   0DE2 C0 E0              3032 	push	acc
   0DE4 74s00              3033 	mov	a,#(_rimeaddr_null >> 8)
   0DE6 C0 E0              3034 	push	acc
   0DE8 74 80              3035 	mov	a,#0x80
   0DEA C0 E0              3036 	push	acc
   0DEC 8A 82              3037 	mov	dpl,r2
   0DEE 8B 83              3038 	mov	dph,r3
   0DF0 8C F0              3039 	mov	b,r4
   0DF2 12s00r00           3040 	lcall	_rimeaddr_cmp
   0DF5 AA 82              3041 	mov	r2,dpl
   0DF7 AB 83              3042 	mov	r3,dph
   0DF9 15 81              3043 	dec	sp
   0DFB 15 81              3044 	dec	sp
   0DFD 15 81              3045 	dec	sp
   0DFF EA                 3046 	mov	a,r2
   0E00 4B                 3047 	orl	a,r3
   0E01 60 09              3048 	jz	00110$
                           3049 ;	../../../core/net/mac/cxmac.c:779: waiting_for_packet = 1;
   0E03 90s00r09           3050 	mov	dptr,#_waiting_for_packet
   0E06 74 01              3051 	mov	a,#0x01
   0E08 F0                 3052 	movx	@dptr,a
                           3053 ;	../../../core/net/mac/cxmac.c:780: on();
   0E09 12s00r00           3054 	lcall	_on
   0E0C                    3055 00110$:
                           3056 ;	../../../core/net/mac/cxmac.c:787: return;
                           3057 ;	../../../core/net/mac/cxmac.c:793: } else if(hdr->type == TYPE_STROBE_ACK) {
   0E0C                    3058 00119$:
   0E0C 85*00 81           3059 	mov	sp,_bp
   0E0F D0*00              3060 	pop	_bp
   0E11 22                 3061 	ret
                           3062 ;------------------------------------------------------------
                           3063 ;Allocation info for local variables in function 'cxmac_set_announcement_radio_txpower'
                           3064 ;------------------------------------------------------------
                           3065 ;txpower                   Allocated to registers 
                           3066 ;------------------------------------------------------------
                           3067 ;	../../../core/net/mac/cxmac.c:853: cxmac_set_announcement_radio_txpower(int txpower)
                           3068 ;	-----------------------------------------
                           3069 ;	 function cxmac_set_announcement_radio_txpower
                           3070 ;	-----------------------------------------
   0E12                    3071 _cxmac_set_announcement_radio_txpower:
                           3072 ;	../../../core/net/mac/cxmac.c:858: }
   0E12 22                 3073 	ret
                           3074 ;------------------------------------------------------------
                           3075 ;Allocation info for local variables in function 'cxmac_init'
                           3076 ;------------------------------------------------------------
                           3077 ;------------------------------------------------------------
                           3078 ;	../../../core/net/mac/cxmac.c:861: cxmac_init(void)
                           3079 ;	-----------------------------------------
                           3080 ;	 function cxmac_init
                           3081 ;	-----------------------------------------
   0E13                    3082 _cxmac_init:
                           3083 ;	../../../core/net/mac/cxmac.c:863: radio_is_on = 0;
   0E13 90s00r0C           3084 	mov	dptr,#_radio_is_on
                           3085 ;	../../../core/net/mac/cxmac.c:864: waiting_for_packet = 0;
                           3086 ;	../../../core/net/mac/cxmac.c:865: PT_INIT(&pt);
   0E16 E4                 3087 	clr	a
   0E17 F0                 3088 	movx	@dptr,a
   0E18 90s00r09           3089 	mov	dptr,#_waiting_for_packet
   0E1B F0                 3090 	movx	@dptr,a
   0E1C 90s00r00           3091 	mov	dptr,#_pt
   0E1F F0                 3092 	movx	@dptr,a
   0E20 A3                 3093 	inc	dptr
   0E21 F0                 3094 	movx	@dptr,a
                           3095 ;	../../../core/net/mac/cxmac.c:869: cxmac_is_on = 1;
   0E22 90s00r08           3096 	mov	dptr,#_cxmac_is_on
   0E25 74 01              3097 	mov	a,#0x01
   0E27 F0                 3098 	movx	@dptr,a
                           3099 ;	../../../core/net/mac/cxmac.c:872: list_init(encounter_list);
   0E28 90s00r10           3100 	mov	dptr,#_encounter_list
   0E2B E0                 3101 	movx	a,@dptr
   0E2C FA                 3102 	mov	r2,a
   0E2D A3                 3103 	inc	dptr
   0E2E E0                 3104 	movx	a,@dptr
   0E2F FB                 3105 	mov	r3,a
   0E30 A3                 3106 	inc	dptr
   0E31 E0                 3107 	movx	a,@dptr
   0E32 FC                 3108 	mov	r4,a
   0E33 8A 82              3109 	mov	dpl,r2
   0E35 8B 83              3110 	mov	dph,r3
   0E37 8C F0              3111 	mov	b,r4
   0E39 12s00r00           3112 	lcall	_list_init
                           3113 ;	../../../core/net/mac/cxmac.c:873: memb_init(&encounter_memb);
   0E3C 90s00r13           3114 	mov	dptr,#_encounter_memb
   0E3F 75 F0 00           3115 	mov	b,#0x00
   0E42 12s00r00           3116 	lcall	_memb_init
                           3117 ;	../../../core/net/mac/cxmac.c:882: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
   0E45 90 00 1F           3118 	mov	dptr,#0x001F
   0E48 02s00r8D           3119 	ljmp	_cschedule_powercycle
                           3120 ;------------------------------------------------------------
                           3121 ;Allocation info for local variables in function 'turn_on'
                           3122 ;------------------------------------------------------------
                           3123 ;------------------------------------------------------------
                           3124 ;	../../../core/net/mac/cxmac.c:886: turn_on(void)
                           3125 ;	-----------------------------------------
                           3126 ;	 function turn_on
                           3127 ;	-----------------------------------------
   0E4B                    3128 _turn_on:
                           3129 ;	../../../core/net/mac/cxmac.c:888: cxmac_is_on = 1;
   0E4B 90s00r08           3130 	mov	dptr,#_cxmac_is_on
   0E4E 74 01              3131 	mov	a,#0x01
   0E50 F0                 3132 	movx	@dptr,a
                           3133 ;	../../../core/net/mac/cxmac.c:891: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
   0E51 90 00 1F           3134 	mov	dptr,#0x001F
   0E54 12s00r8D           3135 	lcall	_cschedule_powercycle
                           3136 ;	../../../core/net/mac/cxmac.c:892: return 1;
   0E57 90 00 01           3137 	mov	dptr,#0x0001
   0E5A 22                 3138 	ret
                           3139 ;------------------------------------------------------------
                           3140 ;Allocation info for local variables in function 'turn_off'
                           3141 ;------------------------------------------------------------
                           3142 ;keep_radio_on             Allocated to registers r2 r3 
                           3143 ;------------------------------------------------------------
                           3144 ;	../../../core/net/mac/cxmac.c:896: turn_off(int keep_radio_on)
                           3145 ;	-----------------------------------------
                           3146 ;	 function turn_off
                           3147 ;	-----------------------------------------
   0E5B                    3148 _turn_off:
   0E5B AA 82              3149 	mov	r2,dpl
   0E5D AB 83              3150 	mov	r3,dph
                           3151 ;	../../../core/net/mac/cxmac.c:898: cxmac_is_on = 0;
   0E5F 90s00r08           3152 	mov	dptr,#_cxmac_is_on
   0E62 E4                 3153 	clr	a
   0E63 F0                 3154 	movx	@dptr,a
                           3155 ;	../../../core/net/mac/cxmac.c:899: if(keep_radio_on) {
   0E64 EA                 3156 	mov	a,r2
   0E65 4B                 3157 	orl	a,r3
   0E66 60 11              3158 	jz	00102$
                           3159 ;	../../../core/net/mac/cxmac.c:900: return NETSTACK_RADIO.on();
   0E68 90s00r10           3160 	mov	dptr,#(_cc2430_rf_driver + 0x0010)
   0E6B E4                 3161 	clr	a
   0E6C 93                 3162 	movc	a,@a+dptr
   0E6D FA                 3163 	mov	r2,a
   0E6E A3                 3164 	inc	dptr
   0E6F E4                 3165 	clr	a
   0E70 93                 3166 	movc	a,@a+dptr
   0E71 FB                 3167 	mov	r3,a
   0E72 8A 82              3168 	mov	dpl,r2
   0E74 8B 83              3169 	mov	dph,r3
   0E76 02s00r00           3170 	ljmp	__sdcc_call_dptr
   0E79                    3171 00102$:
                           3172 ;	../../../core/net/mac/cxmac.c:902: return NETSTACK_RADIO.off();
   0E79 90s00r12           3173 	mov	dptr,#(_cc2430_rf_driver + 0x0012)
   0E7C E4                 3174 	clr	a
   0E7D 93                 3175 	movc	a,@a+dptr
   0E7E FA                 3176 	mov	r2,a
   0E7F A3                 3177 	inc	dptr
   0E80 E4                 3178 	clr	a
   0E81 93                 3179 	movc	a,@a+dptr
   0E82 FB                 3180 	mov	r3,a
   0E83 8A 82              3181 	mov	dpl,r2
   0E85 8B 83              3182 	mov	dph,r3
   0E87 02s00r00           3183 	ljmp	__sdcc_call_dptr
                           3184 ;------------------------------------------------------------
                           3185 ;Allocation info for local variables in function 'channel_check_interval'
                           3186 ;------------------------------------------------------------
                           3187 ;------------------------------------------------------------
                           3188 ;	../../../core/net/mac/cxmac.c:907: channel_check_interval(void)
                           3189 ;	-----------------------------------------
                           3190 ;	 function channel_check_interval
                           3191 ;	-----------------------------------------
   0E8A                    3192 _channel_check_interval:
                           3193 ;	../../../core/net/mac/cxmac.c:909: return (1ul * CLOCK_SECOND * DEFAULT_PERIOD) / RTIMER_ARCH_SECOND;
   0E8A 90 00 1F           3194 	mov	dptr,#0x001F
   0E8D 22                 3195 	ret
                           3196 	.area CSEG    (CODE)
                           3197 	.area CONST   (CODE)
   0000                    3198 _cxmac_driver:
   0000r0Fs00 80           3199 	.byte _str_0,(_str_0 >> 8),#0x80
   0003r13s0E              3200 	.byte _cxmac_init,(_cxmac_init >> 8)
   0005r7Fs0B              3201 	.byte _qsend_packet,(_qsend_packet >> 8)
   0007rFCs0B              3202 	.byte _input_packet,(_input_packet >> 8)
   0009r4Bs0E              3203 	.byte _turn_on,(_turn_on >> 8)
   000Br5Bs0E              3204 	.byte _turn_off,(_turn_off >> 8)
   000Dr8As0E              3205 	.byte _channel_check_interval,(_channel_check_interval >> 8)
   000F                    3206 _str_0:
   000F 43 58 2D 4D 41 43  3207 	.ascii "CX-MAC"
   0015 00                 3208 	.db 0x00
                           3209 	.area XINIT   (CODE)
   0000                    3210 __xinit__cxmac_config:
   0000 61 00              3211 	.byte #0x61,#0x00	; 97
   0002 E1 0E              3212 	.byte #0xE1,#0x0E	; 3809
   0004 65 10              3213 	.byte #0x65,#0x10	; 4197
   0006 54 00              3214 	.byte #0x54,#0x00	; 84
   0008                    3215 __xinit__cxmac_is_on:
   0008 00                 3216 	.db #0x00	; 0
   0009                    3217 __xinit__waiting_for_packet:
   0009 00                 3218 	.db #0x00	; 0
   000A                    3219 __xinit__someone_is_sending:
   000A 00                 3220 	.db #0x00	; 0
   000B                    3221 __xinit__we_are_sending:
   000B 00                 3222 	.db #0x00	; 0
   000C                    3223 __xinit__radio_is_on:
   000C 00                 3224 	.db #0x00	; 0
   000D                    3225 __xinit__encounter_list_list:
                           3226 ; generic printIvalPtr
   000D 00 00 00           3227 	.byte #0x00,#0x00,#0x00
   0010                    3228 __xinit__encounter_list:
   0010r0Ds00 00           3229 	.byte _encounter_list_list,(_encounter_list_list >> 8),#0x00
   0013                    3230 __xinit__encounter_memb:
   0013 07 00              3231 	.byte #0x07,#0x00	; 7
   0015 04 00              3232 	.byte #0x04,#0x00	; 4
   0017r03s00 00           3233 	.byte _encounter_memb_memb_count,(_encounter_memb_memb_count >> 8),#0x00
   001Ar07s00 00           3234 	.byte _encounter_memb_memb_mem,(_encounter_memb_memb_mem >> 8),#0x00
                           3235 	.area CABS    (ABS,CODE)
