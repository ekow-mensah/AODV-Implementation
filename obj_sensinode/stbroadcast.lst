                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:24:54 2018
                              5 ;--------------------------------------------------------
                              6 	.module stbroadcast
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _IRCON2_P2IF
                             13 	.globl _IRCON2_UTX0IF
                             14 	.globl _IRCON2_UTX1IF
                             15 	.globl _IRCON2_P1IF
                             16 	.globl _IRCON2_WDTIF
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _IRCON_DMAIF
                             26 	.globl _IRCON_T1IF
                             27 	.globl _IRCON_T2IF
                             28 	.globl _IRCON_T3IF
                             29 	.globl _IRCON_T4IF
                             30 	.globl _IRCON_P0IF
                             31 	.globl _IRCON_STIF
                             32 	.globl _IEN1_DMAIE
                             33 	.globl _IEN1_T1IE
                             34 	.globl _IEN1_T2IE
                             35 	.globl _IEN1_T3IE
                             36 	.globl _IEN1_T4IE
                             37 	.globl _IEN1_P0IE
                             38 	.globl _IEN0_RFERRIE
                             39 	.globl _IEN0_ADCIE
                             40 	.globl _IEN0_URX0IE
                             41 	.globl _IEN0_URX1IE
                             42 	.globl _IEN0_ENCIE
                             43 	.globl _IEN0_STIE
                             44 	.globl _IEN0_EA
                             45 	.globl _EA
                             46 	.globl _P2_4
                             47 	.globl _P2_3
                             48 	.globl _P2_2
                             49 	.globl _P2_1
                             50 	.globl _P2_0
                             51 	.globl _S0CON_ENCIF_0
                             52 	.globl _S0CON_ENCIF_1
                             53 	.globl _P1_7
                             54 	.globl _P1_6
                             55 	.globl _P1_5
                             56 	.globl _P1_4
                             57 	.globl _P1_3
                             58 	.globl _P1_2
                             59 	.globl _P1_1
                             60 	.globl _P1_0
                             61 	.globl _TCON_IT0
                             62 	.globl _TCON_RFERRIF
                             63 	.globl _TCON_IT1
                             64 	.globl _TCON_URX0IF
                             65 	.globl _TCON_ADCIF
                             66 	.globl _TCON_URX1IF
                             67 	.globl _P0_0
                             68 	.globl _P0_1
                             69 	.globl _P0_2
                             70 	.globl _P0_3
                             71 	.globl _P0_4
                             72 	.globl _P0_5
                             73 	.globl _P0_6
                             74 	.globl _P0_7
                             75 	.globl _P2DIR
                             76 	.globl _P1DIR
                             77 	.globl _P0DIR
                             78 	.globl _U1GCR
                             79 	.globl _U1UCR
                             80 	.globl _U1BAUD
                             81 	.globl _U1BUF
                             82 	.globl _U1CSR
                             83 	.globl _P2INP
                             84 	.globl _P1INP
                             85 	.globl _P2SEL
                             86 	.globl _P1SEL
                             87 	.globl _P0SEL
                             88 	.globl _ADCCFG
                             89 	.globl _PERCFG
                             90 	.globl _B
                             91 	.globl _T4CC1
                             92 	.globl _T4CCTL1
                             93 	.globl _T4CC0
                             94 	.globl _T4CCTL0
                             95 	.globl _T4CTL
                             96 	.globl _T4CNT
                             97 	.globl _RFIF
                             98 	.globl _IRCON2
                             99 	.globl _T1CCTL2
                            100 	.globl _T1CCTL1
                            101 	.globl _T1CCTL0
                            102 	.globl _T1CTL
                            103 	.globl _T1CNTH
                            104 	.globl _T1CNTL
                            105 	.globl _RFST
                            106 	.globl _ACC
                            107 	.globl _T1CC2H
                            108 	.globl _T1CC2L
                            109 	.globl _T1CC1H
                            110 	.globl _T1CC1L
                            111 	.globl _T1CC0H
                            112 	.globl _T1CC0L
                            113 	.globl _RFD
                            114 	.globl _TIMIF
                            115 	.globl _DMAREQ
                            116 	.globl _DMAARM
                            117 	.globl _DMA0CFGH
                            118 	.globl _DMA0CFGL
                            119 	.globl _DMA1CFGH
                            120 	.globl _DMA1CFGL
                            121 	.globl _DMAIRQ
                            122 	.globl _PSW
                            123 	.globl _T3CC1
                            124 	.globl _T3CCTL1
                            125 	.globl _T3CC0
                            126 	.globl _T3CCTL0
                            127 	.globl _T3CTL
                            128 	.globl _T3CNT
                            129 	.globl _WDCTL
                            130 	.globl _T2CON
                            131 	.globl _MEMCTR
                            132 	.globl _CLKCON
                            133 	.globl _U0GCR
                            134 	.globl _U0UCR
                            135 	.globl _T2CNF
                            136 	.globl _U0BAUD
                            137 	.globl _U0BUF
                            138 	.globl _IRCON
                            139 	.globl _SLEEP
                            140 	.globl _RNDH
                            141 	.globl _RNDL
                            142 	.globl _ADCH
                            143 	.globl _ADCL
                            144 	.globl _IP1
                            145 	.globl _IEN1
                            146 	.globl _RCCTL
                            147 	.globl _ADCCON3
                            148 	.globl _ADCCON2
                            149 	.globl _ADCCON1
                            150 	.globl _ENCCS
                            151 	.globl _ENCDO
                            152 	.globl _ENCDI
                            153 	.globl _FWDATA
                            154 	.globl _FCTL
                            155 	.globl _FADDRH
                            156 	.globl _FADDRL
                            157 	.globl _FWT
                            158 	.globl _IP0
                            159 	.globl _IEN0
                            160 	.globl _IE
                            161 	.globl _T2THD
                            162 	.globl _T2TLD
                            163 	.globl _T2CAPHPH
                            164 	.globl _T2CAPLPL
                            165 	.globl _T2OF2
                            166 	.globl _T2OF1
                            167 	.globl _T2OF0
                            168 	.globl _P2
                            169 	.globl _PSBANK
                            170 	.globl _FMAP
                            171 	.globl _T2PEROF2
                            172 	.globl _T2PEROF1
                            173 	.globl _T2PEROF0
                            174 	.globl _S1CON
                            175 	.globl _IEN2
                            176 	.globl _HSRC
                            177 	.globl _S0CON
                            178 	.globl _ST2
                            179 	.globl _ST1
                            180 	.globl _ST0
                            181 	.globl _T2CMP
                            182 	.globl __XPAGE
                            183 	.globl _DPS
                            184 	.globl _RFIM
                            185 	.globl _P1
                            186 	.globl _P0INP
                            187 	.globl _P1IEN
                            188 	.globl _PICTL
                            189 	.globl _P2IFG
                            190 	.globl _P1IFG
                            191 	.globl _P0IFG
                            192 	.globl _TCON
                            193 	.globl _PCON
                            194 	.globl _U0CSR
                            195 	.globl _DPH1
                            196 	.globl _DPL1
                            197 	.globl _DPH0
                            198 	.globl _DPL0
                            199 	.globl _SP
                            200 	.globl _P0
                            201 	.globl _ADC_SHADOW
                            202 	.globl _U1BUF_SHADOW
                            203 	.globl _RFD_SHADOW
                            204 	.globl _U0BUF_SHADOW
                            205 	.globl _RFSTATUS
                            206 	.globl _CHIPID
                            207 	.globl _CHVER
                            208 	.globl _FSMTC1
                            209 	.globl _RXFIFOCNT
                            210 	.globl _IOCFG3
                            211 	.globl _IOCFG2
                            212 	.globl _IOCFG1
                            213 	.globl _IOCFG0
                            214 	.globl _SHORTADDRL
                            215 	.globl _SHORTADDRH
                            216 	.globl _PANIDL
                            217 	.globl _PANIDH
                            218 	.globl _IEEE_ADDR7
                            219 	.globl _IEEE_ADDR6
                            220 	.globl _IEEE_ADDR5
                            221 	.globl _IEEE_ADDR4
                            222 	.globl _IEEE_ADDR3
                            223 	.globl _IEEE_ADDR2
                            224 	.globl _IEEE_ADDR1
                            225 	.globl _IEEE_ADDR0
                            226 	.globl _DACTSTL
                            227 	.globl _DACTSTH
                            228 	.globl _ADCTSTL
                            229 	.globl _ADCTSTH
                            230 	.globl _FSMSTATE
                            231 	.globl _AGCCTRLL
                            232 	.globl _AGCCTRLH
                            233 	.globl _MANORL
                            234 	.globl _MANORH
                            235 	.globl _MANANDL
                            236 	.globl _MANANDH
                            237 	.globl _FSMTCL
                            238 	.globl _FSMTCH
                            239 	.globl _RFPWR
                            240 	.globl _CSPT
                            241 	.globl _CSPCTRL
                            242 	.globl _CSPZ
                            243 	.globl _CSPY
                            244 	.globl _CSPX
                            245 	.globl _FSCTRLL
                            246 	.globl _FSCTRLH
                            247 	.globl _RXCTRL1L
                            248 	.globl _RXCTRL1H
                            249 	.globl _RXCTRL0L
                            250 	.globl _RXCTRL0H
                            251 	.globl _TXCTRLL
                            252 	.globl _TXCTRLH
                            253 	.globl _SYNCWORDL
                            254 	.globl _SYNCWORDH
                            255 	.globl _RSSIL
                            256 	.globl _RSSIH
                            257 	.globl _MDMCTRL1L
                            258 	.globl _MDMCTRL1H
                            259 	.globl _MDMCTRL0L
                            260 	.globl _MDMCTRL0H
                            261 	.globl _stbroadcast_open
                            262 	.globl _stbroadcast_close
                            263 	.globl _stbroadcast_set_timer
                            264 	.globl _stbroadcast_send_stubborn
                            265 	.globl _stbroadcast_cancel
                            266 ;--------------------------------------------------------
                            267 ; special function registers
                            268 ;--------------------------------------------------------
                            269 	.area RSEG    (ABS,DATA)
   0000                     270 	.org 0x0000
                    0080    271 _P0	=	0x0080
                    0081    272 _SP	=	0x0081
                    0082    273 _DPL0	=	0x0082
                    0083    274 _DPH0	=	0x0083
                    0084    275 _DPL1	=	0x0084
                    0085    276 _DPH1	=	0x0085
                    0086    277 _U0CSR	=	0x0086
                    0087    278 _PCON	=	0x0087
                    0088    279 _TCON	=	0x0088
                    0089    280 _P0IFG	=	0x0089
                    008A    281 _P1IFG	=	0x008a
                    008B    282 _P2IFG	=	0x008b
                    008C    283 _PICTL	=	0x008c
                    008D    284 _P1IEN	=	0x008d
                    008F    285 _P0INP	=	0x008f
                    0090    286 _P1	=	0x0090
                    0091    287 _RFIM	=	0x0091
                    0092    288 _DPS	=	0x0092
                    0093    289 __XPAGE	=	0x0093
                    0094    290 _T2CMP	=	0x0094
                    0095    291 _ST0	=	0x0095
                    0096    292 _ST1	=	0x0096
                    0097    293 _ST2	=	0x0097
                    0098    294 _S0CON	=	0x0098
                    0099    295 _HSRC	=	0x0099
                    009A    296 _IEN2	=	0x009a
                    009B    297 _S1CON	=	0x009b
                    009C    298 _T2PEROF0	=	0x009c
                    009D    299 _T2PEROF1	=	0x009d
                    009E    300 _T2PEROF2	=	0x009e
                    009F    301 _FMAP	=	0x009f
                    009F    302 _PSBANK	=	0x009f
                    00A0    303 _P2	=	0x00a0
                    00A1    304 _T2OF0	=	0x00a1
                    00A2    305 _T2OF1	=	0x00a2
                    00A3    306 _T2OF2	=	0x00a3
                    00A4    307 _T2CAPLPL	=	0x00a4
                    00A5    308 _T2CAPHPH	=	0x00a5
                    00A6    309 _T2TLD	=	0x00a6
                    00A7    310 _T2THD	=	0x00a7
                    00A8    311 _IE	=	0x00a8
                    00A8    312 _IEN0	=	0x00a8
                    00A9    313 _IP0	=	0x00a9
                    00AB    314 _FWT	=	0x00ab
                    00AC    315 _FADDRL	=	0x00ac
                    00AD    316 _FADDRH	=	0x00ad
                    00AE    317 _FCTL	=	0x00ae
                    00AF    318 _FWDATA	=	0x00af
                    00B1    319 _ENCDI	=	0x00b1
                    00B2    320 _ENCDO	=	0x00b2
                    00B3    321 _ENCCS	=	0x00b3
                    00B4    322 _ADCCON1	=	0x00b4
                    00B5    323 _ADCCON2	=	0x00b5
                    00B6    324 _ADCCON3	=	0x00b6
                    00B7    325 _RCCTL	=	0x00b7
                    00B8    326 _IEN1	=	0x00b8
                    00B9    327 _IP1	=	0x00b9
                    00BA    328 _ADCL	=	0x00ba
                    00BB    329 _ADCH	=	0x00bb
                    00BC    330 _RNDL	=	0x00bc
                    00BD    331 _RNDH	=	0x00bd
                    00BE    332 _SLEEP	=	0x00be
                    00C0    333 _IRCON	=	0x00c0
                    00C1    334 _U0BUF	=	0x00c1
                    00C2    335 _U0BAUD	=	0x00c2
                    00C3    336 _T2CNF	=	0x00c3
                    00C4    337 _U0UCR	=	0x00c4
                    00C5    338 _U0GCR	=	0x00c5
                    00C6    339 _CLKCON	=	0x00c6
                    00C7    340 _MEMCTR	=	0x00c7
                    00C8    341 _T2CON	=	0x00c8
                    00C9    342 _WDCTL	=	0x00c9
                    00CA    343 _T3CNT	=	0x00ca
                    00CB    344 _T3CTL	=	0x00cb
                    00CC    345 _T3CCTL0	=	0x00cc
                    00CD    346 _T3CC0	=	0x00cd
                    00CE    347 _T3CCTL1	=	0x00ce
                    00CF    348 _T3CC1	=	0x00cf
                    00D0    349 _PSW	=	0x00d0
                    00D1    350 _DMAIRQ	=	0x00d1
                    00D2    351 _DMA1CFGL	=	0x00d2
                    00D3    352 _DMA1CFGH	=	0x00d3
                    00D4    353 _DMA0CFGL	=	0x00d4
                    00D5    354 _DMA0CFGH	=	0x00d5
                    00D6    355 _DMAARM	=	0x00d6
                    00D7    356 _DMAREQ	=	0x00d7
                    00D8    357 _TIMIF	=	0x00d8
                    00D9    358 _RFD	=	0x00d9
                    00DA    359 _T1CC0L	=	0x00da
                    00DB    360 _T1CC0H	=	0x00db
                    00DC    361 _T1CC1L	=	0x00dc
                    00DD    362 _T1CC1H	=	0x00dd
                    00DE    363 _T1CC2L	=	0x00de
                    00DF    364 _T1CC2H	=	0x00df
                    00E0    365 _ACC	=	0x00e0
                    00E1    366 _RFST	=	0x00e1
                    00E2    367 _T1CNTL	=	0x00e2
                    00E3    368 _T1CNTH	=	0x00e3
                    00E4    369 _T1CTL	=	0x00e4
                    00E5    370 _T1CCTL0	=	0x00e5
                    00E6    371 _T1CCTL1	=	0x00e6
                    00E7    372 _T1CCTL2	=	0x00e7
                    00E8    373 _IRCON2	=	0x00e8
                    00E9    374 _RFIF	=	0x00e9
                    00EA    375 _T4CNT	=	0x00ea
                    00EB    376 _T4CTL	=	0x00eb
                    00EC    377 _T4CCTL0	=	0x00ec
                    00ED    378 _T4CC0	=	0x00ed
                    00EE    379 _T4CCTL1	=	0x00ee
                    00EF    380 _T4CC1	=	0x00ef
                    00F0    381 _B	=	0x00f0
                    00F1    382 _PERCFG	=	0x00f1
                    00F2    383 _ADCCFG	=	0x00f2
                    00F3    384 _P0SEL	=	0x00f3
                    00F4    385 _P1SEL	=	0x00f4
                    00F5    386 _P2SEL	=	0x00f5
                    00F6    387 _P1INP	=	0x00f6
                    00F7    388 _P2INP	=	0x00f7
                    00F8    389 _U1CSR	=	0x00f8
                    00F9    390 _U1BUF	=	0x00f9
                    00FA    391 _U1BAUD	=	0x00fa
                    00FB    392 _U1UCR	=	0x00fb
                    00FC    393 _U1GCR	=	0x00fc
                    00FD    394 _P0DIR	=	0x00fd
                    00FE    395 _P1DIR	=	0x00fe
                    00FF    396 _P2DIR	=	0x00ff
                            397 ;--------------------------------------------------------
                            398 ; special function bits
                            399 ;--------------------------------------------------------
                            400 	.area RSEG    (ABS,DATA)
   0000                     401 	.org 0x0000
                    0087    402 _P0_7	=	0x0087
                    0086    403 _P0_6	=	0x0086
                    0085    404 _P0_5	=	0x0085
                    0084    405 _P0_4	=	0x0084
                    0083    406 _P0_3	=	0x0083
                    0082    407 _P0_2	=	0x0082
                    0081    408 _P0_1	=	0x0081
                    0080    409 _P0_0	=	0x0080
                    008F    410 _TCON_URX1IF	=	0x008f
                    008D    411 _TCON_ADCIF	=	0x008d
                    008B    412 _TCON_URX0IF	=	0x008b
                    008A    413 _TCON_IT1	=	0x008a
                    0089    414 _TCON_RFERRIF	=	0x0089
                    0088    415 _TCON_IT0	=	0x0088
                    0090    416 _P1_0	=	0x0090
                    0091    417 _P1_1	=	0x0091
                    0092    418 _P1_2	=	0x0092
                    0093    419 _P1_3	=	0x0093
                    0094    420 _P1_4	=	0x0094
                    0095    421 _P1_5	=	0x0095
                    0096    422 _P1_6	=	0x0096
                    0097    423 _P1_7	=	0x0097
                    0099    424 _S0CON_ENCIF_1	=	0x0099
                    0098    425 _S0CON_ENCIF_0	=	0x0098
                    00A0    426 _P2_0	=	0x00a0
                    00A1    427 _P2_1	=	0x00a1
                    00A2    428 _P2_2	=	0x00a2
                    00A3    429 _P2_3	=	0x00a3
                    00A4    430 _P2_4	=	0x00a4
                    00AF    431 _EA	=	0x00af
                    00AF    432 _IEN0_EA	=	0x00af
                    00AD    433 _IEN0_STIE	=	0x00ad
                    00AC    434 _IEN0_ENCIE	=	0x00ac
                    00AB    435 _IEN0_URX1IE	=	0x00ab
                    00AA    436 _IEN0_URX0IE	=	0x00aa
                    00A9    437 _IEN0_ADCIE	=	0x00a9
                    00A8    438 _IEN0_RFERRIE	=	0x00a8
                    00BD    439 _IEN1_P0IE	=	0x00bd
                    00BC    440 _IEN1_T4IE	=	0x00bc
                    00BB    441 _IEN1_T3IE	=	0x00bb
                    00BA    442 _IEN1_T2IE	=	0x00ba
                    00B9    443 _IEN1_T1IE	=	0x00b9
                    00B8    444 _IEN1_DMAIE	=	0x00b8
                    00C7    445 _IRCON_STIF	=	0x00c7
                    00C5    446 _IRCON_P0IF	=	0x00c5
                    00C4    447 _IRCON_T4IF	=	0x00c4
                    00C3    448 _IRCON_T3IF	=	0x00c3
                    00C2    449 _IRCON_T2IF	=	0x00c2
                    00C1    450 _IRCON_T1IF	=	0x00c1
                    00C0    451 _IRCON_DMAIF	=	0x00c0
                    00D0    452 _P	=	0x00d0
                    00D1    453 _F1	=	0x00d1
                    00D2    454 _OV	=	0x00d2
                    00D3    455 _RS0	=	0x00d3
                    00D4    456 _RS1	=	0x00d4
                    00D5    457 _F0	=	0x00d5
                    00D6    458 _AC	=	0x00d6
                    00D7    459 _CY	=	0x00d7
                    00EC    460 _IRCON2_WDTIF	=	0x00ec
                    00EB    461 _IRCON2_P1IF	=	0x00eb
                    00EA    462 _IRCON2_UTX1IF	=	0x00ea
                    00E9    463 _IRCON2_UTX0IF	=	0x00e9
                    00E8    464 _IRCON2_P2IF	=	0x00e8
                            465 ;--------------------------------------------------------
                            466 ; overlayable register banks
                            467 ;--------------------------------------------------------
                            468 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     469 	.ds 8
                            470 ;--------------------------------------------------------
                            471 ; internal ram data
                            472 ;--------------------------------------------------------
                            473 	.area DSEG    (DATA)
                            474 ;--------------------------------------------------------
                            475 ; overlayable items in internal ram 
                            476 ;--------------------------------------------------------
                            477 	.area OSEG    (OVR,DATA)
                            478 ;--------------------------------------------------------
                            479 ; indirectly addressable internal ram data
                            480 ;--------------------------------------------------------
                            481 	.area ISEG    (DATA)
                            482 ;--------------------------------------------------------
                            483 ; absolute internal ram data
                            484 ;--------------------------------------------------------
                            485 	.area IABS    (ABS,DATA)
                            486 	.area IABS    (ABS,DATA)
                            487 ;--------------------------------------------------------
                            488 ; bit data
                            489 ;--------------------------------------------------------
                            490 	.area BSEG    (BIT)
                            491 ;--------------------------------------------------------
                            492 ; paged external ram data
                            493 ;--------------------------------------------------------
                            494 	.area PSEG    (PAG,XDATA)
                            495 ;--------------------------------------------------------
                            496 ; external ram data
                            497 ;--------------------------------------------------------
                            498 	.area XSEG    (XDATA)
                    DF02    499 _MDMCTRL0H	=	0xdf02
                    DF03    500 _MDMCTRL0L	=	0xdf03
                    DF04    501 _MDMCTRL1H	=	0xdf04
                    DF05    502 _MDMCTRL1L	=	0xdf05
                    DF06    503 _RSSIH	=	0xdf06
                    DF07    504 _RSSIL	=	0xdf07
                    DF08    505 _SYNCWORDH	=	0xdf08
                    DF09    506 _SYNCWORDL	=	0xdf09
                    DF0A    507 _TXCTRLH	=	0xdf0a
                    DF0B    508 _TXCTRLL	=	0xdf0b
                    DF0C    509 _RXCTRL0H	=	0xdf0c
                    DF0D    510 _RXCTRL0L	=	0xdf0d
                    DF0E    511 _RXCTRL1H	=	0xdf0e
                    DF0F    512 _RXCTRL1L	=	0xdf0f
                    DF10    513 _FSCTRLH	=	0xdf10
                    DF11    514 _FSCTRLL	=	0xdf11
                    DF12    515 _CSPX	=	0xdf12
                    DF13    516 _CSPY	=	0xdf13
                    DF14    517 _CSPZ	=	0xdf14
                    DF15    518 _CSPCTRL	=	0xdf15
                    DF16    519 _CSPT	=	0xdf16
                    DF17    520 _RFPWR	=	0xdf17
                    DF20    521 _FSMTCH	=	0xdf20
                    DF21    522 _FSMTCL	=	0xdf21
                    DF22    523 _MANANDH	=	0xdf22
                    DF23    524 _MANANDL	=	0xdf23
                    DF24    525 _MANORH	=	0xdf24
                    DF25    526 _MANORL	=	0xdf25
                    DF26    527 _AGCCTRLH	=	0xdf26
                    DF27    528 _AGCCTRLL	=	0xdf27
                    DF39    529 _FSMSTATE	=	0xdf39
                    DF3A    530 _ADCTSTH	=	0xdf3a
                    DF3B    531 _ADCTSTL	=	0xdf3b
                    DF3C    532 _DACTSTH	=	0xdf3c
                    DF3D    533 _DACTSTL	=	0xdf3d
                    DF43    534 _IEEE_ADDR0	=	0xdf43
                    DF44    535 _IEEE_ADDR1	=	0xdf44
                    DF45    536 _IEEE_ADDR2	=	0xdf45
                    DF46    537 _IEEE_ADDR3	=	0xdf46
                    DF47    538 _IEEE_ADDR4	=	0xdf47
                    DF48    539 _IEEE_ADDR5	=	0xdf48
                    DF49    540 _IEEE_ADDR6	=	0xdf49
                    DF4A    541 _IEEE_ADDR7	=	0xdf4a
                    DF4B    542 _PANIDH	=	0xdf4b
                    DF4C    543 _PANIDL	=	0xdf4c
                    DF4D    544 _SHORTADDRH	=	0xdf4d
                    DF4E    545 _SHORTADDRL	=	0xdf4e
                    DF4F    546 _IOCFG0	=	0xdf4f
                    DF50    547 _IOCFG1	=	0xdf50
                    DF51    548 _IOCFG2	=	0xdf51
                    DF52    549 _IOCFG3	=	0xdf52
                    DF53    550 _RXFIFOCNT	=	0xdf53
                    DF54    551 _FSMTC1	=	0xdf54
                    DF60    552 _CHVER	=	0xdf60
                    DF61    553 _CHIPID	=	0xdf61
                    DF62    554 _RFSTATUS	=	0xdf62
                    DFC1    555 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    556 _RFD_SHADOW	=	0xdfd9
                    DFF9    557 _U1BUF_SHADOW	=	0xdff9
                    DFBA    558 _ADC_SHADOW	=	0xdfba
                            559 ;--------------------------------------------------------
                            560 ; absolute external ram data
                            561 ;--------------------------------------------------------
                            562 	.area XABS    (ABS,XDATA)
                            563 ;--------------------------------------------------------
                            564 ; external initialized ram data
                            565 ;--------------------------------------------------------
                            566 	.area XISEG   (XDATA)
                            567 	.area HOME    (CODE)
                            568 	.area GSINIT0 (CODE)
                            569 	.area GSINIT1 (CODE)
                            570 	.area GSINIT2 (CODE)
                            571 	.area GSINIT3 (CODE)
                            572 	.area GSINIT4 (CODE)
                            573 	.area GSINIT5 (CODE)
                            574 	.area GSINIT  (CODE)
                            575 	.area GSFINAL (CODE)
                            576 	.area CSEG    (CODE)
                            577 ;--------------------------------------------------------
                            578 ; global & static initialisations
                            579 ;--------------------------------------------------------
                            580 	.area HOME    (CODE)
                            581 	.area GSINIT  (CODE)
                            582 	.area GSFINAL (CODE)
                            583 	.area GSINIT  (CODE)
                            584 ;--------------------------------------------------------
                            585 ; Home
                            586 ;--------------------------------------------------------
                            587 	.area HOME    (CODE)
                            588 	.area HOME    (CODE)
                            589 ;--------------------------------------------------------
                            590 ; code
                            591 ;--------------------------------------------------------
                            592 	.area CSEG    (CODE)
                            593 ;------------------------------------------------------------
                            594 ;Allocation info for local variables in function 'recv_from_broadcast'
                            595 ;------------------------------------------------------------
                            596 ;sender                    Allocated to stack - offset -5
                            597 ;broadcast                 Allocated to registers r2 r3 r4 
                            598 ;c                         Allocated to registers 
                            599 ;------------------------------------------------------------
                            600 ;	../../../core/net/rime/stbroadcast.c:53: recv_from_broadcast(struct broadcast_conn *broadcast, const rimeaddr_t *sender)
                            601 ;	-----------------------------------------
                            602 ;	 function recv_from_broadcast
                            603 ;	-----------------------------------------
   0000                     604 _recv_from_broadcast:
                    0002    605 	ar2 = 0x02
                    0003    606 	ar3 = 0x03
                    0004    607 	ar4 = 0x04
                    0005    608 	ar5 = 0x05
                    0006    609 	ar6 = 0x06
                    0007    610 	ar7 = 0x07
                    0000    611 	ar0 = 0x00
                    0001    612 	ar1 = 0x01
   0000 C0*00               613 	push	_bp
   0002 85 81*00            614 	mov	_bp,sp
   0005 AA 82               615 	mov	r2,dpl
   0007 AB 83               616 	mov	r3,dph
   0009 AC F0               617 	mov	r4,b
                            618 ;	../../../core/net/rime/stbroadcast.c:57: if(c->u->recv != NULL) {
   000B 74 27               619 	mov	a,#0x27
   000D 2A                  620 	add	a,r2
   000E FD                  621 	mov	r5,a
   000F E4                  622 	clr	a
   0010 3B                  623 	addc	a,r3
   0011 FE                  624 	mov	r6,a
   0012 8C 07               625 	mov	ar7,r4
   0014 8D 82               626 	mov	dpl,r5
   0016 8E 83               627 	mov	dph,r6
   0018 8F F0               628 	mov	b,r7
   001A 12s00r00            629 	lcall	__gptrget
   001D FD                  630 	mov	r5,a
   001E A3                  631 	inc	dptr
   001F 12s00r00            632 	lcall	__gptrget
   0022 FE                  633 	mov	r6,a
   0023 A3                  634 	inc	dptr
   0024 12s00r00            635 	lcall	__gptrget
   0027 FF                  636 	mov	r7,a
   0028 8D 82               637 	mov	dpl,r5
   002A 8E 83               638 	mov	dph,r6
   002C 8F F0               639 	mov	b,r7
   002E 12s00r00            640 	lcall	__gptrget
   0031 FD                  641 	mov	r5,a
   0032 A3                  642 	inc	dptr
   0033 12s00r00            643 	lcall	__gptrget
   0036 FE                  644 	mov	r6,a
   0037 4D                  645 	orl	a,r5
   0038 60 1B               646 	jz	00103$
                            647 ;	../../../core/net/rime/stbroadcast.c:58: c->u->recv(c);
   003A C0 05               648 	push	ar5
   003C C0 06               649 	push	ar6
   003E 74r51               650 	mov	a,#00107$
   0040 C0 E0               651 	push	acc
   0042 74s00               652 	mov	a,#(00107$ >> 8)
   0044 C0 E0               653 	push	acc
   0046 C0 05               654 	push	ar5
   0048 C0 06               655 	push	ar6
   004A 8A 82               656 	mov	dpl,r2
   004C 8B 83               657 	mov	dph,r3
   004E 8C F0               658 	mov	b,r4
   0050 22                  659 	ret
   0051                     660 00107$:
   0051 D0 06               661 	pop	ar6
   0053 D0 05               662 	pop	ar5
   0055                     663 00103$:
   0055 D0*00               664 	pop	_bp
   0057 22                  665 	ret
                            666 ;------------------------------------------------------------
                            667 ;Allocation info for local variables in function 'stbroadcast_open'
                            668 ;------------------------------------------------------------
                            669 ;channel                   Allocated to stack - offset -4
                            670 ;u                         Allocated to stack - offset -7
                            671 ;c                         Allocated to registers r2 r3 r4 
                            672 ;------------------------------------------------------------
                            673 ;	../../../core/net/rime/stbroadcast.c:65: stbroadcast_open(struct stbroadcast_conn *c, uint16_t channel,
                            674 ;	-----------------------------------------
                            675 ;	 function stbroadcast_open
                            676 ;	-----------------------------------------
   0058                     677 _stbroadcast_open:
   0058 C0*00               678 	push	_bp
   005A 85 81*00            679 	mov	_bp,sp
   005D AA 82               680 	mov	r2,dpl
   005F AB 83               681 	mov	r3,dph
   0061 AC F0               682 	mov	r4,b
                            683 ;	../../../core/net/rime/stbroadcast.c:68: broadcast_open(&c->c, channel, &stbroadcast);
   0063 C0 02               684 	push	ar2
   0065 C0 03               685 	push	ar3
   0067 C0 04               686 	push	ar4
   0069 74r00               687 	mov	a,#_stbroadcast
   006B C0 E0               688 	push	acc
   006D 74s00               689 	mov	a,#(_stbroadcast >> 8)
   006F C0 E0               690 	push	acc
   0071 74 80               691 	mov	a,#0x80
   0073 C0 E0               692 	push	acc
   0075 E5*00               693 	mov	a,_bp
   0077 24 FC               694 	add	a,#0xfc
   0079 F8                  695 	mov	r0,a
   007A E6                  696 	mov	a,@r0
   007B C0 E0               697 	push	acc
   007D 08                  698 	inc	r0
   007E E6                  699 	mov	a,@r0
   007F C0 E0               700 	push	acc
   0081 8A 82               701 	mov	dpl,r2
   0083 8B 83               702 	mov	dph,r3
   0085 8C F0               703 	mov	b,r4
   0087 12s00r00            704 	lcall	_broadcast_open
   008A E5 81               705 	mov	a,sp
   008C 24 FB               706 	add	a,#0xfb
   008E F5 81               707 	mov	sp,a
   0090 D0 04               708 	pop	ar4
   0092 D0 03               709 	pop	ar3
   0094 D0 02               710 	pop	ar2
                            711 ;	../../../core/net/rime/stbroadcast.c:69: c->u = u;
   0096 74 27               712 	mov	a,#0x27
   0098 2A                  713 	add	a,r2
   0099 FA                  714 	mov	r2,a
   009A E4                  715 	clr	a
   009B 3B                  716 	addc	a,r3
   009C FB                  717 	mov	r3,a
   009D 8A 82               718 	mov	dpl,r2
   009F 8B 83               719 	mov	dph,r3
   00A1 8C F0               720 	mov	b,r4
   00A3 E5*00               721 	mov	a,_bp
   00A5 24 F9               722 	add	a,#0xf9
   00A7 F8                  723 	mov	r0,a
   00A8 E6                  724 	mov	a,@r0
   00A9 12s00r00            725 	lcall	__gptrput
   00AC A3                  726 	inc	dptr
   00AD 08                  727 	inc	r0
   00AE E6                  728 	mov	a,@r0
   00AF 12s00r00            729 	lcall	__gptrput
   00B2 A3                  730 	inc	dptr
   00B3 08                  731 	inc	r0
   00B4 E6                  732 	mov	a,@r0
   00B5 12s00r00            733 	lcall	__gptrput
   00B8 D0*00               734 	pop	_bp
   00BA 22                  735 	ret
                            736 ;------------------------------------------------------------
                            737 ;Allocation info for local variables in function 'stbroadcast_close'
                            738 ;------------------------------------------------------------
                            739 ;c                         Allocated to registers r2 r3 r4 
                            740 ;------------------------------------------------------------
                            741 ;	../../../core/net/rime/stbroadcast.c:73: stbroadcast_close(struct stbroadcast_conn *c)
                            742 ;	-----------------------------------------
                            743 ;	 function stbroadcast_close
                            744 ;	-----------------------------------------
   00BB                     745 _stbroadcast_close:
                            746 ;	../../../core/net/rime/stbroadcast.c:75: broadcast_close(&c->c);
   00BB AA 82               747 	mov	r2,dpl
   00BD AB 83               748 	mov	r3,dph
   00BF AC F0               749 	mov	r4,b
   00C1 C0 02               750 	push	ar2
   00C3 C0 03               751 	push	ar3
   00C5 C0 04               752 	push	ar4
   00C7 12s00r00            753 	lcall	_broadcast_close
   00CA D0 04               754 	pop	ar4
   00CC D0 03               755 	pop	ar3
   00CE D0 02               756 	pop	ar2
                            757 ;	../../../core/net/rime/stbroadcast.c:76: ctimer_stop(&c->t);
   00D0 74 0F               758 	mov	a,#0x0F
   00D2 2A                  759 	add	a,r2
   00D3 FA                  760 	mov	r2,a
   00D4 E4                  761 	clr	a
   00D5 3B                  762 	addc	a,r3
   00D6 FB                  763 	mov	r3,a
   00D7 8A 82               764 	mov	dpl,r2
   00D9 8B 83               765 	mov	dph,r3
   00DB 8C F0               766 	mov	b,r4
   00DD 02s00r00            767 	ljmp	_ctimer_stop
                            768 ;------------------------------------------------------------
                            769 ;Allocation info for local variables in function 'send'
                            770 ;------------------------------------------------------------
                            771 ;ptr                       Allocated to registers r2 r3 r4 
                            772 ;c                         Allocated to registers 
                            773 ;------------------------------------------------------------
                            774 ;	../../../core/net/rime/stbroadcast.c:80: send(void *ptr)
                            775 ;	-----------------------------------------
                            776 ;	 function send
                            777 ;	-----------------------------------------
   00E0                     778 _send:
   00E0 AA 82               779 	mov	r2,dpl
   00E2 AB 83               780 	mov	r3,dph
   00E4 AC F0               781 	mov	r4,b
                            782 ;	../../../core/net/rime/stbroadcast.c:85: queuebuf_to_packetbuf(c->buf);
   00E6 74 24               783 	mov	a,#0x24
   00E8 2A                  784 	add	a,r2
   00E9 FD                  785 	mov	r5,a
   00EA E4                  786 	clr	a
   00EB 3B                  787 	addc	a,r3
   00EC FE                  788 	mov	r6,a
   00ED 8C 07               789 	mov	ar7,r4
   00EF 8D 82               790 	mov	dpl,r5
   00F1 8E 83               791 	mov	dph,r6
   00F3 8F F0               792 	mov	b,r7
   00F5 12s00r00            793 	lcall	__gptrget
   00F8 FD                  794 	mov	r5,a
   00F9 A3                  795 	inc	dptr
   00FA 12s00r00            796 	lcall	__gptrget
   00FD FE                  797 	mov	r6,a
   00FE A3                  798 	inc	dptr
   00FF 12s00r00            799 	lcall	__gptrget
   0102 FF                  800 	mov	r7,a
   0103 8D 82               801 	mov	dpl,r5
   0105 8E 83               802 	mov	dph,r6
   0107 8F F0               803 	mov	b,r7
   0109 C0 02               804 	push	ar2
   010B C0 03               805 	push	ar3
   010D C0 04               806 	push	ar4
   010F 12s00r00            807 	lcall	_queuebuf_to_packetbuf
   0112 D0 04               808 	pop	ar4
   0114 D0 03               809 	pop	ar3
   0116 D0 02               810 	pop	ar2
                            811 ;	../../../core/net/rime/stbroadcast.c:86: broadcast_send(&c->c);
   0118 8A 82               812 	mov	dpl,r2
   011A 8B 83               813 	mov	dph,r3
   011C 8C F0               814 	mov	b,r4
   011E C0 02               815 	push	ar2
   0120 C0 03               816 	push	ar3
   0122 C0 04               817 	push	ar4
   0124 12s00r00            818 	lcall	_broadcast_send
   0127 D0 04               819 	pop	ar4
   0129 D0 03               820 	pop	ar3
   012B D0 02               821 	pop	ar2
                            822 ;	../../../core/net/rime/stbroadcast.c:87: ctimer_reset(&c->t);
   012D 74 0F               823 	mov	a,#0x0F
   012F 2A                  824 	add	a,r2
   0130 FD                  825 	mov	r5,a
   0131 E4                  826 	clr	a
   0132 3B                  827 	addc	a,r3
   0133 FE                  828 	mov	r6,a
   0134 8C 07               829 	mov	ar7,r4
   0136 8D 82               830 	mov	dpl,r5
   0138 8E 83               831 	mov	dph,r6
   013A 8F F0               832 	mov	b,r7
   013C C0 02               833 	push	ar2
   013E C0 03               834 	push	ar3
   0140 C0 04               835 	push	ar4
   0142 12s00r00            836 	lcall	_ctimer_reset
   0145 D0 04               837 	pop	ar4
   0147 D0 03               838 	pop	ar3
   0149 D0 02               839 	pop	ar2
                            840 ;	../../../core/net/rime/stbroadcast.c:88: if(c->u->sent != NULL) {
   014B 74 27               841 	mov	a,#0x27
   014D 2A                  842 	add	a,r2
   014E FD                  843 	mov	r5,a
   014F E4                  844 	clr	a
   0150 3B                  845 	addc	a,r3
   0151 FE                  846 	mov	r6,a
   0152 8C 07               847 	mov	ar7,r4
   0154 8D 82               848 	mov	dpl,r5
   0156 8E 83               849 	mov	dph,r6
   0158 8F F0               850 	mov	b,r7
   015A 12s00r00            851 	lcall	__gptrget
   015D FD                  852 	mov	r5,a
   015E A3                  853 	inc	dptr
   015F 12s00r00            854 	lcall	__gptrget
   0162 FE                  855 	mov	r6,a
   0163 A3                  856 	inc	dptr
   0164 12s00r00            857 	lcall	__gptrget
   0167 FF                  858 	mov	r7,a
   0168 74 02               859 	mov	a,#0x02
   016A 2D                  860 	add	a,r5
   016B FD                  861 	mov	r5,a
   016C E4                  862 	clr	a
   016D 3E                  863 	addc	a,r6
   016E FE                  864 	mov	r6,a
   016F 8D 82               865 	mov	dpl,r5
   0171 8E 83               866 	mov	dph,r6
   0173 8F F0               867 	mov	b,r7
   0175 12s00r00            868 	lcall	__gptrget
   0178 FD                  869 	mov	r5,a
   0179 A3                  870 	inc	dptr
   017A 12s00r00            871 	lcall	__gptrget
   017D FE                  872 	mov	r6,a
   017E 4D                  873 	orl	a,r5
   017F 60 1B               874 	jz	00103$
                            875 ;	../../../core/net/rime/stbroadcast.c:89: c->u->sent(c);
   0181 C0 05               876 	push	ar5
   0183 C0 06               877 	push	ar6
   0185 74r98               878 	mov	a,#00107$
   0187 C0 E0               879 	push	acc
   0189 74s01               880 	mov	a,#(00107$ >> 8)
   018B C0 E0               881 	push	acc
   018D C0 05               882 	push	ar5
   018F C0 06               883 	push	ar6
   0191 8A 82               884 	mov	dpl,r2
   0193 8B 83               885 	mov	dph,r3
   0195 8C F0               886 	mov	b,r4
   0197 22                  887 	ret
   0198                     888 00107$:
   0198 D0 06               889 	pop	ar6
   019A D0 05               890 	pop	ar5
   019C                     891 00103$:
   019C 22                  892 	ret
                            893 ;------------------------------------------------------------
                            894 ;Allocation info for local variables in function 'stbroadcast_set_timer'
                            895 ;------------------------------------------------------------
                            896 ;t                         Allocated to stack - offset -4
                            897 ;c                         Allocated to registers r2 r3 r4 
                            898 ;------------------------------------------------------------
                            899 ;	../../../core/net/rime/stbroadcast.c:94: stbroadcast_set_timer(struct stbroadcast_conn *c, clock_time_t t)
                            900 ;	-----------------------------------------
                            901 ;	 function stbroadcast_set_timer
                            902 ;	-----------------------------------------
   019D                     903 _stbroadcast_set_timer:
   019D C0*00               904 	push	_bp
   019F 85 81*00            905 	mov	_bp,sp
   01A2 AA 82               906 	mov	r2,dpl
   01A4 AB 83               907 	mov	r3,dph
   01A6 AC F0               908 	mov	r4,b
                            909 ;	../../../core/net/rime/stbroadcast.c:96: ctimer_set(&c->t, t, send, c);
   01A8 74 0F               910 	mov	a,#0x0F
   01AA 2A                  911 	add	a,r2
   01AB FD                  912 	mov	r5,a
   01AC E4                  913 	clr	a
   01AD 3B                  914 	addc	a,r3
   01AE FE                  915 	mov	r6,a
   01AF 8C 07               916 	mov	ar7,r4
   01B1 C0 02               917 	push	ar2
   01B3 C0 03               918 	push	ar3
   01B5 C0 04               919 	push	ar4
   01B7 74rE0               920 	mov	a,#_send
   01B9 C0 E0               921 	push	acc
   01BB 74s00               922 	mov	a,#(_send >> 8)
   01BD C0 E0               923 	push	acc
   01BF E5*00               924 	mov	a,_bp
   01C1 24 FC               925 	add	a,#0xfc
   01C3 F8                  926 	mov	r0,a
   01C4 E6                  927 	mov	a,@r0
   01C5 C0 E0               928 	push	acc
   01C7 08                  929 	inc	r0
   01C8 E6                  930 	mov	a,@r0
   01C9 C0 E0               931 	push	acc
   01CB 8D 82               932 	mov	dpl,r5
   01CD 8E 83               933 	mov	dph,r6
   01CF 8F F0               934 	mov	b,r7
   01D1 12s00r00            935 	lcall	_ctimer_set
   01D4 E5 81               936 	mov	a,sp
   01D6 24 F9               937 	add	a,#0xf9
   01D8 F5 81               938 	mov	sp,a
   01DA D0*00               939 	pop	_bp
   01DC 22                  940 	ret
                            941 ;------------------------------------------------------------
                            942 ;Allocation info for local variables in function 'stbroadcast_send_stubborn'
                            943 ;------------------------------------------------------------
                            944 ;t                         Allocated to stack - offset -4
                            945 ;c                         Allocated to stack - offset 1
                            946 ;sloc0                     Allocated to stack - offset 4
                            947 ;------------------------------------------------------------
                            948 ;	../../../core/net/rime/stbroadcast.c:100: stbroadcast_send_stubborn(struct stbroadcast_conn *c, clock_time_t t)
                            949 ;	-----------------------------------------
                            950 ;	 function stbroadcast_send_stubborn
                            951 ;	-----------------------------------------
   01DD                     952 _stbroadcast_send_stubborn:
   01DD C0*00               953 	push	_bp
   01DF 85 81*00            954 	mov	_bp,sp
   01E2 C0 82               955 	push	dpl
   01E4 C0 83               956 	push	dph
   01E6 C0 F0               957 	push	b
                            958 ;	../../../core/net/rime/stbroadcast.c:102: if(c->buf != NULL) {
   01E8 A8*00               959 	mov	r0,_bp
   01EA 08                  960 	inc	r0
   01EB 74 24               961 	mov	a,#0x24
   01ED 26                  962 	add	a,@r0
   01EE FD                  963 	mov	r5,a
   01EF E4                  964 	clr	a
   01F0 08                  965 	inc	r0
   01F1 36                  966 	addc	a,@r0
   01F2 FE                  967 	mov	r6,a
   01F3 08                  968 	inc	r0
   01F4 86 07               969 	mov	ar7,@r0
   01F6 8D 82               970 	mov	dpl,r5
   01F8 8E 83               971 	mov	dph,r6
   01FA 8F F0               972 	mov	b,r7
   01FC 12s00r00            973 	lcall	__gptrget
   01FF FA                  974 	mov	r2,a
   0200 A3                  975 	inc	dptr
   0201 12s00r00            976 	lcall	__gptrget
   0204 FB                  977 	mov	r3,a
   0205 A3                  978 	inc	dptr
   0206 12s00r00            979 	lcall	__gptrget
   0209 FC                  980 	mov	r4,a
   020A EA                  981 	mov	a,r2
   020B 4B                  982 	orl	a,r3
   020C 4C                  983 	orl	a,r4
   020D 60 15               984 	jz	00102$
                            985 ;	../../../core/net/rime/stbroadcast.c:103: queuebuf_free(c->buf);
   020F 8A 82               986 	mov	dpl,r2
   0211 8B 83               987 	mov	dph,r3
   0213 8C F0               988 	mov	b,r4
   0215 C0 05               989 	push	ar5
   0217 C0 06               990 	push	ar6
   0219 C0 07               991 	push	ar7
   021B 12s00r00            992 	lcall	_queuebuf_free
   021E D0 07               993 	pop	ar7
   0220 D0 06               994 	pop	ar6
   0222 D0 05               995 	pop	ar5
   0224                     996 00102$:
                            997 ;	../../../core/net/rime/stbroadcast.c:105: c->buf = queuebuf_new_from_packetbuf();
   0224 C0 05               998 	push	ar5
   0226 C0 06               999 	push	ar6
   0228 C0 07              1000 	push	ar7
   022A 12s00r00           1001 	lcall	_queuebuf_new_from_packetbuf
   022D AA 82              1002 	mov	r2,dpl
   022F AB 83              1003 	mov	r3,dph
   0231 AC F0              1004 	mov	r4,b
   0233 D0 07              1005 	pop	ar7
   0235 D0 06              1006 	pop	ar6
   0237 D0 05              1007 	pop	ar5
   0239 8D 82              1008 	mov	dpl,r5
   023B 8E 83              1009 	mov	dph,r6
   023D 8F F0              1010 	mov	b,r7
   023F EA                 1011 	mov	a,r2
   0240 12s00r00           1012 	lcall	__gptrput
   0243 A3                 1013 	inc	dptr
   0244 EB                 1014 	mov	a,r3
   0245 12s00r00           1015 	lcall	__gptrput
   0248 A3                 1016 	inc	dptr
   0249 EC                 1017 	mov	a,r4
   024A 12s00r00           1018 	lcall	__gptrput
                           1019 ;	../../../core/net/rime/stbroadcast.c:106: if(c->buf == NULL) {
   024D EA                 1020 	mov	a,r2
   024E 4B                 1021 	orl	a,r3
   024F 4C                 1022 	orl	a,r4
   0250 70 05              1023 	jnz	00104$
                           1024 ;	../../../core/net/rime/stbroadcast.c:107: return 0;
   0252 90 00 00           1025 	mov	dptr,#0x0000
   0255 80 2F              1026 	sjmp	00105$
   0257                    1027 00104$:
                           1028 ;	../../../core/net/rime/stbroadcast.c:109: send(c);
   0257 A8*00              1029 	mov	r0,_bp
   0259 08                 1030 	inc	r0
   025A 86 82              1031 	mov	dpl,@r0
   025C 08                 1032 	inc	r0
   025D 86 83              1033 	mov	dph,@r0
   025F 08                 1034 	inc	r0
   0260 86 F0              1035 	mov	b,@r0
   0262 12s00rE0           1036 	lcall	_send
                           1037 ;	../../../core/net/rime/stbroadcast.c:110: stbroadcast_set_timer(c, t);
   0265 E5*00              1038 	mov	a,_bp
   0267 24 FC              1039 	add	a,#0xfc
   0269 F8                 1040 	mov	r0,a
   026A E6                 1041 	mov	a,@r0
   026B C0 E0              1042 	push	acc
   026D 08                 1043 	inc	r0
   026E E6                 1044 	mov	a,@r0
   026F C0 E0              1045 	push	acc
   0271 A8*00              1046 	mov	r0,_bp
   0273 08                 1047 	inc	r0
   0274 86 82              1048 	mov	dpl,@r0
   0276 08                 1049 	inc	r0
   0277 86 83              1050 	mov	dph,@r0
   0279 08                 1051 	inc	r0
   027A 86 F0              1052 	mov	b,@r0
   027C 12s01r9D           1053 	lcall	_stbroadcast_set_timer
   027F 15 81              1054 	dec	sp
   0281 15 81              1055 	dec	sp
                           1056 ;	../../../core/net/rime/stbroadcast.c:111: return 1;
   0283 90 00 01           1057 	mov	dptr,#0x0001
   0286                    1058 00105$:
   0286 85*00 81           1059 	mov	sp,_bp
   0289 D0*00              1060 	pop	_bp
   028B 22                 1061 	ret
                           1062 ;------------------------------------------------------------
                           1063 ;Allocation info for local variables in function 'stbroadcast_cancel'
                           1064 ;------------------------------------------------------------
                           1065 ;c                         Allocated to registers r2 r3 r4 
                           1066 ;------------------------------------------------------------
                           1067 ;	../../../core/net/rime/stbroadcast.c:116: stbroadcast_cancel(struct stbroadcast_conn *c)
                           1068 ;	-----------------------------------------
                           1069 ;	 function stbroadcast_cancel
                           1070 ;	-----------------------------------------
   028C                    1071 _stbroadcast_cancel:
   028C AA 82              1072 	mov	r2,dpl
   028E AB 83              1073 	mov	r3,dph
   0290 AC F0              1074 	mov	r4,b
                           1075 ;	../../../core/net/rime/stbroadcast.c:118: ctimer_stop(&c->t);
   0292 74 0F              1076 	mov	a,#0x0F
   0294 2A                 1077 	add	a,r2
   0295 FA                 1078 	mov	r2,a
   0296 E4                 1079 	clr	a
   0297 3B                 1080 	addc	a,r3
   0298 FB                 1081 	mov	r3,a
   0299 8A 82              1082 	mov	dpl,r2
   029B 8B 83              1083 	mov	dph,r3
   029D 8C F0              1084 	mov	b,r4
   029F 02s00r00           1085 	ljmp	_ctimer_stop
                           1086 	.area CSEG    (CODE)
                           1087 	.area CONST   (CODE)
   0000                    1088 _stbroadcast:
   0000r00s00              1089 	.byte _recv_from_broadcast,(_recv_from_broadcast >> 8)
   0002 00 00              1090 	.byte #0x00,#0x00
                           1091 	.area XINIT   (CODE)
                           1092 	.area CABS    (ABS,CODE)
