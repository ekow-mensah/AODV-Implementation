                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:26:47 2018
                              5 ;--------------------------------------------------------
                              6 	.module ringbuf
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ringbuf_init
                             13 	.globl _ringbuf_put
                             14 	.globl _ringbuf_get
                             15 	.globl _ringbuf_size
                             16 	.globl _ringbuf_elements
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 	.area RSEG    (ABS,DATA)
   0000                      21 	.org 0x0000
                             22 ;--------------------------------------------------------
                             23 ; special function bits
                             24 ;--------------------------------------------------------
                             25 	.area RSEG    (ABS,DATA)
   0000                      26 	.org 0x0000
                             27 ;--------------------------------------------------------
                             28 ; overlayable register banks
                             29 ;--------------------------------------------------------
                             30 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      31 	.ds 8
                             32 ;--------------------------------------------------------
                             33 ; internal ram data
                             34 ;--------------------------------------------------------
                             35 	.area DSEG    (DATA)
                             36 ;--------------------------------------------------------
                             37 ; overlayable items in internal ram 
                             38 ;--------------------------------------------------------
                             39 	.area OSEG    (OVR,DATA)
                             40 ;--------------------------------------------------------
                             41 ; indirectly addressable internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area ISEG    (DATA)
                             44 ;--------------------------------------------------------
                             45 ; absolute internal ram data
                             46 ;--------------------------------------------------------
                             47 	.area IABS    (ABS,DATA)
                             48 	.area IABS    (ABS,DATA)
                             49 ;--------------------------------------------------------
                             50 ; bit data
                             51 ;--------------------------------------------------------
                             52 	.area BSEG    (BIT)
                             53 ;--------------------------------------------------------
                             54 ; paged external ram data
                             55 ;--------------------------------------------------------
                             56 	.area PSEG    (PAG,XDATA)
                             57 ;--------------------------------------------------------
                             58 ; external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XSEG    (XDATA)
                             61 ;--------------------------------------------------------
                             62 ; absolute external ram data
                             63 ;--------------------------------------------------------
                             64 	.area XABS    (ABS,XDATA)
                             65 ;--------------------------------------------------------
                             66 ; external initialized ram data
                             67 ;--------------------------------------------------------
                             68 	.area XISEG   (XDATA)
                             69 	.area HOME    (CODE)
                             70 	.area GSINIT0 (CODE)
                             71 	.area GSINIT1 (CODE)
                             72 	.area GSINIT2 (CODE)
                             73 	.area GSINIT3 (CODE)
                             74 	.area GSINIT4 (CODE)
                             75 	.area GSINIT5 (CODE)
                             76 	.area GSINIT  (CODE)
                             77 	.area GSFINAL (CODE)
                             78 	.area CSEG    (CODE)
                             79 ;--------------------------------------------------------
                             80 ; global & static initialisations
                             81 ;--------------------------------------------------------
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT  (CODE)
                             84 	.area GSFINAL (CODE)
                             85 	.area GSINIT  (CODE)
                             86 ;--------------------------------------------------------
                             87 ; Home
                             88 ;--------------------------------------------------------
                             89 	.area HOME    (CODE)
                             90 	.area HOME    (CODE)
                             91 ;--------------------------------------------------------
                             92 ; code
                             93 ;--------------------------------------------------------
                             94 	.area CSEG    (CODE)
                             95 ;------------------------------------------------------------
                             96 ;Allocation info for local variables in function 'ringbuf_init'
                             97 ;------------------------------------------------------------
                             98 ;dataptr                   Allocated to stack - offset -5
                             99 ;size                      Allocated to stack - offset -6
                            100 ;r                         Allocated to stack - offset 1
                            101 ;------------------------------------------------------------
                            102 ;	../../../core/lib/ringbuf.c:44: ringbuf_init(struct ringbuf *r, uint8_t *dataptr, uint8_t size)
                            103 ;	-----------------------------------------
                            104 ;	 function ringbuf_init
                            105 ;	-----------------------------------------
   0000                     106 _ringbuf_init:
                    0002    107 	ar2 = 0x02
                    0003    108 	ar3 = 0x03
                    0004    109 	ar4 = 0x04
                    0005    110 	ar5 = 0x05
                    0006    111 	ar6 = 0x06
                    0007    112 	ar7 = 0x07
                    0000    113 	ar0 = 0x00
                    0001    114 	ar1 = 0x01
   0000 C0*00               115 	push	_bp
   0002 85 81*00            116 	mov	_bp,sp
   0005 C0 82               117 	push	dpl
   0007 C0 83               118 	push	dph
   0009 C0 F0               119 	push	b
                            120 ;	../../../core/lib/ringbuf.c:46: r->data = dataptr;
   000B A8*00               121 	mov	r0,_bp
   000D 08                  122 	inc	r0
   000E 86 82               123 	mov	dpl,@r0
   0010 08                  124 	inc	r0
   0011 86 83               125 	mov	dph,@r0
   0013 08                  126 	inc	r0
   0014 86 F0               127 	mov	b,@r0
   0016 E5*00               128 	mov	a,_bp
   0018 24 FB               129 	add	a,#0xfb
   001A F9                  130 	mov	r1,a
   001B E7                  131 	mov	a,@r1
   001C 12s00r00            132 	lcall	__gptrput
   001F A3                  133 	inc	dptr
   0020 09                  134 	inc	r1
   0021 E7                  135 	mov	a,@r1
   0022 12s00r00            136 	lcall	__gptrput
   0025 A3                  137 	inc	dptr
   0026 09                  138 	inc	r1
   0027 E7                  139 	mov	a,@r1
   0028 12s00r00            140 	lcall	__gptrput
                            141 ;	../../../core/lib/ringbuf.c:47: r->mask = size - 1;
   002B A8*00               142 	mov	r0,_bp
   002D 08                  143 	inc	r0
   002E 74 03               144 	mov	a,#0x03
   0030 26                  145 	add	a,@r0
   0031 FD                  146 	mov	r5,a
   0032 E4                  147 	clr	a
   0033 08                  148 	inc	r0
   0034 36                  149 	addc	a,@r0
   0035 FE                  150 	mov	r6,a
   0036 08                  151 	inc	r0
   0037 86 07               152 	mov	ar7,@r0
   0039 E5*00               153 	mov	a,_bp
   003B 24 FA               154 	add	a,#0xfa
   003D F8                  155 	mov	r0,a
   003E E6                  156 	mov	a,@r0
   003F 14                  157 	dec	a
   0040 8D 82               158 	mov	dpl,r5
   0042 8E 83               159 	mov	dph,r6
   0044 8F F0               160 	mov	b,r7
   0046 12s00r00            161 	lcall	__gptrput
                            162 ;	../../../core/lib/ringbuf.c:48: r->put_ptr = 0;
   0049 A8*00               163 	mov	r0,_bp
   004B 08                  164 	inc	r0
   004C 74 04               165 	mov	a,#0x04
   004E 26                  166 	add	a,@r0
   004F FA                  167 	mov	r2,a
   0050 E4                  168 	clr	a
   0051 08                  169 	inc	r0
   0052 36                  170 	addc	a,@r0
   0053 FB                  171 	mov	r3,a
   0054 08                  172 	inc	r0
   0055 86 04               173 	mov	ar4,@r0
   0057 8A 82               174 	mov	dpl,r2
   0059 8B 83               175 	mov	dph,r3
   005B 8C F0               176 	mov	b,r4
   005D E4                  177 	clr	a
   005E 12s00r00            178 	lcall	__gptrput
                            179 ;	../../../core/lib/ringbuf.c:49: r->get_ptr = 0;
   0061 A8*00               180 	mov	r0,_bp
   0063 08                  181 	inc	r0
   0064 74 05               182 	mov	a,#0x05
   0066 26                  183 	add	a,@r0
   0067 FA                  184 	mov	r2,a
   0068 E4                  185 	clr	a
   0069 08                  186 	inc	r0
   006A 36                  187 	addc	a,@r0
   006B FB                  188 	mov	r3,a
   006C 08                  189 	inc	r0
   006D 86 04               190 	mov	ar4,@r0
   006F 8A 82               191 	mov	dpl,r2
   0071 8B 83               192 	mov	dph,r3
   0073 8C F0               193 	mov	b,r4
   0075 E4                  194 	clr	a
   0076 12s00r00            195 	lcall	__gptrput
   0079 85*00 81            196 	mov	sp,_bp
   007C D0*00               197 	pop	_bp
   007E 22                  198 	ret
                            199 ;------------------------------------------------------------
                            200 ;Allocation info for local variables in function 'ringbuf_put'
                            201 ;------------------------------------------------------------
                            202 ;c                         Allocated to stack - offset -3
                            203 ;r                         Allocated to stack - offset 1
                            204 ;sloc0                     Allocated to stack - offset 4
                            205 ;sloc1                     Allocated to stack - offset 5
                            206 ;sloc2                     Allocated to stack - offset 7
                            207 ;sloc3                     Allocated to stack - offset 8
                            208 ;------------------------------------------------------------
                            209 ;	../../../core/lib/ringbuf.c:53: ringbuf_put(struct ringbuf *r, uint8_t c)
                            210 ;	-----------------------------------------
                            211 ;	 function ringbuf_put
                            212 ;	-----------------------------------------
   007F                     213 _ringbuf_put:
   007F C0*00               214 	push	_bp
   0081 85 81*00            215 	mov	_bp,sp
   0084 C0 82               216 	push	dpl
   0086 C0 83               217 	push	dph
   0088 C0 F0               218 	push	b
   008A E5 81               219 	mov	a,sp
   008C 24 09               220 	add	a,#0x09
   008E F5 81               221 	mov	sp,a
                            222 ;	../../../core/lib/ringbuf.c:64: if(((r->put_ptr - r->get_ptr) & r->mask) == r->mask) {
   0090 A8*00               223 	mov	r0,_bp
   0092 08                  224 	inc	r0
   0093 74 04               225 	mov	a,#0x04
   0095 26                  226 	add	a,@r0
   0096 FD                  227 	mov	r5,a
   0097 E4                  228 	clr	a
   0098 08                  229 	inc	r0
   0099 36                  230 	addc	a,@r0
   009A FE                  231 	mov	r6,a
   009B 08                  232 	inc	r0
   009C 86 07               233 	mov	ar7,@r0
   009E 8D 82               234 	mov	dpl,r5
   00A0 8E 83               235 	mov	dph,r6
   00A2 8F F0               236 	mov	b,r7
   00A4 E5*00               237 	mov	a,_bp
   00A6 24 04               238 	add	a,#0x04
   00A8 F8                  239 	mov	r0,a
   00A9 12s00r00            240 	lcall	__gptrget
   00AC F6                  241 	mov	@r0,a
   00AD E5*00               242 	mov	a,_bp
   00AF 24 04               243 	add	a,#0x04
   00B1 F8                  244 	mov	r0,a
   00B2 E5*00               245 	mov	a,_bp
   00B4 24 05               246 	add	a,#0x05
   00B6 F9                  247 	mov	r1,a
   00B7 E6                  248 	mov	a,@r0
   00B8 F7                  249 	mov	@r1,a
   00B9 09                  250 	inc	r1
   00BA 77 00               251 	mov	@r1,#0x00
   00BC A8*00               252 	mov	r0,_bp
   00BE 08                  253 	inc	r0
   00BF 74 05               254 	mov	a,#0x05
   00C1 26                  255 	add	a,@r0
   00C2 FC                  256 	mov	r4,a
   00C3 E4                  257 	clr	a
   00C4 08                  258 	inc	r0
   00C5 36                  259 	addc	a,@r0
   00C6 FA                  260 	mov	r2,a
   00C7 08                  261 	inc	r0
   00C8 86 03               262 	mov	ar3,@r0
   00CA 8C 82               263 	mov	dpl,r4
   00CC 8A 83               264 	mov	dph,r2
   00CE 8B F0               265 	mov	b,r3
   00D0 12s00r00            266 	lcall	__gptrget
   00D3 FC                  267 	mov	r4,a
   00D4 7A 00               268 	mov	r2,#0x00
   00D6 E5*00               269 	mov	a,_bp
   00D8 24 05               270 	add	a,#0x05
   00DA F8                  271 	mov	r0,a
   00DB E6                  272 	mov	a,@r0
   00DC C3                  273 	clr	c
   00DD 9C                  274 	subb	a,r4
   00DE F6                  275 	mov	@r0,a
   00DF 08                  276 	inc	r0
   00E0 E6                  277 	mov	a,@r0
   00E1 9A                  278 	subb	a,r2
   00E2 F6                  279 	mov	@r0,a
   00E3 A8*00               280 	mov	r0,_bp
   00E5 08                  281 	inc	r0
   00E6 74 03               282 	mov	a,#0x03
   00E8 26                  283 	add	a,@r0
   00E9 FB                  284 	mov	r3,a
   00EA E4                  285 	clr	a
   00EB 08                  286 	inc	r0
   00EC 36                  287 	addc	a,@r0
   00ED FA                  288 	mov	r2,a
   00EE 08                  289 	inc	r0
   00EF 86 04               290 	mov	ar4,@r0
   00F1 8B 82               291 	mov	dpl,r3
   00F3 8A 83               292 	mov	dph,r2
   00F5 8C F0               293 	mov	b,r4
   00F7 E5*00               294 	mov	a,_bp
   00F9 24 07               295 	add	a,#0x07
   00FB F8                  296 	mov	r0,a
   00FC 12s00r00            297 	lcall	__gptrget
   00FF F6                  298 	mov	@r0,a
   0100 E5*00               299 	mov	a,_bp
   0102 24 07               300 	add	a,#0x07
   0104 F8                  301 	mov	r0,a
   0105 E5*00               302 	mov	a,_bp
   0107 24 08               303 	add	a,#0x08
   0109 F9                  304 	mov	r1,a
   010A E6                  305 	mov	a,@r0
   010B F7                  306 	mov	@r1,a
   010C 09                  307 	inc	r1
   010D 77 00               308 	mov	@r1,#0x00
   010F E5*00               309 	mov	a,_bp
   0111 24 05               310 	add	a,#0x05
   0113 F8                  311 	mov	r0,a
   0114 E5*00               312 	mov	a,_bp
   0116 24 08               313 	add	a,#0x08
   0118 F9                  314 	mov	r1,a
   0119 E7                  315 	mov	a,@r1
   011A 56                  316 	anl	a,@r0
   011B FA                  317 	mov	r2,a
   011C 09                  318 	inc	r1
   011D E7                  319 	mov	a,@r1
   011E 08                  320 	inc	r0
   011F 56                  321 	anl	a,@r0
   0120 FB                  322 	mov	r3,a
   0121 E5*00               323 	mov	a,_bp
   0123 24 08               324 	add	a,#0x08
   0125 F8                  325 	mov	r0,a
   0126 E6                  326 	mov	a,@r0
   0127 B5 02 07            327 	cjne	a,ar2,00106$
   012A 08                  328 	inc	r0
   012B E6                  329 	mov	a,@r0
   012C B5 03 02            330 	cjne	a,ar3,00106$
   012F 80 02               331 	sjmp	00107$
   0131                     332 00106$:
   0131 80 05               333 	sjmp	00102$
   0133                     334 00107$:
                            335 ;	../../../core/lib/ringbuf.c:65: return 0;
   0133 90 00 00            336 	mov	dptr,#0x0000
   0136 80 4E               337 	sjmp	00103$
   0138                     338 00102$:
                            339 ;	../../../core/lib/ringbuf.c:67: r->data[r->put_ptr] = c;
   0138 A8*00               340 	mov	r0,_bp
   013A 08                  341 	inc	r0
   013B 86 82               342 	mov	dpl,@r0
   013D 08                  343 	inc	r0
   013E 86 83               344 	mov	dph,@r0
   0140 08                  345 	inc	r0
   0141 86 F0               346 	mov	b,@r0
   0143 12s00r00            347 	lcall	__gptrget
   0146 FA                  348 	mov	r2,a
   0147 A3                  349 	inc	dptr
   0148 12s00r00            350 	lcall	__gptrget
   014B FB                  351 	mov	r3,a
   014C A3                  352 	inc	dptr
   014D 12s00r00            353 	lcall	__gptrget
   0150 FC                  354 	mov	r4,a
   0151 E5*00               355 	mov	a,_bp
   0153 24 04               356 	add	a,#0x04
   0155 F8                  357 	mov	r0,a
   0156 E6                  358 	mov	a,@r0
   0157 2A                  359 	add	a,r2
   0158 FA                  360 	mov	r2,a
   0159 E4                  361 	clr	a
   015A 3B                  362 	addc	a,r3
   015B FB                  363 	mov	r3,a
   015C 8A 82               364 	mov	dpl,r2
   015E 8B 83               365 	mov	dph,r3
   0160 8C F0               366 	mov	b,r4
   0162 E5*00               367 	mov	a,_bp
   0164 24 FD               368 	add	a,#0xfd
   0166 F8                  369 	mov	r0,a
   0167 E6                  370 	mov	a,@r0
   0168 12s00r00            371 	lcall	__gptrput
                            372 ;	../../../core/lib/ringbuf.c:68: r->put_ptr = (r->put_ptr + 1) & r->mask;
   016B E5*00               373 	mov	a,_bp
   016D 24 04               374 	add	a,#0x04
   016F F8                  375 	mov	r0,a
   0170 E6                  376 	mov	a,@r0
   0171 04                  377 	inc	a
   0172 C8                  378 	xch	a,r0
   0173 E5*00               379 	mov	a,_bp
   0175 24 07               380 	add	a,#0x07
   0177 C8                  381 	xch	a,r0
   0178 56                  382 	anl	a,@r0
   0179 FA                  383 	mov	r2,a
   017A 8D 82               384 	mov	dpl,r5
   017C 8E 83               385 	mov	dph,r6
   017E 8F F0               386 	mov	b,r7
   0180 12s00r00            387 	lcall	__gptrput
                            388 ;	../../../core/lib/ringbuf.c:69: return 1;
   0183 90 00 01            389 	mov	dptr,#0x0001
   0186                     390 00103$:
   0186 85*00 81            391 	mov	sp,_bp
   0189 D0*00               392 	pop	_bp
   018B 22                  393 	ret
                            394 ;------------------------------------------------------------
                            395 ;Allocation info for local variables in function 'ringbuf_get'
                            396 ;------------------------------------------------------------
                            397 ;r                         Allocated to stack - offset 1
                            398 ;c                         Allocated to registers r3 
                            399 ;sloc0                     Allocated to stack - offset 4
                            400 ;------------------------------------------------------------
                            401 ;	../../../core/lib/ringbuf.c:73: ringbuf_get(struct ringbuf *r)
                            402 ;	-----------------------------------------
                            403 ;	 function ringbuf_get
                            404 ;	-----------------------------------------
   018C                     405 _ringbuf_get:
   018C C0*00               406 	push	_bp
   018E 85 81*00            407 	mov	_bp,sp
   0191 C0 82               408 	push	dpl
   0193 C0 83               409 	push	dph
   0195 C0 F0               410 	push	b
   0197 05 81               411 	inc	sp
   0199 05 81               412 	inc	sp
   019B 05 81               413 	inc	sp
                            414 ;	../../../core/lib/ringbuf.c:87: if(((r->put_ptr - r->get_ptr) & r->mask) > 0) {
   019D A8*00               415 	mov	r0,_bp
   019F 08                  416 	inc	r0
   01A0 74 04               417 	mov	a,#0x04
   01A2 26                  418 	add	a,@r0
   01A3 FD                  419 	mov	r5,a
   01A4 E4                  420 	clr	a
   01A5 08                  421 	inc	r0
   01A6 36                  422 	addc	a,@r0
   01A7 FE                  423 	mov	r6,a
   01A8 08                  424 	inc	r0
   01A9 86 07               425 	mov	ar7,@r0
   01AB 8D 82               426 	mov	dpl,r5
   01AD 8E 83               427 	mov	dph,r6
   01AF 8F F0               428 	mov	b,r7
   01B1 12s00r00            429 	lcall	__gptrget
   01B4 FD                  430 	mov	r5,a
   01B5 7E 00               431 	mov	r6,#0x00
   01B7 A8*00               432 	mov	r0,_bp
   01B9 08                  433 	inc	r0
   01BA E5*00               434 	mov	a,_bp
   01BC 24 04               435 	add	a,#0x04
   01BE F9                  436 	mov	r1,a
   01BF 74 05               437 	mov	a,#0x05
   01C1 26                  438 	add	a,@r0
   01C2 F7                  439 	mov	@r1,a
   01C3 E4                  440 	clr	a
   01C4 08                  441 	inc	r0
   01C5 36                  442 	addc	a,@r0
   01C6 09                  443 	inc	r1
   01C7 F7                  444 	mov	@r1,a
   01C8 08                  445 	inc	r0
   01C9 09                  446 	inc	r1
   01CA E6                  447 	mov	a,@r0
   01CB F7                  448 	mov	@r1,a
   01CC E5*00               449 	mov	a,_bp
   01CE 24 04               450 	add	a,#0x04
   01D0 F8                  451 	mov	r0,a
   01D1 86 82               452 	mov	dpl,@r0
   01D3 08                  453 	inc	r0
   01D4 86 83               454 	mov	dph,@r0
   01D6 08                  455 	inc	r0
   01D7 86 F0               456 	mov	b,@r0
   01D9 12s00r00            457 	lcall	__gptrget
   01DC FF                  458 	mov	r7,a
   01DD FA                  459 	mov	r2,a
   01DE 7B 00               460 	mov	r3,#0x00
   01E0 ED                  461 	mov	a,r5
   01E1 C3                  462 	clr	c
   01E2 9A                  463 	subb	a,r2
   01E3 FD                  464 	mov	r5,a
   01E4 EE                  465 	mov	a,r6
   01E5 9B                  466 	subb	a,r3
   01E6 FE                  467 	mov	r6,a
   01E7 A8*00               468 	mov	r0,_bp
   01E9 08                  469 	inc	r0
   01EA 74 03               470 	mov	a,#0x03
   01EC 26                  471 	add	a,@r0
   01ED FA                  472 	mov	r2,a
   01EE E4                  473 	clr	a
   01EF 08                  474 	inc	r0
   01F0 36                  475 	addc	a,@r0
   01F1 FB                  476 	mov	r3,a
   01F2 08                  477 	inc	r0
   01F3 86 04               478 	mov	ar4,@r0
   01F5 8A 82               479 	mov	dpl,r2
   01F7 8B 83               480 	mov	dph,r3
   01F9 8C F0               481 	mov	b,r4
   01FB 12s00r00            482 	lcall	__gptrget
   01FE FA                  483 	mov	r2,a
   01FF FB                  484 	mov	r3,a
   0200 7C 00               485 	mov	r4,#0x00
   0202 EB                  486 	mov	a,r3
   0203 52 05               487 	anl	ar5,a
   0205 EC                  488 	mov	a,r4
   0206 52 06               489 	anl	ar6,a
   0208 C3                  490 	clr	c
   0209 E4                  491 	clr	a
   020A 9D                  492 	subb	a,r5
   020B 74 80               493 	mov	a,#(0x00 ^ 0x80)
   020D 8E F0               494 	mov	b,r6
   020F 63 F0 80            495 	xrl	b,#0x80
   0212 95 F0               496 	subb	a,b
   0214 50 46               497 	jnc	00102$
                            498 ;	../../../core/lib/ringbuf.c:88: c = r->data[r->get_ptr];
   0216 A8*00               499 	mov	r0,_bp
   0218 08                  500 	inc	r0
   0219 86 82               501 	mov	dpl,@r0
   021B 08                  502 	inc	r0
   021C 86 83               503 	mov	dph,@r0
   021E 08                  504 	inc	r0
   021F 86 F0               505 	mov	b,@r0
   0221 12s00r00            506 	lcall	__gptrget
   0224 FB                  507 	mov	r3,a
   0225 A3                  508 	inc	dptr
   0226 12s00r00            509 	lcall	__gptrget
   0229 FC                  510 	mov	r4,a
   022A A3                  511 	inc	dptr
   022B 12s00r00            512 	lcall	__gptrget
   022E FD                  513 	mov	r5,a
   022F EF                  514 	mov	a,r7
   0230 2B                  515 	add	a,r3
   0231 FB                  516 	mov	r3,a
   0232 E4                  517 	clr	a
   0233 3C                  518 	addc	a,r4
   0234 FC                  519 	mov	r4,a
   0235 8B 82               520 	mov	dpl,r3
   0237 8C 83               521 	mov	dph,r4
   0239 8D F0               522 	mov	b,r5
   023B 12s00r00            523 	lcall	__gptrget
   023E FB                  524 	mov	r3,a
                            525 ;	../../../core/lib/ringbuf.c:89: r->get_ptr = (r->get_ptr + 1) & r->mask;
   023F EF                  526 	mov	a,r7
   0240 04                  527 	inc	a
   0241 52 02               528 	anl	ar2,a
   0243 E5*00               529 	mov	a,_bp
   0245 24 04               530 	add	a,#0x04
   0247 F8                  531 	mov	r0,a
   0248 86 82               532 	mov	dpl,@r0
   024A 08                  533 	inc	r0
   024B 86 83               534 	mov	dph,@r0
   024D 08                  535 	inc	r0
   024E 86 F0               536 	mov	b,@r0
   0250 EA                  537 	mov	a,r2
   0251 12s00r00            538 	lcall	__gptrput
                            539 ;	../../../core/lib/ringbuf.c:90: return c;
   0254 7A 00               540 	mov	r2,#0x00
   0256 8B 82               541 	mov	dpl,r3
   0258 8A 83               542 	mov	dph,r2
   025A 80 03               543 	sjmp	00104$
   025C                     544 00102$:
                            545 ;	../../../core/lib/ringbuf.c:92: return -1;
   025C 90 FF FF            546 	mov	dptr,#0xFFFF
   025F                     547 00104$:
   025F 85*00 81            548 	mov	sp,_bp
   0262 D0*00               549 	pop	_bp
   0264 22                  550 	ret
                            551 ;------------------------------------------------------------
                            552 ;Allocation info for local variables in function 'ringbuf_size'
                            553 ;------------------------------------------------------------
                            554 ;r                         Allocated to registers r2 r3 r4 
                            555 ;------------------------------------------------------------
                            556 ;	../../../core/lib/ringbuf.c:97: ringbuf_size(struct ringbuf *r)
                            557 ;	-----------------------------------------
                            558 ;	 function ringbuf_size
                            559 ;	-----------------------------------------
   0265                     560 _ringbuf_size:
   0265 AA 82               561 	mov	r2,dpl
   0267 AB 83               562 	mov	r3,dph
   0269 AC F0               563 	mov	r4,b
                            564 ;	../../../core/lib/ringbuf.c:99: return r->mask + 1;
   026B 74 03               565 	mov	a,#0x03
   026D 2A                  566 	add	a,r2
   026E FA                  567 	mov	r2,a
   026F E4                  568 	clr	a
   0270 3B                  569 	addc	a,r3
   0271 FB                  570 	mov	r3,a
   0272 8A 82               571 	mov	dpl,r2
   0274 8B 83               572 	mov	dph,r3
   0276 8C F0               573 	mov	b,r4
   0278 12s00r00            574 	lcall	__gptrget
   027B FA                  575 	mov	r2,a
   027C 7B 00               576 	mov	r3,#0x00
   027E 0A                  577 	inc	r2
   027F BA 00 01            578 	cjne	r2,#0x00,00103$
   0282 0B                  579 	inc	r3
   0283                     580 00103$:
   0283 8A 82               581 	mov	dpl,r2
   0285 8B 83               582 	mov	dph,r3
   0287 22                  583 	ret
                            584 ;------------------------------------------------------------
                            585 ;Allocation info for local variables in function 'ringbuf_elements'
                            586 ;------------------------------------------------------------
                            587 ;r                         Allocated to registers r2 r3 r4 
                            588 ;------------------------------------------------------------
                            589 ;	../../../core/lib/ringbuf.c:103: ringbuf_elements(struct ringbuf *r)
                            590 ;	-----------------------------------------
                            591 ;	 function ringbuf_elements
                            592 ;	-----------------------------------------
   0288                     593 _ringbuf_elements:
   0288 AA 82               594 	mov	r2,dpl
   028A AB 83               595 	mov	r3,dph
   028C AC F0               596 	mov	r4,b
                            597 ;	../../../core/lib/ringbuf.c:105: return (r->put_ptr - r->get_ptr) & r->mask;
   028E 74 04               598 	mov	a,#0x04
   0290 2A                  599 	add	a,r2
   0291 FD                  600 	mov	r5,a
   0292 E4                  601 	clr	a
   0293 3B                  602 	addc	a,r3
   0294 FE                  603 	mov	r6,a
   0295 8C 07               604 	mov	ar7,r4
   0297 8D 82               605 	mov	dpl,r5
   0299 8E 83               606 	mov	dph,r6
   029B 8F F0               607 	mov	b,r7
   029D 12s00r00            608 	lcall	__gptrget
   02A0 FD                  609 	mov	r5,a
   02A1 7E 00               610 	mov	r6,#0x00
   02A3 74 05               611 	mov	a,#0x05
   02A5 2A                  612 	add	a,r2
   02A6 FF                  613 	mov	r7,a
   02A7 E4                  614 	clr	a
   02A8 3B                  615 	addc	a,r3
   02A9 F8                  616 	mov	r0,a
   02AA 8C 01               617 	mov	ar1,r4
   02AC 8F 82               618 	mov	dpl,r7
   02AE 88 83               619 	mov	dph,r0
   02B0 89 F0               620 	mov	b,r1
   02B2 12s00r00            621 	lcall	__gptrget
   02B5 FF                  622 	mov	r7,a
   02B6 78 00               623 	mov	r0,#0x00
   02B8 ED                  624 	mov	a,r5
   02B9 C3                  625 	clr	c
   02BA 9F                  626 	subb	a,r7
   02BB FD                  627 	mov	r5,a
   02BC EE                  628 	mov	a,r6
   02BD 98                  629 	subb	a,r0
   02BE FE                  630 	mov	r6,a
   02BF 74 03               631 	mov	a,#0x03
   02C1 2A                  632 	add	a,r2
   02C2 FA                  633 	mov	r2,a
   02C3 E4                  634 	clr	a
   02C4 3B                  635 	addc	a,r3
   02C5 FB                  636 	mov	r3,a
   02C6 8A 82               637 	mov	dpl,r2
   02C8 8B 83               638 	mov	dph,r3
   02CA 8C F0               639 	mov	b,r4
   02CC 12s00r00            640 	lcall	__gptrget
   02CF 7B 00               641 	mov	r3,#0x00
   02D1 52 05               642 	anl	ar5,a
   02D3 EB                  643 	mov	a,r3
   02D4 52 06               644 	anl	ar6,a
   02D6 8D 82               645 	mov	dpl,r5
   02D8 8E 83               646 	mov	dph,r6
   02DA 22                  647 	ret
                            648 	.area CSEG    (CODE)
                            649 	.area CONST   (CODE)
                            650 	.area XINIT   (CODE)
                            651 	.area CABS    (ABS,CODE)
