                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:26:37 2018
                              5 ;--------------------------------------------------------
                              6 	.module rtimer
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _IRCON2_P2IF
                             13 	.globl _IRCON2_UTX0IF
                             14 	.globl _IRCON2_UTX1IF
                             15 	.globl _IRCON2_P1IF
                             16 	.globl _IRCON2_WDTIF
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _IRCON_DMAIF
                             26 	.globl _IRCON_T1IF
                             27 	.globl _IRCON_T2IF
                             28 	.globl _IRCON_T3IF
                             29 	.globl _IRCON_T4IF
                             30 	.globl _IRCON_P0IF
                             31 	.globl _IRCON_STIF
                             32 	.globl _IEN1_DMAIE
                             33 	.globl _IEN1_T1IE
                             34 	.globl _IEN1_T2IE
                             35 	.globl _IEN1_T3IE
                             36 	.globl _IEN1_T4IE
                             37 	.globl _IEN1_P0IE
                             38 	.globl _IEN0_RFERRIE
                             39 	.globl _IEN0_ADCIE
                             40 	.globl _IEN0_URX0IE
                             41 	.globl _IEN0_URX1IE
                             42 	.globl _IEN0_ENCIE
                             43 	.globl _IEN0_STIE
                             44 	.globl _IEN0_EA
                             45 	.globl _EA
                             46 	.globl _P2_4
                             47 	.globl _P2_3
                             48 	.globl _P2_2
                             49 	.globl _P2_1
                             50 	.globl _P2_0
                             51 	.globl _S0CON_ENCIF_0
                             52 	.globl _S0CON_ENCIF_1
                             53 	.globl _P1_7
                             54 	.globl _P1_6
                             55 	.globl _P1_5
                             56 	.globl _P1_4
                             57 	.globl _P1_3
                             58 	.globl _P1_2
                             59 	.globl _P1_1
                             60 	.globl _P1_0
                             61 	.globl _TCON_IT0
                             62 	.globl _TCON_RFERRIF
                             63 	.globl _TCON_IT1
                             64 	.globl _TCON_URX0IF
                             65 	.globl _TCON_ADCIF
                             66 	.globl _TCON_URX1IF
                             67 	.globl _P0_0
                             68 	.globl _P0_1
                             69 	.globl _P0_2
                             70 	.globl _P0_3
                             71 	.globl _P0_4
                             72 	.globl _P0_5
                             73 	.globl _P0_6
                             74 	.globl _P0_7
                             75 	.globl _P2DIR
                             76 	.globl _P1DIR
                             77 	.globl _P0DIR
                             78 	.globl _U1GCR
                             79 	.globl _U1UCR
                             80 	.globl _U1BAUD
                             81 	.globl _U1BUF
                             82 	.globl _U1CSR
                             83 	.globl _P2INP
                             84 	.globl _P1INP
                             85 	.globl _P2SEL
                             86 	.globl _P1SEL
                             87 	.globl _P0SEL
                             88 	.globl _ADCCFG
                             89 	.globl _PERCFG
                             90 	.globl _B
                             91 	.globl _T4CC1
                             92 	.globl _T4CCTL1
                             93 	.globl _T4CC0
                             94 	.globl _T4CCTL0
                             95 	.globl _T4CTL
                             96 	.globl _T4CNT
                             97 	.globl _RFIF
                             98 	.globl _IRCON2
                             99 	.globl _T1CCTL2
                            100 	.globl _T1CCTL1
                            101 	.globl _T1CCTL0
                            102 	.globl _T1CTL
                            103 	.globl _T1CNTH
                            104 	.globl _T1CNTL
                            105 	.globl _RFST
                            106 	.globl _ACC
                            107 	.globl _T1CC2H
                            108 	.globl _T1CC2L
                            109 	.globl _T1CC1H
                            110 	.globl _T1CC1L
                            111 	.globl _T1CC0H
                            112 	.globl _T1CC0L
                            113 	.globl _RFD
                            114 	.globl _TIMIF
                            115 	.globl _DMAREQ
                            116 	.globl _DMAARM
                            117 	.globl _DMA0CFGH
                            118 	.globl _DMA0CFGL
                            119 	.globl _DMA1CFGH
                            120 	.globl _DMA1CFGL
                            121 	.globl _DMAIRQ
                            122 	.globl _PSW
                            123 	.globl _T3CC1
                            124 	.globl _T3CCTL1
                            125 	.globl _T3CC0
                            126 	.globl _T3CCTL0
                            127 	.globl _T3CTL
                            128 	.globl _T3CNT
                            129 	.globl _WDCTL
                            130 	.globl _T2CON
                            131 	.globl _MEMCTR
                            132 	.globl _CLKCON
                            133 	.globl _U0GCR
                            134 	.globl _U0UCR
                            135 	.globl _T2CNF
                            136 	.globl _U0BAUD
                            137 	.globl _U0BUF
                            138 	.globl _IRCON
                            139 	.globl _SLEEP
                            140 	.globl _RNDH
                            141 	.globl _RNDL
                            142 	.globl _ADCH
                            143 	.globl _ADCL
                            144 	.globl _IP1
                            145 	.globl _IEN1
                            146 	.globl _RCCTL
                            147 	.globl _ADCCON3
                            148 	.globl _ADCCON2
                            149 	.globl _ADCCON1
                            150 	.globl _ENCCS
                            151 	.globl _ENCDO
                            152 	.globl _ENCDI
                            153 	.globl _FWDATA
                            154 	.globl _FCTL
                            155 	.globl _FADDRH
                            156 	.globl _FADDRL
                            157 	.globl _FWT
                            158 	.globl _IP0
                            159 	.globl _IEN0
                            160 	.globl _IE
                            161 	.globl _T2THD
                            162 	.globl _T2TLD
                            163 	.globl _T2CAPHPH
                            164 	.globl _T2CAPLPL
                            165 	.globl _T2OF2
                            166 	.globl _T2OF1
                            167 	.globl _T2OF0
                            168 	.globl _P2
                            169 	.globl _PSBANK
                            170 	.globl _FMAP
                            171 	.globl _T2PEROF2
                            172 	.globl _T2PEROF1
                            173 	.globl _T2PEROF0
                            174 	.globl _S1CON
                            175 	.globl _IEN2
                            176 	.globl _HSRC
                            177 	.globl _S0CON
                            178 	.globl _ST2
                            179 	.globl _ST1
                            180 	.globl _ST0
                            181 	.globl _T2CMP
                            182 	.globl __XPAGE
                            183 	.globl _DPS
                            184 	.globl _RFIM
                            185 	.globl _P1
                            186 	.globl _P0INP
                            187 	.globl _P1IEN
                            188 	.globl _PICTL
                            189 	.globl _P2IFG
                            190 	.globl _P1IFG
                            191 	.globl _P0IFG
                            192 	.globl _TCON
                            193 	.globl _PCON
                            194 	.globl _U0CSR
                            195 	.globl _DPH1
                            196 	.globl _DPL1
                            197 	.globl _DPH0
                            198 	.globl _DPL0
                            199 	.globl _SP
                            200 	.globl _P0
                            201 	.globl _ADC_SHADOW
                            202 	.globl _U1BUF_SHADOW
                            203 	.globl _RFD_SHADOW
                            204 	.globl _U0BUF_SHADOW
                            205 	.globl _RFSTATUS
                            206 	.globl _CHIPID
                            207 	.globl _CHVER
                            208 	.globl _FSMTC1
                            209 	.globl _RXFIFOCNT
                            210 	.globl _IOCFG3
                            211 	.globl _IOCFG2
                            212 	.globl _IOCFG1
                            213 	.globl _IOCFG0
                            214 	.globl _SHORTADDRL
                            215 	.globl _SHORTADDRH
                            216 	.globl _PANIDL
                            217 	.globl _PANIDH
                            218 	.globl _IEEE_ADDR7
                            219 	.globl _IEEE_ADDR6
                            220 	.globl _IEEE_ADDR5
                            221 	.globl _IEEE_ADDR4
                            222 	.globl _IEEE_ADDR3
                            223 	.globl _IEEE_ADDR2
                            224 	.globl _IEEE_ADDR1
                            225 	.globl _IEEE_ADDR0
                            226 	.globl _DACTSTL
                            227 	.globl _DACTSTH
                            228 	.globl _ADCTSTL
                            229 	.globl _ADCTSTH
                            230 	.globl _FSMSTATE
                            231 	.globl _AGCCTRLL
                            232 	.globl _AGCCTRLH
                            233 	.globl _MANORL
                            234 	.globl _MANORH
                            235 	.globl _MANANDL
                            236 	.globl _MANANDH
                            237 	.globl _FSMTCL
                            238 	.globl _FSMTCH
                            239 	.globl _RFPWR
                            240 	.globl _CSPT
                            241 	.globl _CSPCTRL
                            242 	.globl _CSPZ
                            243 	.globl _CSPY
                            244 	.globl _CSPX
                            245 	.globl _FSCTRLL
                            246 	.globl _FSCTRLH
                            247 	.globl _RXCTRL1L
                            248 	.globl _RXCTRL1H
                            249 	.globl _RXCTRL0L
                            250 	.globl _RXCTRL0H
                            251 	.globl _TXCTRLL
                            252 	.globl _TXCTRLH
                            253 	.globl _SYNCWORDL
                            254 	.globl _SYNCWORDH
                            255 	.globl _RSSIL
                            256 	.globl _RSSIH
                            257 	.globl _MDMCTRL1L
                            258 	.globl _MDMCTRL1H
                            259 	.globl _MDMCTRL0L
                            260 	.globl _MDMCTRL0H
                            261 	.globl _rtimer_init
                            262 	.globl _rtimer_set
                            263 	.globl _rtimer_run_next
                            264 ;--------------------------------------------------------
                            265 ; special function registers
                            266 ;--------------------------------------------------------
                            267 	.area RSEG    (ABS,DATA)
   0000                     268 	.org 0x0000
                    0080    269 _P0	=	0x0080
                    0081    270 _SP	=	0x0081
                    0082    271 _DPL0	=	0x0082
                    0083    272 _DPH0	=	0x0083
                    0084    273 _DPL1	=	0x0084
                    0085    274 _DPH1	=	0x0085
                    0086    275 _U0CSR	=	0x0086
                    0087    276 _PCON	=	0x0087
                    0088    277 _TCON	=	0x0088
                    0089    278 _P0IFG	=	0x0089
                    008A    279 _P1IFG	=	0x008a
                    008B    280 _P2IFG	=	0x008b
                    008C    281 _PICTL	=	0x008c
                    008D    282 _P1IEN	=	0x008d
                    008F    283 _P0INP	=	0x008f
                    0090    284 _P1	=	0x0090
                    0091    285 _RFIM	=	0x0091
                    0092    286 _DPS	=	0x0092
                    0093    287 __XPAGE	=	0x0093
                    0094    288 _T2CMP	=	0x0094
                    0095    289 _ST0	=	0x0095
                    0096    290 _ST1	=	0x0096
                    0097    291 _ST2	=	0x0097
                    0098    292 _S0CON	=	0x0098
                    0099    293 _HSRC	=	0x0099
                    009A    294 _IEN2	=	0x009a
                    009B    295 _S1CON	=	0x009b
                    009C    296 _T2PEROF0	=	0x009c
                    009D    297 _T2PEROF1	=	0x009d
                    009E    298 _T2PEROF2	=	0x009e
                    009F    299 _FMAP	=	0x009f
                    009F    300 _PSBANK	=	0x009f
                    00A0    301 _P2	=	0x00a0
                    00A1    302 _T2OF0	=	0x00a1
                    00A2    303 _T2OF1	=	0x00a2
                    00A3    304 _T2OF2	=	0x00a3
                    00A4    305 _T2CAPLPL	=	0x00a4
                    00A5    306 _T2CAPHPH	=	0x00a5
                    00A6    307 _T2TLD	=	0x00a6
                    00A7    308 _T2THD	=	0x00a7
                    00A8    309 _IE	=	0x00a8
                    00A8    310 _IEN0	=	0x00a8
                    00A9    311 _IP0	=	0x00a9
                    00AB    312 _FWT	=	0x00ab
                    00AC    313 _FADDRL	=	0x00ac
                    00AD    314 _FADDRH	=	0x00ad
                    00AE    315 _FCTL	=	0x00ae
                    00AF    316 _FWDATA	=	0x00af
                    00B1    317 _ENCDI	=	0x00b1
                    00B2    318 _ENCDO	=	0x00b2
                    00B3    319 _ENCCS	=	0x00b3
                    00B4    320 _ADCCON1	=	0x00b4
                    00B5    321 _ADCCON2	=	0x00b5
                    00B6    322 _ADCCON3	=	0x00b6
                    00B7    323 _RCCTL	=	0x00b7
                    00B8    324 _IEN1	=	0x00b8
                    00B9    325 _IP1	=	0x00b9
                    00BA    326 _ADCL	=	0x00ba
                    00BB    327 _ADCH	=	0x00bb
                    00BC    328 _RNDL	=	0x00bc
                    00BD    329 _RNDH	=	0x00bd
                    00BE    330 _SLEEP	=	0x00be
                    00C0    331 _IRCON	=	0x00c0
                    00C1    332 _U0BUF	=	0x00c1
                    00C2    333 _U0BAUD	=	0x00c2
                    00C3    334 _T2CNF	=	0x00c3
                    00C4    335 _U0UCR	=	0x00c4
                    00C5    336 _U0GCR	=	0x00c5
                    00C6    337 _CLKCON	=	0x00c6
                    00C7    338 _MEMCTR	=	0x00c7
                    00C8    339 _T2CON	=	0x00c8
                    00C9    340 _WDCTL	=	0x00c9
                    00CA    341 _T3CNT	=	0x00ca
                    00CB    342 _T3CTL	=	0x00cb
                    00CC    343 _T3CCTL0	=	0x00cc
                    00CD    344 _T3CC0	=	0x00cd
                    00CE    345 _T3CCTL1	=	0x00ce
                    00CF    346 _T3CC1	=	0x00cf
                    00D0    347 _PSW	=	0x00d0
                    00D1    348 _DMAIRQ	=	0x00d1
                    00D2    349 _DMA1CFGL	=	0x00d2
                    00D3    350 _DMA1CFGH	=	0x00d3
                    00D4    351 _DMA0CFGL	=	0x00d4
                    00D5    352 _DMA0CFGH	=	0x00d5
                    00D6    353 _DMAARM	=	0x00d6
                    00D7    354 _DMAREQ	=	0x00d7
                    00D8    355 _TIMIF	=	0x00d8
                    00D9    356 _RFD	=	0x00d9
                    00DA    357 _T1CC0L	=	0x00da
                    00DB    358 _T1CC0H	=	0x00db
                    00DC    359 _T1CC1L	=	0x00dc
                    00DD    360 _T1CC1H	=	0x00dd
                    00DE    361 _T1CC2L	=	0x00de
                    00DF    362 _T1CC2H	=	0x00df
                    00E0    363 _ACC	=	0x00e0
                    00E1    364 _RFST	=	0x00e1
                    00E2    365 _T1CNTL	=	0x00e2
                    00E3    366 _T1CNTH	=	0x00e3
                    00E4    367 _T1CTL	=	0x00e4
                    00E5    368 _T1CCTL0	=	0x00e5
                    00E6    369 _T1CCTL1	=	0x00e6
                    00E7    370 _T1CCTL2	=	0x00e7
                    00E8    371 _IRCON2	=	0x00e8
                    00E9    372 _RFIF	=	0x00e9
                    00EA    373 _T4CNT	=	0x00ea
                    00EB    374 _T4CTL	=	0x00eb
                    00EC    375 _T4CCTL0	=	0x00ec
                    00ED    376 _T4CC0	=	0x00ed
                    00EE    377 _T4CCTL1	=	0x00ee
                    00EF    378 _T4CC1	=	0x00ef
                    00F0    379 _B	=	0x00f0
                    00F1    380 _PERCFG	=	0x00f1
                    00F2    381 _ADCCFG	=	0x00f2
                    00F3    382 _P0SEL	=	0x00f3
                    00F4    383 _P1SEL	=	0x00f4
                    00F5    384 _P2SEL	=	0x00f5
                    00F6    385 _P1INP	=	0x00f6
                    00F7    386 _P2INP	=	0x00f7
                    00F8    387 _U1CSR	=	0x00f8
                    00F9    388 _U1BUF	=	0x00f9
                    00FA    389 _U1BAUD	=	0x00fa
                    00FB    390 _U1UCR	=	0x00fb
                    00FC    391 _U1GCR	=	0x00fc
                    00FD    392 _P0DIR	=	0x00fd
                    00FE    393 _P1DIR	=	0x00fe
                    00FF    394 _P2DIR	=	0x00ff
                            395 ;--------------------------------------------------------
                            396 ; special function bits
                            397 ;--------------------------------------------------------
                            398 	.area RSEG    (ABS,DATA)
   0000                     399 	.org 0x0000
                    0087    400 _P0_7	=	0x0087
                    0086    401 _P0_6	=	0x0086
                    0085    402 _P0_5	=	0x0085
                    0084    403 _P0_4	=	0x0084
                    0083    404 _P0_3	=	0x0083
                    0082    405 _P0_2	=	0x0082
                    0081    406 _P0_1	=	0x0081
                    0080    407 _P0_0	=	0x0080
                    008F    408 _TCON_URX1IF	=	0x008f
                    008D    409 _TCON_ADCIF	=	0x008d
                    008B    410 _TCON_URX0IF	=	0x008b
                    008A    411 _TCON_IT1	=	0x008a
                    0089    412 _TCON_RFERRIF	=	0x0089
                    0088    413 _TCON_IT0	=	0x0088
                    0090    414 _P1_0	=	0x0090
                    0091    415 _P1_1	=	0x0091
                    0092    416 _P1_2	=	0x0092
                    0093    417 _P1_3	=	0x0093
                    0094    418 _P1_4	=	0x0094
                    0095    419 _P1_5	=	0x0095
                    0096    420 _P1_6	=	0x0096
                    0097    421 _P1_7	=	0x0097
                    0099    422 _S0CON_ENCIF_1	=	0x0099
                    0098    423 _S0CON_ENCIF_0	=	0x0098
                    00A0    424 _P2_0	=	0x00a0
                    00A1    425 _P2_1	=	0x00a1
                    00A2    426 _P2_2	=	0x00a2
                    00A3    427 _P2_3	=	0x00a3
                    00A4    428 _P2_4	=	0x00a4
                    00AF    429 _EA	=	0x00af
                    00AF    430 _IEN0_EA	=	0x00af
                    00AD    431 _IEN0_STIE	=	0x00ad
                    00AC    432 _IEN0_ENCIE	=	0x00ac
                    00AB    433 _IEN0_URX1IE	=	0x00ab
                    00AA    434 _IEN0_URX0IE	=	0x00aa
                    00A9    435 _IEN0_ADCIE	=	0x00a9
                    00A8    436 _IEN0_RFERRIE	=	0x00a8
                    00BD    437 _IEN1_P0IE	=	0x00bd
                    00BC    438 _IEN1_T4IE	=	0x00bc
                    00BB    439 _IEN1_T3IE	=	0x00bb
                    00BA    440 _IEN1_T2IE	=	0x00ba
                    00B9    441 _IEN1_T1IE	=	0x00b9
                    00B8    442 _IEN1_DMAIE	=	0x00b8
                    00C7    443 _IRCON_STIF	=	0x00c7
                    00C5    444 _IRCON_P0IF	=	0x00c5
                    00C4    445 _IRCON_T4IF	=	0x00c4
                    00C3    446 _IRCON_T3IF	=	0x00c3
                    00C2    447 _IRCON_T2IF	=	0x00c2
                    00C1    448 _IRCON_T1IF	=	0x00c1
                    00C0    449 _IRCON_DMAIF	=	0x00c0
                    00D0    450 _P	=	0x00d0
                    00D1    451 _F1	=	0x00d1
                    00D2    452 _OV	=	0x00d2
                    00D3    453 _RS0	=	0x00d3
                    00D4    454 _RS1	=	0x00d4
                    00D5    455 _F0	=	0x00d5
                    00D6    456 _AC	=	0x00d6
                    00D7    457 _CY	=	0x00d7
                    00EC    458 _IRCON2_WDTIF	=	0x00ec
                    00EB    459 _IRCON2_P1IF	=	0x00eb
                    00EA    460 _IRCON2_UTX1IF	=	0x00ea
                    00E9    461 _IRCON2_UTX0IF	=	0x00e9
                    00E8    462 _IRCON2_P2IF	=	0x00e8
                            463 ;--------------------------------------------------------
                            464 ; overlayable register banks
                            465 ;--------------------------------------------------------
                            466 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     467 	.ds 8
                            468 ;--------------------------------------------------------
                            469 ; internal ram data
                            470 ;--------------------------------------------------------
                            471 	.area DSEG    (DATA)
                            472 ;--------------------------------------------------------
                            473 ; overlayable items in internal ram 
                            474 ;--------------------------------------------------------
                            475 	.area OSEG    (OVR,DATA)
                            476 ;--------------------------------------------------------
                            477 ; indirectly addressable internal ram data
                            478 ;--------------------------------------------------------
                            479 	.area ISEG    (DATA)
                            480 ;--------------------------------------------------------
                            481 ; absolute internal ram data
                            482 ;--------------------------------------------------------
                            483 	.area IABS    (ABS,DATA)
                            484 	.area IABS    (ABS,DATA)
                            485 ;--------------------------------------------------------
                            486 ; bit data
                            487 ;--------------------------------------------------------
                            488 	.area BSEG    (BIT)
                            489 ;--------------------------------------------------------
                            490 ; paged external ram data
                            491 ;--------------------------------------------------------
                            492 	.area PSEG    (PAG,XDATA)
                            493 ;--------------------------------------------------------
                            494 ; external ram data
                            495 ;--------------------------------------------------------
                            496 	.area XSEG    (XDATA)
                    DF02    497 _MDMCTRL0H	=	0xdf02
                    DF03    498 _MDMCTRL0L	=	0xdf03
                    DF04    499 _MDMCTRL1H	=	0xdf04
                    DF05    500 _MDMCTRL1L	=	0xdf05
                    DF06    501 _RSSIH	=	0xdf06
                    DF07    502 _RSSIL	=	0xdf07
                    DF08    503 _SYNCWORDH	=	0xdf08
                    DF09    504 _SYNCWORDL	=	0xdf09
                    DF0A    505 _TXCTRLH	=	0xdf0a
                    DF0B    506 _TXCTRLL	=	0xdf0b
                    DF0C    507 _RXCTRL0H	=	0xdf0c
                    DF0D    508 _RXCTRL0L	=	0xdf0d
                    DF0E    509 _RXCTRL1H	=	0xdf0e
                    DF0F    510 _RXCTRL1L	=	0xdf0f
                    DF10    511 _FSCTRLH	=	0xdf10
                    DF11    512 _FSCTRLL	=	0xdf11
                    DF12    513 _CSPX	=	0xdf12
                    DF13    514 _CSPY	=	0xdf13
                    DF14    515 _CSPZ	=	0xdf14
                    DF15    516 _CSPCTRL	=	0xdf15
                    DF16    517 _CSPT	=	0xdf16
                    DF17    518 _RFPWR	=	0xdf17
                    DF20    519 _FSMTCH	=	0xdf20
                    DF21    520 _FSMTCL	=	0xdf21
                    DF22    521 _MANANDH	=	0xdf22
                    DF23    522 _MANANDL	=	0xdf23
                    DF24    523 _MANORH	=	0xdf24
                    DF25    524 _MANORL	=	0xdf25
                    DF26    525 _AGCCTRLH	=	0xdf26
                    DF27    526 _AGCCTRLL	=	0xdf27
                    DF39    527 _FSMSTATE	=	0xdf39
                    DF3A    528 _ADCTSTH	=	0xdf3a
                    DF3B    529 _ADCTSTL	=	0xdf3b
                    DF3C    530 _DACTSTH	=	0xdf3c
                    DF3D    531 _DACTSTL	=	0xdf3d
                    DF43    532 _IEEE_ADDR0	=	0xdf43
                    DF44    533 _IEEE_ADDR1	=	0xdf44
                    DF45    534 _IEEE_ADDR2	=	0xdf45
                    DF46    535 _IEEE_ADDR3	=	0xdf46
                    DF47    536 _IEEE_ADDR4	=	0xdf47
                    DF48    537 _IEEE_ADDR5	=	0xdf48
                    DF49    538 _IEEE_ADDR6	=	0xdf49
                    DF4A    539 _IEEE_ADDR7	=	0xdf4a
                    DF4B    540 _PANIDH	=	0xdf4b
                    DF4C    541 _PANIDL	=	0xdf4c
                    DF4D    542 _SHORTADDRH	=	0xdf4d
                    DF4E    543 _SHORTADDRL	=	0xdf4e
                    DF4F    544 _IOCFG0	=	0xdf4f
                    DF50    545 _IOCFG1	=	0xdf50
                    DF51    546 _IOCFG2	=	0xdf51
                    DF52    547 _IOCFG3	=	0xdf52
                    DF53    548 _RXFIFOCNT	=	0xdf53
                    DF54    549 _FSMTC1	=	0xdf54
                    DF60    550 _CHVER	=	0xdf60
                    DF61    551 _CHIPID	=	0xdf61
                    DF62    552 _RFSTATUS	=	0xdf62
                    DFC1    553 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    554 _RFD_SHADOW	=	0xdfd9
                    DFF9    555 _U1BUF_SHADOW	=	0xdff9
                    DFBA    556 _ADC_SHADOW	=	0xdfba
   0000                     557 _next_rtimer:
   0000                     558 	.ds 3
                            559 ;--------------------------------------------------------
                            560 ; absolute external ram data
                            561 ;--------------------------------------------------------
                            562 	.area XABS    (ABS,XDATA)
                            563 ;--------------------------------------------------------
                            564 ; external initialized ram data
                            565 ;--------------------------------------------------------
                            566 	.area XISEG   (XDATA)
                            567 	.area HOME    (CODE)
                            568 	.area GSINIT0 (CODE)
                            569 	.area GSINIT1 (CODE)
                            570 	.area GSINIT2 (CODE)
                            571 	.area GSINIT3 (CODE)
                            572 	.area GSINIT4 (CODE)
                            573 	.area GSINIT5 (CODE)
                            574 	.area GSINIT  (CODE)
                            575 	.area GSFINAL (CODE)
                            576 	.area CSEG    (CODE)
                            577 ;--------------------------------------------------------
                            578 ; global & static initialisations
                            579 ;--------------------------------------------------------
                            580 	.area HOME    (CODE)
                            581 	.area GSINIT  (CODE)
                            582 	.area GSFINAL (CODE)
                            583 	.area GSINIT  (CODE)
                            584 ;--------------------------------------------------------
                            585 ; Home
                            586 ;--------------------------------------------------------
                            587 	.area HOME    (CODE)
                            588 	.area HOME    (CODE)
                            589 ;--------------------------------------------------------
                            590 ; code
                            591 ;--------------------------------------------------------
                            592 	.area CSEG    (CODE)
                            593 ;------------------------------------------------------------
                            594 ;Allocation info for local variables in function 'rtimer_init'
                            595 ;------------------------------------------------------------
                            596 ;------------------------------------------------------------
                            597 ;	../../../core/sys/rtimer.c:63: rtimer_init(void)
                            598 ;	-----------------------------------------
                            599 ;	 function rtimer_init
                            600 ;	-----------------------------------------
   0000                     601 _rtimer_init:
                    0002    602 	ar2 = 0x02
                    0003    603 	ar3 = 0x03
                    0004    604 	ar4 = 0x04
                    0005    605 	ar5 = 0x05
                    0006    606 	ar6 = 0x06
                    0007    607 	ar7 = 0x07
                    0000    608 	ar0 = 0x00
                    0001    609 	ar1 = 0x01
                            610 ;	../../../core/sys/rtimer.c:65: rtimer_arch_init();
   0000 02s00r00            611 	ljmp	_rtimer_arch_init
                            612 ;------------------------------------------------------------
                            613 ;Allocation info for local variables in function 'rtimer_set'
                            614 ;------------------------------------------------------------
                            615 ;time                      Allocated to stack - offset -4
                            616 ;duration                  Allocated to stack - offset -6
                            617 ;func                      Allocated to stack - offset -8
                            618 ;ptr                       Allocated to stack - offset -11
                            619 ;rtimer                    Allocated to registers r2 r3 r4 
                            620 ;first                     Allocated to stack - offset 1
                            621 ;------------------------------------------------------------
                            622 ;	../../../core/sys/rtimer.c:69: rtimer_set(struct rtimer *rtimer, rtimer_clock_t time,
                            623 ;	-----------------------------------------
                            624 ;	 function rtimer_set
                            625 ;	-----------------------------------------
   0003                     626 _rtimer_set:
   0003 C0*00               627 	push	_bp
   0005 85 81*00            628 	mov	_bp,sp
   0008 05 81               629 	inc	sp
   000A 05 81               630 	inc	sp
   000C AA 82               631 	mov	r2,dpl
   000E AB 83               632 	mov	r3,dph
   0010 AC F0               633 	mov	r4,b
                            634 ;	../../../core/sys/rtimer.c:73: int first = 0;
   0012 A8*00               635 	mov	r0,_bp
   0014 08                  636 	inc	r0
   0015 E4                  637 	clr	a
   0016 F6                  638 	mov	@r0,a
   0017 08                  639 	inc	r0
   0018 F6                  640 	mov	@r0,a
                            641 ;	../../../core/sys/rtimer.c:77: if(next_rtimer == NULL) {
   0019 90s00r00            642 	mov	dptr,#_next_rtimer
   001C E0                  643 	movx	a,@dptr
   001D FF                  644 	mov	r7,a
   001E A3                  645 	inc	dptr
   001F E0                  646 	movx	a,@dptr
   0020 FD                  647 	mov	r5,a
   0021 A3                  648 	inc	dptr
   0022 E0                  649 	movx	a,@dptr
   0023 FE                  650 	mov	r6,a
   0024 EF                  651 	mov	a,r7
   0025 4D                  652 	orl	a,r5
   0026 4E                  653 	orl	a,r6
   0027 70 08               654 	jnz	00102$
                            655 ;	../../../core/sys/rtimer.c:78: first = 1;
   0029 A8*00               656 	mov	r0,_bp
   002B 08                  657 	inc	r0
   002C 76 01               658 	mov	@r0,#0x01
   002E 08                  659 	inc	r0
   002F 76 00               660 	mov	@r0,#0x00
   0031                     661 00102$:
                            662 ;	../../../core/sys/rtimer.c:81: rtimer->func = func;
   0031 74 02               663 	mov	a,#0x02
   0033 2A                  664 	add	a,r2
   0034 FD                  665 	mov	r5,a
   0035 E4                  666 	clr	a
   0036 3B                  667 	addc	a,r3
   0037 FE                  668 	mov	r6,a
   0038 8C 07               669 	mov	ar7,r4
   003A 8D 82               670 	mov	dpl,r5
   003C 8E 83               671 	mov	dph,r6
   003E 8F F0               672 	mov	b,r7
   0040 E5*00               673 	mov	a,_bp
   0042 24 F8               674 	add	a,#0xf8
   0044 F8                  675 	mov	r0,a
   0045 E6                  676 	mov	a,@r0
   0046 12s00r00            677 	lcall	__gptrput
   0049 A3                  678 	inc	dptr
   004A 08                  679 	inc	r0
   004B E6                  680 	mov	a,@r0
   004C 12s00r00            681 	lcall	__gptrput
                            682 ;	../../../core/sys/rtimer.c:82: rtimer->ptr = ptr;
   004F 74 04               683 	mov	a,#0x04
   0051 2A                  684 	add	a,r2
   0052 FD                  685 	mov	r5,a
   0053 E4                  686 	clr	a
   0054 3B                  687 	addc	a,r3
   0055 FE                  688 	mov	r6,a
   0056 8C 07               689 	mov	ar7,r4
   0058 8D 82               690 	mov	dpl,r5
   005A 8E 83               691 	mov	dph,r6
   005C 8F F0               692 	mov	b,r7
   005E E5*00               693 	mov	a,_bp
   0060 24 F5               694 	add	a,#0xf5
   0062 F8                  695 	mov	r0,a
   0063 E6                  696 	mov	a,@r0
   0064 12s00r00            697 	lcall	__gptrput
   0067 A3                  698 	inc	dptr
   0068 08                  699 	inc	r0
   0069 E6                  700 	mov	a,@r0
   006A 12s00r00            701 	lcall	__gptrput
   006D A3                  702 	inc	dptr
   006E 08                  703 	inc	r0
   006F E6                  704 	mov	a,@r0
   0070 12s00r00            705 	lcall	__gptrput
                            706 ;	../../../core/sys/rtimer.c:84: rtimer->time = time;
   0073 8A 82               707 	mov	dpl,r2
   0075 8B 83               708 	mov	dph,r3
   0077 8C F0               709 	mov	b,r4
   0079 E5*00               710 	mov	a,_bp
   007B 24 FC               711 	add	a,#0xfc
   007D F8                  712 	mov	r0,a
   007E E6                  713 	mov	a,@r0
   007F 12s00r00            714 	lcall	__gptrput
   0082 A3                  715 	inc	dptr
   0083 08                  716 	inc	r0
   0084 E6                  717 	mov	a,@r0
   0085 12s00r00            718 	lcall	__gptrput
                            719 ;	../../../core/sys/rtimer.c:85: next_rtimer = rtimer;
   0088 90s00r00            720 	mov	dptr,#_next_rtimer
   008B EA                  721 	mov	a,r2
   008C F0                  722 	movx	@dptr,a
   008D A3                  723 	inc	dptr
   008E EB                  724 	mov	a,r3
   008F F0                  725 	movx	@dptr,a
   0090 A3                  726 	inc	dptr
   0091 EC                  727 	mov	a,r4
   0092 F0                  728 	movx	@dptr,a
                            729 ;	../../../core/sys/rtimer.c:87: if(first == 1) {
   0093 A8*00               730 	mov	r0,_bp
   0095 08                  731 	inc	r0
   0096 B6 01 11            732 	cjne	@r0,#0x01,00104$
   0099 08                  733 	inc	r0
   009A B6 00 0D            734 	cjne	@r0,#0x00,00104$
                            735 ;	../../../core/sys/rtimer.c:88: rtimer_arch_schedule(time);
   009D E5*00               736 	mov	a,_bp
   009F 24 FC               737 	add	a,#0xfc
   00A1 F8                  738 	mov	r0,a
   00A2 86 82               739 	mov	dpl,@r0
   00A4 08                  740 	inc	r0
   00A5 86 83               741 	mov	dph,@r0
   00A7 12s00r00            742 	lcall	_rtimer_arch_schedule
   00AA                     743 00104$:
                            744 ;	../../../core/sys/rtimer.c:90: return RTIMER_OK;
   00AA 90 00 00            745 	mov	dptr,#0x0000
   00AD 85*00 81            746 	mov	sp,_bp
   00B0 D0*00               747 	pop	_bp
   00B2 22                  748 	ret
                            749 ;------------------------------------------------------------
                            750 ;Allocation info for local variables in function 'rtimer_run_next'
                            751 ;------------------------------------------------------------
                            752 ;t                         Allocated to stack - offset 1
                            753 ;------------------------------------------------------------
                            754 ;	../../../core/sys/rtimer.c:94: rtimer_run_next(void)
                            755 ;	-----------------------------------------
                            756 ;	 function rtimer_run_next
                            757 ;	-----------------------------------------
   00B3                     758 _rtimer_run_next:
   00B3 C0*00               759 	push	_bp
   00B5 85 81*00            760 	mov	_bp,sp
   00B8 05 81               761 	inc	sp
   00BA 05 81               762 	inc	sp
   00BC 05 81               763 	inc	sp
                            764 ;	../../../core/sys/rtimer.c:97: if(next_rtimer == NULL) {
   00BE 90s00r00            765 	mov	dptr,#_next_rtimer
   00C1 E0                  766 	movx	a,@dptr
   00C2 FA                  767 	mov	r2,a
   00C3 A3                  768 	inc	dptr
   00C4 E0                  769 	movx	a,@dptr
   00C5 FB                  770 	mov	r3,a
   00C6 A3                  771 	inc	dptr
   00C7 E0                  772 	movx	a,@dptr
   00C8 FC                  773 	mov	r4,a
   00C9 EA                  774 	mov	a,r2
   00CA 4B                  775 	orl	a,r3
   00CB 4C                  776 	orl	a,r4
   00CC 70 03               777 	jnz	00102$
                            778 ;	../../../core/sys/rtimer.c:98: return;
   00CE 02s01r76            779 	ljmp	00105$
   00D1                     780 00102$:
                            781 ;	../../../core/sys/rtimer.c:100: t = next_rtimer;
   00D1 A8*00               782 	mov	r0,_bp
   00D3 08                  783 	inc	r0
   00D4 A6 02               784 	mov	@r0,ar2
   00D6 08                  785 	inc	r0
   00D7 A6 03               786 	mov	@r0,ar3
   00D9 08                  787 	inc	r0
   00DA A6 04               788 	mov	@r0,ar4
                            789 ;	../../../core/sys/rtimer.c:101: next_rtimer = NULL;
   00DC 90s00r00            790 	mov	dptr,#_next_rtimer
   00DF E4                  791 	clr	a
   00E0 F0                  792 	movx	@dptr,a
   00E1 A3                  793 	inc	dptr
   00E2 F0                  794 	movx	@dptr,a
   00E3 A3                  795 	inc	dptr
   00E4 F0                  796 	movx	@dptr,a
                            797 ;	../../../core/sys/rtimer.c:102: t->func(t, t->ptr);
   00E5 A8*00               798 	mov	r0,_bp
   00E7 08                  799 	inc	r0
   00E8 74 02               800 	mov	a,#0x02
   00EA 26                  801 	add	a,@r0
   00EB FD                  802 	mov	r5,a
   00EC E4                  803 	clr	a
   00ED 08                  804 	inc	r0
   00EE 36                  805 	addc	a,@r0
   00EF FE                  806 	mov	r6,a
   00F0 08                  807 	inc	r0
   00F1 86 07               808 	mov	ar7,@r0
   00F3 8D 82               809 	mov	dpl,r5
   00F5 8E 83               810 	mov	dph,r6
   00F7 8F F0               811 	mov	b,r7
   00F9 12s00r00            812 	lcall	__gptrget
   00FC FD                  813 	mov	r5,a
   00FD A3                  814 	inc	dptr
   00FE 12s00r00            815 	lcall	__gptrget
   0101 FE                  816 	mov	r6,a
   0102 A8*00               817 	mov	r0,_bp
   0104 08                  818 	inc	r0
   0105 74 04               819 	mov	a,#0x04
   0107 26                  820 	add	a,@r0
   0108 FF                  821 	mov	r7,a
   0109 E4                  822 	clr	a
   010A 08                  823 	inc	r0
   010B 36                  824 	addc	a,@r0
   010C FA                  825 	mov	r2,a
   010D 08                  826 	inc	r0
   010E 86 03               827 	mov	ar3,@r0
   0110 8F 82               828 	mov	dpl,r7
   0112 8A 83               829 	mov	dph,r2
   0114 8B F0               830 	mov	b,r3
   0116 12s00r00            831 	lcall	__gptrget
   0119 FF                  832 	mov	r7,a
   011A A3                  833 	inc	dptr
   011B 12s00r00            834 	lcall	__gptrget
   011E FA                  835 	mov	r2,a
   011F A3                  836 	inc	dptr
   0120 12s00r00            837 	lcall	__gptrget
   0123 FB                  838 	mov	r3,a
   0124 C0 05               839 	push	ar5
   0126 C0 06               840 	push	ar6
   0128 C0 07               841 	push	ar7
   012A C0 02               842 	push	ar2
   012C C0 03               843 	push	ar3
   012E 74r46               844 	mov	a,#00110$
   0130 C0 E0               845 	push	acc
   0132 74s01               846 	mov	a,#(00110$ >> 8)
   0134 C0 E0               847 	push	acc
   0136 C0 05               848 	push	ar5
   0138 C0 06               849 	push	ar6
   013A A8*00               850 	mov	r0,_bp
   013C 08                  851 	inc	r0
   013D 86 82               852 	mov	dpl,@r0
   013F 08                  853 	inc	r0
   0140 86 83               854 	mov	dph,@r0
   0142 08                  855 	inc	r0
   0143 86 F0               856 	mov	b,@r0
   0145 22                  857 	ret
   0146                     858 00110$:
   0146 15 81               859 	dec	sp
   0148 15 81               860 	dec	sp
   014A 15 81               861 	dec	sp
   014C D0 06               862 	pop	ar6
   014E D0 05               863 	pop	ar5
                            864 ;	../../../core/sys/rtimer.c:103: if(next_rtimer != NULL) {
   0150 90s00r00            865 	mov	dptr,#_next_rtimer
   0153 E0                  866 	movx	a,@dptr
   0154 FA                  867 	mov	r2,a
   0155 A3                  868 	inc	dptr
   0156 E0                  869 	movx	a,@dptr
   0157 FB                  870 	mov	r3,a
   0158 A3                  871 	inc	dptr
   0159 E0                  872 	movx	a,@dptr
   015A FC                  873 	mov	r4,a
   015B EA                  874 	mov	a,r2
   015C 4B                  875 	orl	a,r3
   015D 4C                  876 	orl	a,r4
   015E 60 16               877 	jz	00104$
                            878 ;	../../../core/sys/rtimer.c:104: rtimer_arch_schedule(next_rtimer->time);
   0160 8A 82               879 	mov	dpl,r2
   0162 8B 83               880 	mov	dph,r3
   0164 8C F0               881 	mov	b,r4
   0166 12s00r00            882 	lcall	__gptrget
   0169 FA                  883 	mov	r2,a
   016A A3                  884 	inc	dptr
   016B 12s00r00            885 	lcall	__gptrget
   016E FB                  886 	mov	r3,a
   016F 8A 82               887 	mov	dpl,r2
   0171 8B 83               888 	mov	dph,r3
   0173 12s00r00            889 	lcall	_rtimer_arch_schedule
   0176                     890 00104$:
                            891 ;	../../../core/sys/rtimer.c:106: return;
   0176                     892 00105$:
   0176 85*00 81            893 	mov	sp,_bp
   0179 D0*00               894 	pop	_bp
   017B 22                  895 	ret
                            896 	.area CSEG    (CODE)
                            897 	.area CONST   (CODE)
                            898 	.area XINIT   (CODE)
                            899 	.area CABS    (ABS,CODE)
