                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:26:00 2018
                              5 ;--------------------------------------------------------
                              6 	.module mac
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _mac_call_sent_callback
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 	.area RSEG    (ABS,DATA)
   0000                      17 	.org 0x0000
                             18 ;--------------------------------------------------------
                             19 ; special function bits
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; overlayable register banks
                             25 ;--------------------------------------------------------
                             26 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      27 	.ds 8
                             28 ;--------------------------------------------------------
                             29 ; internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area DSEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; overlayable items in internal ram 
                             34 ;--------------------------------------------------------
                             35 	.area OSEG    (OVR,DATA)
                             36 ;--------------------------------------------------------
                             37 ; indirectly addressable internal ram data
                             38 ;--------------------------------------------------------
                             39 	.area ISEG    (DATA)
                             40 ;--------------------------------------------------------
                             41 ; absolute internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area IABS    (ABS,DATA)
                             44 	.area IABS    (ABS,DATA)
                             45 ;--------------------------------------------------------
                             46 ; bit data
                             47 ;--------------------------------------------------------
                             48 	.area BSEG    (BIT)
                             49 ;--------------------------------------------------------
                             50 ; paged external ram data
                             51 ;--------------------------------------------------------
                             52 	.area PSEG    (PAG,XDATA)
                             53 ;--------------------------------------------------------
                             54 ; external ram data
                             55 ;--------------------------------------------------------
                             56 	.area XSEG    (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; absolute external ram data
                             59 ;--------------------------------------------------------
                             60 	.area XABS    (ABS,XDATA)
                             61 ;--------------------------------------------------------
                             62 ; external initialized ram data
                             63 ;--------------------------------------------------------
                             64 	.area XISEG   (XDATA)
                             65 	.area HOME    (CODE)
                             66 	.area GSINIT0 (CODE)
                             67 	.area GSINIT1 (CODE)
                             68 	.area GSINIT2 (CODE)
                             69 	.area GSINIT3 (CODE)
                             70 	.area GSINIT4 (CODE)
                             71 	.area GSINIT5 (CODE)
                             72 	.area GSINIT  (CODE)
                             73 	.area GSFINAL (CODE)
                             74 	.area CSEG    (CODE)
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area HOME    (CODE)
                             79 	.area GSINIT  (CODE)
                             80 	.area GSFINAL (CODE)
                             81 	.area GSINIT  (CODE)
                             82 ;--------------------------------------------------------
                             83 ; Home
                             84 ;--------------------------------------------------------
                             85 	.area HOME    (CODE)
                             86 	.area HOME    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; code
                             89 ;--------------------------------------------------------
                             90 	.area CSEG    (CODE)
                             91 ;------------------------------------------------------------
                             92 ;Allocation info for local variables in function 'mac_call_sent_callback'
                             93 ;------------------------------------------------------------
                             94 ;ptr                       Allocated to stack - offset -5
                             95 ;status                    Allocated to stack - offset -7
                             96 ;num_tx                    Allocated to stack - offset -9
                             97 ;sent                      Allocated to registers r2 r3 
                             98 ;------------------------------------------------------------
                             99 ;	../../../core/net/mac/mac.c:46: mac_call_sent_callback(mac_callback_t sent, void *ptr, int status, int num_tx)
                            100 ;	-----------------------------------------
                            101 ;	 function mac_call_sent_callback
                            102 ;	-----------------------------------------
   0000                     103 _mac_call_sent_callback:
                    0002    104 	ar2 = 0x02
                    0003    105 	ar3 = 0x03
                    0004    106 	ar4 = 0x04
                    0005    107 	ar5 = 0x05
                    0006    108 	ar6 = 0x06
                    0007    109 	ar7 = 0x07
                    0000    110 	ar0 = 0x00
                    0001    111 	ar1 = 0x01
   0000 C0*00               112 	push	_bp
   0002 85 81*00            113 	mov	_bp,sp
   0005 AA 82               114 	mov	r2,dpl
   0007 AB 83               115 	mov	r3,dph
                            116 ;	../../../core/net/mac/mac.c:64: if(sent) {
   0009 EA                  117 	mov	a,r2
   000A 4B                  118 	orl	a,r3
   000B 60 40               119 	jz	00108$
                            120 ;	../../../core/net/mac/mac.c:65: sent(ptr, status, num_tx);
   000D C0 02               121 	push	ar2
   000F C0 03               122 	push	ar3
   0011 E5*00               123 	mov	a,_bp
   0013 24 F7               124 	add	a,#0xf7
   0015 F8                  125 	mov	r0,a
   0016 E6                  126 	mov	a,@r0
   0017 C0 E0               127 	push	acc
   0019 08                  128 	inc	r0
   001A E6                  129 	mov	a,@r0
   001B C0 E0               130 	push	acc
   001D E5*00               131 	mov	a,_bp
   001F 24 F9               132 	add	a,#0xf9
   0021 F8                  133 	mov	r0,a
   0022 E6                  134 	mov	a,@r0
   0023 C0 E0               135 	push	acc
   0025 08                  136 	inc	r0
   0026 E6                  137 	mov	a,@r0
   0027 C0 E0               138 	push	acc
   0029 74r43               139 	mov	a,#00114$
   002B C0 E0               140 	push	acc
   002D 74s00               141 	mov	a,#(00114$ >> 8)
   002F C0 E0               142 	push	acc
   0031 C0 02               143 	push	ar2
   0033 C0 03               144 	push	ar3
   0035 E5*00               145 	mov	a,_bp
   0037 24 FB               146 	add	a,#0xfb
   0039 F8                  147 	mov	r0,a
   003A 86 82               148 	mov	dpl,@r0
   003C 08                  149 	inc	r0
   003D 86 83               150 	mov	dph,@r0
   003F 08                  151 	inc	r0
   0040 86 F0               152 	mov	b,@r0
   0042 22                  153 	ret
   0043                     154 00114$:
   0043 E5 81               155 	mov	a,sp
   0045 24 FC               156 	add	a,#0xfc
   0047 F5 81               157 	mov	sp,a
   0049 D0 03               158 	pop	ar3
   004B D0 02               159 	pop	ar2
   004D                     160 00108$:
   004D D0*00               161 	pop	_bp
   004F 22                  162 	ret
                            163 	.area CSEG    (CODE)
                            164 	.area CONST   (CODE)
                            165 	.area XINIT   (CODE)
                            166 	.area CABS    (ABS,CODE)
