                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:27:06 2018
                              5 ;--------------------------------------------------------
                              6 	.module tcpip
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _IRCON2_P2IF
                             13 	.globl _IRCON2_UTX0IF
                             14 	.globl _IRCON2_UTX1IF
                             15 	.globl _IRCON2_P1IF
                             16 	.globl _IRCON2_WDTIF
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _IRCON_DMAIF
                             26 	.globl _IRCON_T1IF
                             27 	.globl _IRCON_T2IF
                             28 	.globl _IRCON_T3IF
                             29 	.globl _IRCON_T4IF
                             30 	.globl _IRCON_P0IF
                             31 	.globl _IRCON_STIF
                             32 	.globl _IEN1_DMAIE
                             33 	.globl _IEN1_T1IE
                             34 	.globl _IEN1_T2IE
                             35 	.globl _IEN1_T3IE
                             36 	.globl _IEN1_T4IE
                             37 	.globl _IEN1_P0IE
                             38 	.globl _IEN0_RFERRIE
                             39 	.globl _IEN0_ADCIE
                             40 	.globl _IEN0_URX0IE
                             41 	.globl _IEN0_URX1IE
                             42 	.globl _IEN0_ENCIE
                             43 	.globl _IEN0_STIE
                             44 	.globl _IEN0_EA
                             45 	.globl _EA
                             46 	.globl _P2_4
                             47 	.globl _P2_3
                             48 	.globl _P2_2
                             49 	.globl _P2_1
                             50 	.globl _P2_0
                             51 	.globl _S0CON_ENCIF_0
                             52 	.globl _S0CON_ENCIF_1
                             53 	.globl _P1_7
                             54 	.globl _P1_6
                             55 	.globl _P1_5
                             56 	.globl _P1_4
                             57 	.globl _P1_3
                             58 	.globl _P1_2
                             59 	.globl _P1_1
                             60 	.globl _P1_0
                             61 	.globl _TCON_IT0
                             62 	.globl _TCON_RFERRIF
                             63 	.globl _TCON_IT1
                             64 	.globl _TCON_URX0IF
                             65 	.globl _TCON_ADCIF
                             66 	.globl _TCON_URX1IF
                             67 	.globl _P0_0
                             68 	.globl _P0_1
                             69 	.globl _P0_2
                             70 	.globl _P0_3
                             71 	.globl _P0_4
                             72 	.globl _P0_5
                             73 	.globl _P0_6
                             74 	.globl _P0_7
                             75 	.globl _P2DIR
                             76 	.globl _P1DIR
                             77 	.globl _P0DIR
                             78 	.globl _U1GCR
                             79 	.globl _U1UCR
                             80 	.globl _U1BAUD
                             81 	.globl _U1BUF
                             82 	.globl _U1CSR
                             83 	.globl _P2INP
                             84 	.globl _P1INP
                             85 	.globl _P2SEL
                             86 	.globl _P1SEL
                             87 	.globl _P0SEL
                             88 	.globl _ADCCFG
                             89 	.globl _PERCFG
                             90 	.globl _B
                             91 	.globl _T4CC1
                             92 	.globl _T4CCTL1
                             93 	.globl _T4CC0
                             94 	.globl _T4CCTL0
                             95 	.globl _T4CTL
                             96 	.globl _T4CNT
                             97 	.globl _RFIF
                             98 	.globl _IRCON2
                             99 	.globl _T1CCTL2
                            100 	.globl _T1CCTL1
                            101 	.globl _T1CCTL0
                            102 	.globl _T1CTL
                            103 	.globl _T1CNTH
                            104 	.globl _T1CNTL
                            105 	.globl _RFST
                            106 	.globl _ACC
                            107 	.globl _T1CC2H
                            108 	.globl _T1CC2L
                            109 	.globl _T1CC1H
                            110 	.globl _T1CC1L
                            111 	.globl _T1CC0H
                            112 	.globl _T1CC0L
                            113 	.globl _RFD
                            114 	.globl _TIMIF
                            115 	.globl _DMAREQ
                            116 	.globl _DMAARM
                            117 	.globl _DMA0CFGH
                            118 	.globl _DMA0CFGL
                            119 	.globl _DMA1CFGH
                            120 	.globl _DMA1CFGL
                            121 	.globl _DMAIRQ
                            122 	.globl _PSW
                            123 	.globl _T3CC1
                            124 	.globl _T3CCTL1
                            125 	.globl _T3CC0
                            126 	.globl _T3CCTL0
                            127 	.globl _T3CTL
                            128 	.globl _T3CNT
                            129 	.globl _WDCTL
                            130 	.globl _T2CON
                            131 	.globl _MEMCTR
                            132 	.globl _CLKCON
                            133 	.globl _U0GCR
                            134 	.globl _U0UCR
                            135 	.globl _T2CNF
                            136 	.globl _U0BAUD
                            137 	.globl _U0BUF
                            138 	.globl _IRCON
                            139 	.globl _SLEEP
                            140 	.globl _RNDH
                            141 	.globl _RNDL
                            142 	.globl _ADCH
                            143 	.globl _ADCL
                            144 	.globl _IP1
                            145 	.globl _IEN1
                            146 	.globl _RCCTL
                            147 	.globl _ADCCON3
                            148 	.globl _ADCCON2
                            149 	.globl _ADCCON1
                            150 	.globl _ENCCS
                            151 	.globl _ENCDO
                            152 	.globl _ENCDI
                            153 	.globl _FWDATA
                            154 	.globl _FCTL
                            155 	.globl _FADDRH
                            156 	.globl _FADDRL
                            157 	.globl _FWT
                            158 	.globl _IP0
                            159 	.globl _IEN0
                            160 	.globl _IE
                            161 	.globl _T2THD
                            162 	.globl _T2TLD
                            163 	.globl _T2CAPHPH
                            164 	.globl _T2CAPLPL
                            165 	.globl _T2OF2
                            166 	.globl _T2OF1
                            167 	.globl _T2OF0
                            168 	.globl _P2
                            169 	.globl _PSBANK
                            170 	.globl _FMAP
                            171 	.globl _T2PEROF2
                            172 	.globl _T2PEROF1
                            173 	.globl _T2PEROF0
                            174 	.globl _S1CON
                            175 	.globl _IEN2
                            176 	.globl _HSRC
                            177 	.globl _S0CON
                            178 	.globl _ST2
                            179 	.globl _ST1
                            180 	.globl _ST0
                            181 	.globl _T2CMP
                            182 	.globl __XPAGE
                            183 	.globl _DPS
                            184 	.globl _RFIM
                            185 	.globl _P1
                            186 	.globl _P0INP
                            187 	.globl _P1IEN
                            188 	.globl _PICTL
                            189 	.globl _P2IFG
                            190 	.globl _P1IFG
                            191 	.globl _P0IFG
                            192 	.globl _TCON
                            193 	.globl _PCON
                            194 	.globl _U0CSR
                            195 	.globl _DPH1
                            196 	.globl _DPL1
                            197 	.globl _DPH0
                            198 	.globl _DPL0
                            199 	.globl _SP
                            200 	.globl _P0
                            201 	.globl _tcpip_process
                            202 	.globl _tcpip_is_forwarding
                            203 	.globl _tcpip_event
                            204 	.globl _ADC_SHADOW
                            205 	.globl _U1BUF_SHADOW
                            206 	.globl _RFD_SHADOW
                            207 	.globl _U0BUF_SHADOW
                            208 	.globl _RFSTATUS
                            209 	.globl _CHIPID
                            210 	.globl _CHVER
                            211 	.globl _FSMTC1
                            212 	.globl _RXFIFOCNT
                            213 	.globl _IOCFG3
                            214 	.globl _IOCFG2
                            215 	.globl _IOCFG1
                            216 	.globl _IOCFG0
                            217 	.globl _SHORTADDRL
                            218 	.globl _SHORTADDRH
                            219 	.globl _PANIDL
                            220 	.globl _PANIDH
                            221 	.globl _IEEE_ADDR7
                            222 	.globl _IEEE_ADDR6
                            223 	.globl _IEEE_ADDR5
                            224 	.globl _IEEE_ADDR4
                            225 	.globl _IEEE_ADDR3
                            226 	.globl _IEEE_ADDR2
                            227 	.globl _IEEE_ADDR1
                            228 	.globl _IEEE_ADDR0
                            229 	.globl _DACTSTL
                            230 	.globl _DACTSTH
                            231 	.globl _ADCTSTL
                            232 	.globl _ADCTSTH
                            233 	.globl _FSMSTATE
                            234 	.globl _AGCCTRLL
                            235 	.globl _AGCCTRLH
                            236 	.globl _MANORL
                            237 	.globl _MANORH
                            238 	.globl _MANANDL
                            239 	.globl _MANANDH
                            240 	.globl _FSMTCL
                            241 	.globl _FSMTCH
                            242 	.globl _RFPWR
                            243 	.globl _CSPT
                            244 	.globl _CSPCTRL
                            245 	.globl _CSPZ
                            246 	.globl _CSPY
                            247 	.globl _CSPX
                            248 	.globl _FSCTRLL
                            249 	.globl _FSCTRLH
                            250 	.globl _RXCTRL1L
                            251 	.globl _RXCTRL1H
                            252 	.globl _RXCTRL0L
                            253 	.globl _RXCTRL0H
                            254 	.globl _TXCTRLL
                            255 	.globl _TXCTRLH
                            256 	.globl _SYNCWORDL
                            257 	.globl _SYNCWORDH
                            258 	.globl _RSSIL
                            259 	.globl _RSSIH
                            260 	.globl _MDMCTRL1L
                            261 	.globl _MDMCTRL1H
                            262 	.globl _MDMCTRL0L
                            263 	.globl _MDMCTRL0H
                            264 	.globl _tcpip_output
                            265 	.globl _tcpip_set_outputfunc
                            266 	.globl _tcp_connect
                            267 	.globl _tcp_unlisten
                            268 	.globl _tcp_listen
                            269 	.globl _tcp_attach
                            270 	.globl _udp_attach
                            271 	.globl _udp_new
                            272 	.globl _udp_broadcast_new
                            273 	.globl _tcpip_input
                            274 	.globl _tcpip_poll_udp
                            275 	.globl _tcpip_poll_tcp
                            276 	.globl _tcpip_uipcall
                            277 ;--------------------------------------------------------
                            278 ; special function registers
                            279 ;--------------------------------------------------------
                            280 	.area RSEG    (ABS,DATA)
   0000                     281 	.org 0x0000
                    0080    282 _P0	=	0x0080
                    0081    283 _SP	=	0x0081
                    0082    284 _DPL0	=	0x0082
                    0083    285 _DPH0	=	0x0083
                    0084    286 _DPL1	=	0x0084
                    0085    287 _DPH1	=	0x0085
                    0086    288 _U0CSR	=	0x0086
                    0087    289 _PCON	=	0x0087
                    0088    290 _TCON	=	0x0088
                    0089    291 _P0IFG	=	0x0089
                    008A    292 _P1IFG	=	0x008a
                    008B    293 _P2IFG	=	0x008b
                    008C    294 _PICTL	=	0x008c
                    008D    295 _P1IEN	=	0x008d
                    008F    296 _P0INP	=	0x008f
                    0090    297 _P1	=	0x0090
                    0091    298 _RFIM	=	0x0091
                    0092    299 _DPS	=	0x0092
                    0093    300 __XPAGE	=	0x0093
                    0094    301 _T2CMP	=	0x0094
                    0095    302 _ST0	=	0x0095
                    0096    303 _ST1	=	0x0096
                    0097    304 _ST2	=	0x0097
                    0098    305 _S0CON	=	0x0098
                    0099    306 _HSRC	=	0x0099
                    009A    307 _IEN2	=	0x009a
                    009B    308 _S1CON	=	0x009b
                    009C    309 _T2PEROF0	=	0x009c
                    009D    310 _T2PEROF1	=	0x009d
                    009E    311 _T2PEROF2	=	0x009e
                    009F    312 _FMAP	=	0x009f
                    009F    313 _PSBANK	=	0x009f
                    00A0    314 _P2	=	0x00a0
                    00A1    315 _T2OF0	=	0x00a1
                    00A2    316 _T2OF1	=	0x00a2
                    00A3    317 _T2OF2	=	0x00a3
                    00A4    318 _T2CAPLPL	=	0x00a4
                    00A5    319 _T2CAPHPH	=	0x00a5
                    00A6    320 _T2TLD	=	0x00a6
                    00A7    321 _T2THD	=	0x00a7
                    00A8    322 _IE	=	0x00a8
                    00A8    323 _IEN0	=	0x00a8
                    00A9    324 _IP0	=	0x00a9
                    00AB    325 _FWT	=	0x00ab
                    00AC    326 _FADDRL	=	0x00ac
                    00AD    327 _FADDRH	=	0x00ad
                    00AE    328 _FCTL	=	0x00ae
                    00AF    329 _FWDATA	=	0x00af
                    00B1    330 _ENCDI	=	0x00b1
                    00B2    331 _ENCDO	=	0x00b2
                    00B3    332 _ENCCS	=	0x00b3
                    00B4    333 _ADCCON1	=	0x00b4
                    00B5    334 _ADCCON2	=	0x00b5
                    00B6    335 _ADCCON3	=	0x00b6
                    00B7    336 _RCCTL	=	0x00b7
                    00B8    337 _IEN1	=	0x00b8
                    00B9    338 _IP1	=	0x00b9
                    00BA    339 _ADCL	=	0x00ba
                    00BB    340 _ADCH	=	0x00bb
                    00BC    341 _RNDL	=	0x00bc
                    00BD    342 _RNDH	=	0x00bd
                    00BE    343 _SLEEP	=	0x00be
                    00C0    344 _IRCON	=	0x00c0
                    00C1    345 _U0BUF	=	0x00c1
                    00C2    346 _U0BAUD	=	0x00c2
                    00C3    347 _T2CNF	=	0x00c3
                    00C4    348 _U0UCR	=	0x00c4
                    00C5    349 _U0GCR	=	0x00c5
                    00C6    350 _CLKCON	=	0x00c6
                    00C7    351 _MEMCTR	=	0x00c7
                    00C8    352 _T2CON	=	0x00c8
                    00C9    353 _WDCTL	=	0x00c9
                    00CA    354 _T3CNT	=	0x00ca
                    00CB    355 _T3CTL	=	0x00cb
                    00CC    356 _T3CCTL0	=	0x00cc
                    00CD    357 _T3CC0	=	0x00cd
                    00CE    358 _T3CCTL1	=	0x00ce
                    00CF    359 _T3CC1	=	0x00cf
                    00D0    360 _PSW	=	0x00d0
                    00D1    361 _DMAIRQ	=	0x00d1
                    00D2    362 _DMA1CFGL	=	0x00d2
                    00D3    363 _DMA1CFGH	=	0x00d3
                    00D4    364 _DMA0CFGL	=	0x00d4
                    00D5    365 _DMA0CFGH	=	0x00d5
                    00D6    366 _DMAARM	=	0x00d6
                    00D7    367 _DMAREQ	=	0x00d7
                    00D8    368 _TIMIF	=	0x00d8
                    00D9    369 _RFD	=	0x00d9
                    00DA    370 _T1CC0L	=	0x00da
                    00DB    371 _T1CC0H	=	0x00db
                    00DC    372 _T1CC1L	=	0x00dc
                    00DD    373 _T1CC1H	=	0x00dd
                    00DE    374 _T1CC2L	=	0x00de
                    00DF    375 _T1CC2H	=	0x00df
                    00E0    376 _ACC	=	0x00e0
                    00E1    377 _RFST	=	0x00e1
                    00E2    378 _T1CNTL	=	0x00e2
                    00E3    379 _T1CNTH	=	0x00e3
                    00E4    380 _T1CTL	=	0x00e4
                    00E5    381 _T1CCTL0	=	0x00e5
                    00E6    382 _T1CCTL1	=	0x00e6
                    00E7    383 _T1CCTL2	=	0x00e7
                    00E8    384 _IRCON2	=	0x00e8
                    00E9    385 _RFIF	=	0x00e9
                    00EA    386 _T4CNT	=	0x00ea
                    00EB    387 _T4CTL	=	0x00eb
                    00EC    388 _T4CCTL0	=	0x00ec
                    00ED    389 _T4CC0	=	0x00ed
                    00EE    390 _T4CCTL1	=	0x00ee
                    00EF    391 _T4CC1	=	0x00ef
                    00F0    392 _B	=	0x00f0
                    00F1    393 _PERCFG	=	0x00f1
                    00F2    394 _ADCCFG	=	0x00f2
                    00F3    395 _P0SEL	=	0x00f3
                    00F4    396 _P1SEL	=	0x00f4
                    00F5    397 _P2SEL	=	0x00f5
                    00F6    398 _P1INP	=	0x00f6
                    00F7    399 _P2INP	=	0x00f7
                    00F8    400 _U1CSR	=	0x00f8
                    00F9    401 _U1BUF	=	0x00f9
                    00FA    402 _U1BAUD	=	0x00fa
                    00FB    403 _U1UCR	=	0x00fb
                    00FC    404 _U1GCR	=	0x00fc
                    00FD    405 _P0DIR	=	0x00fd
                    00FE    406 _P1DIR	=	0x00fe
                    00FF    407 _P2DIR	=	0x00ff
                            408 ;--------------------------------------------------------
                            409 ; special function bits
                            410 ;--------------------------------------------------------
                            411 	.area RSEG    (ABS,DATA)
   0000                     412 	.org 0x0000
                    0087    413 _P0_7	=	0x0087
                    0086    414 _P0_6	=	0x0086
                    0085    415 _P0_5	=	0x0085
                    0084    416 _P0_4	=	0x0084
                    0083    417 _P0_3	=	0x0083
                    0082    418 _P0_2	=	0x0082
                    0081    419 _P0_1	=	0x0081
                    0080    420 _P0_0	=	0x0080
                    008F    421 _TCON_URX1IF	=	0x008f
                    008D    422 _TCON_ADCIF	=	0x008d
                    008B    423 _TCON_URX0IF	=	0x008b
                    008A    424 _TCON_IT1	=	0x008a
                    0089    425 _TCON_RFERRIF	=	0x0089
                    0088    426 _TCON_IT0	=	0x0088
                    0090    427 _P1_0	=	0x0090
                    0091    428 _P1_1	=	0x0091
                    0092    429 _P1_2	=	0x0092
                    0093    430 _P1_3	=	0x0093
                    0094    431 _P1_4	=	0x0094
                    0095    432 _P1_5	=	0x0095
                    0096    433 _P1_6	=	0x0096
                    0097    434 _P1_7	=	0x0097
                    0099    435 _S0CON_ENCIF_1	=	0x0099
                    0098    436 _S0CON_ENCIF_0	=	0x0098
                    00A0    437 _P2_0	=	0x00a0
                    00A1    438 _P2_1	=	0x00a1
                    00A2    439 _P2_2	=	0x00a2
                    00A3    440 _P2_3	=	0x00a3
                    00A4    441 _P2_4	=	0x00a4
                    00AF    442 _EA	=	0x00af
                    00AF    443 _IEN0_EA	=	0x00af
                    00AD    444 _IEN0_STIE	=	0x00ad
                    00AC    445 _IEN0_ENCIE	=	0x00ac
                    00AB    446 _IEN0_URX1IE	=	0x00ab
                    00AA    447 _IEN0_URX0IE	=	0x00aa
                    00A9    448 _IEN0_ADCIE	=	0x00a9
                    00A8    449 _IEN0_RFERRIE	=	0x00a8
                    00BD    450 _IEN1_P0IE	=	0x00bd
                    00BC    451 _IEN1_T4IE	=	0x00bc
                    00BB    452 _IEN1_T3IE	=	0x00bb
                    00BA    453 _IEN1_T2IE	=	0x00ba
                    00B9    454 _IEN1_T1IE	=	0x00b9
                    00B8    455 _IEN1_DMAIE	=	0x00b8
                    00C7    456 _IRCON_STIF	=	0x00c7
                    00C5    457 _IRCON_P0IF	=	0x00c5
                    00C4    458 _IRCON_T4IF	=	0x00c4
                    00C3    459 _IRCON_T3IF	=	0x00c3
                    00C2    460 _IRCON_T2IF	=	0x00c2
                    00C1    461 _IRCON_T1IF	=	0x00c1
                    00C0    462 _IRCON_DMAIF	=	0x00c0
                    00D0    463 _P	=	0x00d0
                    00D1    464 _F1	=	0x00d1
                    00D2    465 _OV	=	0x00d2
                    00D3    466 _RS0	=	0x00d3
                    00D4    467 _RS1	=	0x00d4
                    00D5    468 _F0	=	0x00d5
                    00D6    469 _AC	=	0x00d6
                    00D7    470 _CY	=	0x00d7
                    00EC    471 _IRCON2_WDTIF	=	0x00ec
                    00EB    472 _IRCON2_P1IF	=	0x00eb
                    00EA    473 _IRCON2_UTX1IF	=	0x00ea
                    00E9    474 _IRCON2_UTX0IF	=	0x00e9
                    00E8    475 _IRCON2_P2IF	=	0x00e8
                            476 ;--------------------------------------------------------
                            477 ; overlayable register banks
                            478 ;--------------------------------------------------------
                            479 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     480 	.ds 8
                            481 ;--------------------------------------------------------
                            482 ; internal ram data
                            483 ;--------------------------------------------------------
                            484 	.area DSEG    (DATA)
   0000                     485 _eventhandler_p_1_1:
   0000                     486 	.ds 3
   0003                     487 _tcpip_uipcall_ts_1_1:
   0003                     488 	.ds 3
                            489 ;--------------------------------------------------------
                            490 ; overlayable items in internal ram 
                            491 ;--------------------------------------------------------
                            492 	.area OSEG    (OVR,DATA)
                            493 ;--------------------------------------------------------
                            494 ; indirectly addressable internal ram data
                            495 ;--------------------------------------------------------
                            496 	.area ISEG    (DATA)
                            497 ;--------------------------------------------------------
                            498 ; absolute internal ram data
                            499 ;--------------------------------------------------------
                            500 	.area IABS    (ABS,DATA)
                            501 	.area IABS    (ABS,DATA)
                            502 ;--------------------------------------------------------
                            503 ; bit data
                            504 ;--------------------------------------------------------
                            505 	.area BSEG    (BIT)
                            506 ;--------------------------------------------------------
                            507 ; paged external ram data
                            508 ;--------------------------------------------------------
                            509 	.area PSEG    (PAG,XDATA)
                            510 ;--------------------------------------------------------
                            511 ; external ram data
                            512 ;--------------------------------------------------------
                            513 	.area XSEG    (XDATA)
                    DF02    514 _MDMCTRL0H	=	0xdf02
                    DF03    515 _MDMCTRL0L	=	0xdf03
                    DF04    516 _MDMCTRL1H	=	0xdf04
                    DF05    517 _MDMCTRL1L	=	0xdf05
                    DF06    518 _RSSIH	=	0xdf06
                    DF07    519 _RSSIL	=	0xdf07
                    DF08    520 _SYNCWORDH	=	0xdf08
                    DF09    521 _SYNCWORDL	=	0xdf09
                    DF0A    522 _TXCTRLH	=	0xdf0a
                    DF0B    523 _TXCTRLL	=	0xdf0b
                    DF0C    524 _RXCTRL0H	=	0xdf0c
                    DF0D    525 _RXCTRL0L	=	0xdf0d
                    DF0E    526 _RXCTRL1H	=	0xdf0e
                    DF0F    527 _RXCTRL1L	=	0xdf0f
                    DF10    528 _FSCTRLH	=	0xdf10
                    DF11    529 _FSCTRLL	=	0xdf11
                    DF12    530 _CSPX	=	0xdf12
                    DF13    531 _CSPY	=	0xdf13
                    DF14    532 _CSPZ	=	0xdf14
                    DF15    533 _CSPCTRL	=	0xdf15
                    DF16    534 _CSPT	=	0xdf16
                    DF17    535 _RFPWR	=	0xdf17
                    DF20    536 _FSMTCH	=	0xdf20
                    DF21    537 _FSMTCL	=	0xdf21
                    DF22    538 _MANANDH	=	0xdf22
                    DF23    539 _MANANDL	=	0xdf23
                    DF24    540 _MANORH	=	0xdf24
                    DF25    541 _MANORL	=	0xdf25
                    DF26    542 _AGCCTRLH	=	0xdf26
                    DF27    543 _AGCCTRLL	=	0xdf27
                    DF39    544 _FSMSTATE	=	0xdf39
                    DF3A    545 _ADCTSTH	=	0xdf3a
                    DF3B    546 _ADCTSTL	=	0xdf3b
                    DF3C    547 _DACTSTH	=	0xdf3c
                    DF3D    548 _DACTSTL	=	0xdf3d
                    DF43    549 _IEEE_ADDR0	=	0xdf43
                    DF44    550 _IEEE_ADDR1	=	0xdf44
                    DF45    551 _IEEE_ADDR2	=	0xdf45
                    DF46    552 _IEEE_ADDR3	=	0xdf46
                    DF47    553 _IEEE_ADDR4	=	0xdf47
                    DF48    554 _IEEE_ADDR5	=	0xdf48
                    DF49    555 _IEEE_ADDR6	=	0xdf49
                    DF4A    556 _IEEE_ADDR7	=	0xdf4a
                    DF4B    557 _PANIDH	=	0xdf4b
                    DF4C    558 _PANIDL	=	0xdf4c
                    DF4D    559 _SHORTADDRH	=	0xdf4d
                    DF4E    560 _SHORTADDRL	=	0xdf4e
                    DF4F    561 _IOCFG0	=	0xdf4f
                    DF50    562 _IOCFG1	=	0xdf50
                    DF51    563 _IOCFG2	=	0xdf51
                    DF52    564 _IOCFG3	=	0xdf52
                    DF53    565 _RXFIFOCNT	=	0xdf53
                    DF54    566 _FSMTC1	=	0xdf54
                    DF60    567 _CHVER	=	0xdf60
                    DF61    568 _CHIPID	=	0xdf61
                    DF62    569 _RFSTATUS	=	0xdf62
                    DFC1    570 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    571 _RFD_SHADOW	=	0xdfd9
                    DFF9    572 _U1BUF_SHADOW	=	0xdff9
                    DFBA    573 _ADC_SHADOW	=	0xdfba
   0000                     574 _tcpip_event::
   0000                     575 	.ds 1
   0001                     576 _periodic:
   0001                     577 	.ds 10
   000B                     578 _s:
   000B                     579 	.ds 103
   0072                     580 _outputfunc:
   0072                     581 	.ds 2
   0074                     582 _tcpip_is_forwarding::
   0074                     583 	.ds 1
   0075                     584 _i:
   0075                     585 	.ds 2
   0077                     586 _tcp_unlisten_i_1_1:
   0077                     587 	.ds 1
   0078                     588 _tcp_listen_i_1_1:
   0078                     589 	.ds 1
   0079                     590 _eventhandler_i_1_1:
   0079                     591 	.ds 1
   007A                     592 _tcpip_uipcall_i_2_4:
   007A                     593 	.ds 1
   007B                     594 _process_thread_tcpip_process_i_4_4:
   007B                     595 	.ds 1
                            596 ;--------------------------------------------------------
                            597 ; absolute external ram data
                            598 ;--------------------------------------------------------
                            599 	.area XABS    (ABS,XDATA)
                            600 ;--------------------------------------------------------
                            601 ; external initialized ram data
                            602 ;--------------------------------------------------------
                            603 	.area XISEG   (XDATA)
   0000                     604 _tcpip_process::
   0000                     605 	.ds 9
                            606 	.area HOME    (CODE)
                            607 	.area GSINIT0 (CODE)
                            608 	.area GSINIT1 (CODE)
                            609 	.area GSINIT2 (CODE)
                            610 	.area GSINIT3 (CODE)
                            611 	.area GSINIT4 (CODE)
                            612 	.area GSINIT5 (CODE)
                            613 	.area GSINIT  (CODE)
                            614 	.area GSFINAL (CODE)
                            615 	.area CSEG    (CODE)
                            616 ;--------------------------------------------------------
                            617 ; global & static initialisations
                            618 ;--------------------------------------------------------
                            619 	.area HOME    (CODE)
                            620 	.area GSINIT  (CODE)
                            621 	.area GSFINAL (CODE)
                            622 	.area GSINIT  (CODE)
                            623 ;--------------------------------------------------------
                            624 ; Home
                            625 ;--------------------------------------------------------
                            626 	.area HOME    (CODE)
                            627 	.area HOME    (CODE)
                            628 ;--------------------------------------------------------
                            629 ; code
                            630 ;--------------------------------------------------------
                            631 	.area CSEG    (CODE)
                            632 ;------------------------------------------------------------
                            633 ;Allocation info for local variables in function 'tcpip_output'
                            634 ;------------------------------------------------------------
                            635 ;------------------------------------------------------------
                            636 ;	../../../core/net/tcpip.c:145: tcpip_output(void)
                            637 ;	-----------------------------------------
                            638 ;	 function tcpip_output
                            639 ;	-----------------------------------------
   0000                     640 _tcpip_output:
                    0002    641 	ar2 = 0x02
                    0003    642 	ar3 = 0x03
                    0004    643 	ar4 = 0x04
                    0005    644 	ar5 = 0x05
                    0006    645 	ar6 = 0x06
                    0007    646 	ar7 = 0x07
                    0000    647 	ar0 = 0x00
                    0001    648 	ar1 = 0x01
                            649 ;	../../../core/net/tcpip.c:147: if(outputfunc != NULL) {
   0000 90s00r72            650 	mov	dptr,#_outputfunc
   0003 E0                  651 	movx	a,@dptr
   0004 FA                  652 	mov	r2,a
   0005 A3                  653 	inc	dptr
   0006 E0                  654 	movx	a,@dptr
   0007 FB                  655 	mov	r3,a
   0008 4A                  656 	orl	a,r2
   0009 60 0E               657 	jz	00102$
                            658 ;	../../../core/net/tcpip.c:148: return outputfunc();
   000B 90s00r72            659 	mov	dptr,#_outputfunc
   000E E0                  660 	movx	a,@dptr
   000F F8                  661 	mov	r0,a
   0010 A3                  662 	inc	dptr
   0011 E0                  663 	movx	a,@dptr
   0012 F5 83               664 	mov	dph,a
   0014 88 82               665 	mov	dpl,r0
                            666 ;	../../../core/net/tcpip.c:151: return 0;
   0016 02s00r00            667 	ljmp	__sdcc_call_dptr
   0019                     668 00102$:
   0019 75 82 00            669 	mov	dpl,#0x00
   001C 22                  670 	ret
                            671 ;------------------------------------------------------------
                            672 ;Allocation info for local variables in function 'tcpip_set_outputfunc'
                            673 ;------------------------------------------------------------
                            674 ;f                         Allocated to registers 
                            675 ;------------------------------------------------------------
                            676 ;	../../../core/net/tcpip.c:155: tcpip_set_outputfunc(u8_t (*f)(void))
                            677 ;	-----------------------------------------
                            678 ;	 function tcpip_set_outputfunc
                            679 ;	-----------------------------------------
   001D                     680 _tcpip_set_outputfunc:
   001D AA 83               681 	mov	r2,dph
   001F E5 82               682 	mov	a,dpl
   0021 90s00r72            683 	mov	dptr,#_outputfunc
   0024 F0                  684 	movx	@dptr,a
   0025 A3                  685 	inc	dptr
   0026 EA                  686 	mov	a,r2
   0027 F0                  687 	movx	@dptr,a
                            688 ;	../../../core/net/tcpip.c:157: outputfunc = f;
   0028 22                  689 	ret
                            690 ;------------------------------------------------------------
                            691 ;Allocation info for local variables in function 'start_periodic_tcp_timer'
                            692 ;------------------------------------------------------------
                            693 ;------------------------------------------------------------
                            694 ;	../../../core/net/tcpip.c:169: start_periodic_tcp_timer(void)
                            695 ;	-----------------------------------------
                            696 ;	 function start_periodic_tcp_timer
                            697 ;	-----------------------------------------
   0029                     698 _start_periodic_tcp_timer:
                            699 ;	../../../core/net/tcpip.c:171: if(etimer_expired(&periodic)) {
   0029 90s00r01            700 	mov	dptr,#_periodic
   002C 75 F0 00            701 	mov	b,#0x00
   002F 12s00r00            702 	lcall	_etimer_expired
   0032 E5 82               703 	mov	a,dpl
   0034 85 83 F0            704 	mov	b,dph
   0037 45 F0               705 	orl	a,b
   0039 60 09               706 	jz	00103$
                            707 ;	../../../core/net/tcpip.c:172: etimer_restart(&periodic);
   003B 90s00r01            708 	mov	dptr,#_periodic
   003E 75 F0 00            709 	mov	b,#0x00
   0041 02s00r00            710 	ljmp	_etimer_restart
   0044                     711 00103$:
   0044 22                  712 	ret
                            713 ;------------------------------------------------------------
                            714 ;Allocation info for local variables in function 'check_for_tcp_syn'
                            715 ;------------------------------------------------------------
                            716 ;------------------------------------------------------------
                            717 ;	../../../core/net/tcpip.c:177: check_for_tcp_syn(void)
                            718 ;	-----------------------------------------
                            719 ;	 function check_for_tcp_syn
                            720 ;	-----------------------------------------
   0045                     721 _check_for_tcp_syn:
                            722 ;	../../../core/net/tcpip.c:185: if(UIP_IP_BUF->proto == UIP_PROTO_TCP &&
   0045 90s00r17            723 	mov	dptr,#(_uip_aligned_buf + 0x0017)
   0048 E0                  724 	movx	a,@dptr
   0049 FA                  725 	mov	r2,a
   004A BA 06 0E            726 	cjne	r2,#0x06,00104$
                            727 ;	../../../core/net/tcpip.c:186: (UIP_TCP_BUF->flags & TCP_SYN) == TCP_SYN) {
   004D 90s00r2F            728 	mov	dptr,#(_uip_aligned_buf + 0x002f)
   0050 E0                  729 	movx	a,@dptr
   0051 FA                  730 	mov	r2,a
   0052 53 02 02            731 	anl	ar2,#0x02
   0055 BA 02 03            732 	cjne	r2,#0x02,00104$
                            733 ;	../../../core/net/tcpip.c:187: start_periodic_tcp_timer();
   0058 02s00r29            734 	ljmp	_start_periodic_tcp_timer
   005B                     735 00104$:
   005B 22                  736 	ret
                            737 ;------------------------------------------------------------
                            738 ;Allocation info for local variables in function 'packet_input'
                            739 ;------------------------------------------------------------
                            740 ;------------------------------------------------------------
                            741 ;	../../../core/net/tcpip.c:192: packet_input(void)
                            742 ;	-----------------------------------------
                            743 ;	 function packet_input
                            744 ;	-----------------------------------------
   005C                     745 _packet_input:
                            746 ;	../../../core/net/tcpip.c:195: if(uip_len > 0) {
   005C 90s00r00            747 	mov	dptr,#_uip_len
   005F E0                  748 	movx	a,@dptr
   0060 FA                  749 	mov	r2,a
   0061 A3                  750 	inc	dptr
   0062 E0                  751 	movx	a,@dptr
   0063 FB                  752 	mov	r3,a
   0064 4A                  753 	orl	a,r2
   0065 60 2E               754 	jz	00107$
                            755 ;	../../../core/net/tcpip.c:196: tcpip_is_forwarding = 1;
   0067 90s00r74            756 	mov	dptr,#_tcpip_is_forwarding
   006A 74 01               757 	mov	a,#0x01
   006C F0                  758 	movx	@dptr,a
                            759 ;	../../../core/net/tcpip.c:197: if(uip_fw_forward() == UIP_FW_LOCAL) {
   006D 12s00r00            760 	lcall	_uip_fw_forward
   0070 E5 82               761 	mov	a,dpl
   0072 70 1C               762 	jnz	00104$
                            763 ;	../../../core/net/tcpip.c:198: tcpip_is_forwarding = 0;
   0074 90s00r74            764 	mov	dptr,#_tcpip_is_forwarding
   0077 E4                  765 	clr	a
   0078 F0                  766 	movx	@dptr,a
                            767 ;	../../../core/net/tcpip.c:199: check_for_tcp_syn();
   0079 12s00r45            768 	lcall	_check_for_tcp_syn
                            769 ;	../../../core/net/tcpip.c:200: uip_input();
   007C 75 82 01            770 	mov	dpl,#0x01
   007F 12s00r00            771 	lcall	_uip_process
                            772 ;	../../../core/net/tcpip.c:201: if(uip_len > 0) {
   0082 90s00r00            773 	mov	dptr,#_uip_len
   0085 E0                  774 	movx	a,@dptr
   0086 FA                  775 	mov	r2,a
   0087 A3                  776 	inc	dptr
   0088 E0                  777 	movx	a,@dptr
   0089 FB                  778 	mov	r3,a
   008A 4A                  779 	orl	a,r2
   008B 60 03               780 	jz	00104$
                            781 ;	../../../core/net/tcpip.c:209: tcpip_output();
   008D 12s00r00            782 	lcall	_tcpip_output
   0090                     783 00104$:
                            784 ;	../../../core/net/tcpip.c:214: tcpip_is_forwarding = 0;
   0090 90s00r74            785 	mov	dptr,#_tcpip_is_forwarding
   0093 E4                  786 	clr	a
   0094 F0                  787 	movx	@dptr,a
   0095                     788 00107$:
   0095 22                  789 	ret
                            790 ;------------------------------------------------------------
                            791 ;Allocation info for local variables in function 'tcp_connect'
                            792 ;------------------------------------------------------------
                            793 ;port                      Allocated to stack - offset -4
                            794 ;appstate                  Allocated to stack - offset -7
                            795 ;ripaddr                   Allocated to registers r2 r3 r4 
                            796 ;c                         Allocated to stack - offset 1
                            797 ;------------------------------------------------------------
                            798 ;	../../../core/net/tcpip.c:239: tcp_connect(uip_ipaddr_t *ripaddr, u16_t port, void *appstate)
                            799 ;	-----------------------------------------
                            800 ;	 function tcp_connect
                            801 ;	-----------------------------------------
   0096                     802 _tcp_connect:
   0096 C0*00               803 	push	_bp
   0098 85 81*00            804 	mov	_bp,sp
   009B 05 81               805 	inc	sp
   009D 05 81               806 	inc	sp
   009F 05 81               807 	inc	sp
   00A1 AA 82               808 	mov	r2,dpl
   00A3 AB 83               809 	mov	r3,dph
   00A5 AC F0               810 	mov	r4,b
                            811 ;	../../../core/net/tcpip.c:243: c = uip_connect(ripaddr, port);
   00A7 E5*00               812 	mov	a,_bp
   00A9 24 FC               813 	add	a,#0xfc
   00AB F8                  814 	mov	r0,a
   00AC E6                  815 	mov	a,@r0
   00AD C0 E0               816 	push	acc
   00AF 08                  817 	inc	r0
   00B0 E6                  818 	mov	a,@r0
   00B1 C0 E0               819 	push	acc
   00B3 8A 82               820 	mov	dpl,r2
   00B5 8B 83               821 	mov	dph,r3
   00B7 8C F0               822 	mov	b,r4
   00B9 12s00r00            823 	lcall	_uip_connect
   00BC AA 82               824 	mov	r2,dpl
   00BE AB 83               825 	mov	r3,dph
   00C0 AC F0               826 	mov	r4,b
   00C2 15 81               827 	dec	sp
   00C4 15 81               828 	dec	sp
   00C6 A8*00               829 	mov	r0,_bp
   00C8 08                  830 	inc	r0
   00C9 A6 02               831 	mov	@r0,ar2
   00CB 08                  832 	inc	r0
   00CC A6 03               833 	mov	@r0,ar3
   00CE 08                  834 	inc	r0
   00CF A6 04               835 	mov	@r0,ar4
                            836 ;	../../../core/net/tcpip.c:244: if(c == NULL) {
   00D1 A8*00               837 	mov	r0,_bp
   00D3 08                  838 	inc	r0
   00D4 E6                  839 	mov	a,@r0
   00D5 08                  840 	inc	r0
   00D6 46                  841 	orl	a,@r0
   00D7 08                  842 	inc	r0
   00D8 46                  843 	orl	a,@r0
                            844 ;	../../../core/net/tcpip.c:245: return NULL;
   00D9 70 07               845 	jnz	00102$
   00DB 90 00 00            846 	mov	dptr,#0x0000
   00DE F5 F0               847 	mov	b,a
   00E0 80 6F               848 	sjmp	00103$
   00E2                     849 00102$:
                            850 ;	../../../core/net/tcpip.c:248: c->appstate.p = PROCESS_CURRENT();
   00E2 A8*00               851 	mov	r0,_bp
   00E4 08                  852 	inc	r0
   00E5 74 1C               853 	mov	a,#0x1C
   00E7 26                  854 	add	a,@r0
   00E8 FD                  855 	mov	r5,a
   00E9 E4                  856 	clr	a
   00EA 08                  857 	inc	r0
   00EB 36                  858 	addc	a,@r0
   00EC FE                  859 	mov	r6,a
   00ED 08                  860 	inc	r0
   00EE 86 07               861 	mov	ar7,@r0
   00F0 90s00r00            862 	mov	dptr,#_process_current
   00F3 E0                  863 	movx	a,@dptr
   00F4 FA                  864 	mov	r2,a
   00F5 A3                  865 	inc	dptr
   00F6 E0                  866 	movx	a,@dptr
   00F7 FB                  867 	mov	r3,a
   00F8 A3                  868 	inc	dptr
   00F9 E0                  869 	movx	a,@dptr
   00FA FC                  870 	mov	r4,a
   00FB 8D 82               871 	mov	dpl,r5
   00FD 8E 83               872 	mov	dph,r6
   00FF 8F F0               873 	mov	b,r7
   0101 EA                  874 	mov	a,r2
   0102 12s00r00            875 	lcall	__gptrput
   0105 A3                  876 	inc	dptr
   0106 EB                  877 	mov	a,r3
   0107 12s00r00            878 	lcall	__gptrput
   010A A3                  879 	inc	dptr
   010B EC                  880 	mov	a,r4
   010C 12s00r00            881 	lcall	__gptrput
                            882 ;	../../../core/net/tcpip.c:249: c->appstate.state = appstate;
   010F A8*00               883 	mov	r0,_bp
   0111 08                  884 	inc	r0
   0112 74 1F               885 	mov	a,#0x1F
   0114 26                  886 	add	a,@r0
   0115 FA                  887 	mov	r2,a
   0116 E4                  888 	clr	a
   0117 08                  889 	inc	r0
   0118 36                  890 	addc	a,@r0
   0119 FB                  891 	mov	r3,a
   011A 08                  892 	inc	r0
   011B 86 04               893 	mov	ar4,@r0
   011D 8A 82               894 	mov	dpl,r2
   011F 8B 83               895 	mov	dph,r3
   0121 8C F0               896 	mov	b,r4
   0123 E5*00               897 	mov	a,_bp
   0125 24 F9               898 	add	a,#0xf9
   0127 F8                  899 	mov	r0,a
   0128 E6                  900 	mov	a,@r0
   0129 12s00r00            901 	lcall	__gptrput
   012C A3                  902 	inc	dptr
   012D 08                  903 	inc	r0
   012E E6                  904 	mov	a,@r0
   012F 12s00r00            905 	lcall	__gptrput
   0132 A3                  906 	inc	dptr
   0133 08                  907 	inc	r0
   0134 E6                  908 	mov	a,@r0
   0135 12s00r00            909 	lcall	__gptrput
                            910 ;	../../../core/net/tcpip.c:251: tcpip_poll_tcp(c);
   0138 A8*00               911 	mov	r0,_bp
   013A 08                  912 	inc	r0
   013B 86 82               913 	mov	dpl,@r0
   013D 08                  914 	inc	r0
   013E 86 83               915 	mov	dph,@r0
   0140 08                  916 	inc	r0
   0141 86 F0               917 	mov	b,@r0
   0143 12s08r09            918 	lcall	_tcpip_poll_tcp
                            919 ;	../../../core/net/tcpip.c:253: return c;
   0146 A8*00               920 	mov	r0,_bp
   0148 08                  921 	inc	r0
   0149 86 82               922 	mov	dpl,@r0
   014B 08                  923 	inc	r0
   014C 86 83               924 	mov	dph,@r0
   014E 08                  925 	inc	r0
   014F 86 F0               926 	mov	b,@r0
   0151                     927 00103$:
   0151 85*00 81            928 	mov	sp,_bp
   0154 D0*00               929 	pop	_bp
   0156 22                  930 	ret
                            931 ;------------------------------------------------------------
                            932 ;Allocation info for local variables in function 'tcp_unlisten'
                            933 ;------------------------------------------------------------
                            934 ;port                      Allocated to stack - offset 1
                            935 ;l                         Allocated to registers r4 r5 r6 
                            936 ;sloc0                     Allocated to stack - offset 3
                            937 ;i                         Allocated with name '_tcp_unlisten_i_1_1'
                            938 ;------------------------------------------------------------
                            939 ;	../../../core/net/tcpip.c:258: tcp_unlisten(u16_t port)
                            940 ;	-----------------------------------------
                            941 ;	 function tcp_unlisten
                            942 ;	-----------------------------------------
   0157                     943 _tcp_unlisten:
   0157 C0*00               944 	push	_bp
   0159 85 81*00            945 	mov	_bp,sp
   015C C0 82               946 	push	dpl
   015E C0 83               947 	push	dph
   0160 05 81               948 	inc	sp
   0162 05 81               949 	inc	sp
   0164 05 81               950 	inc	sp
                            951 ;	../../../core/net/tcpip.c:263: l = s.listenports;
   0166 7Cr0B               952 	mov	r4,#_s
   0168 7Ds00               953 	mov	r5,#(_s >> 8)
   016A 7E 00               954 	mov	r6,#0x00
                            955 ;	../../../core/net/tcpip.c:264: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   016C 90s00r77            956 	mov	dptr,#_tcp_unlisten_i_1_1
   016F E4                  957 	clr	a
   0170 F0                  958 	movx	@dptr,a
   0171 8C 07               959 	mov	ar7,r4
   0173 8D 02               960 	mov	ar2,r5
   0175 8E 03               961 	mov	ar3,r6
   0177                     962 00104$:
   0177 C0 04               963 	push	ar4
   0179 C0 05               964 	push	ar5
   017B C0 06               965 	push	ar6
   017D 90s00r77            966 	mov	dptr,#_tcp_unlisten_i_1_1
   0180 E0                  967 	movx	a,@dptr
   0181 FC                  968 	mov	r4,a
   0182 BC 14 00            969 	cjne	r4,#0x14,00114$
   0185                     970 00114$:
   0185 D0 06               971 	pop	ar6
   0187 D0 05               972 	pop	ar5
   0189 D0 04               973 	pop	ar4
   018B 40 03               974 	jc	00115$
   018D 02s02r40            975 	ljmp	00108$
   0190                     976 00115$:
                            977 ;	../../../core/net/tcpip.c:265: if(l->port == port &&
   0190 C0 04               978 	push	ar4
   0192 C0 05               979 	push	ar5
   0194 C0 06               980 	push	ar6
   0196 8F 82               981 	mov	dpl,r7
   0198 8A 83               982 	mov	dph,r2
   019A 8B F0               983 	mov	b,r3
   019C 12s00r00            984 	lcall	__gptrget
   019F FC                  985 	mov	r4,a
   01A0 A3                  986 	inc	dptr
   01A1 12s00r00            987 	lcall	__gptrget
   01A4 FD                  988 	mov	r5,a
   01A5 A8*00               989 	mov	r0,_bp
   01A7 08                  990 	inc	r0
   01A8 E6                  991 	mov	a,@r0
   01A9 B5 04 07            992 	cjne	a,ar4,00116$
   01AC 08                  993 	inc	r0
   01AD E6                  994 	mov	a,@r0
   01AE B5 05 02            995 	cjne	a,ar5,00116$
   01B1 80 08               996 	sjmp	00117$
   01B3                     997 00116$:
   01B3 D0 06               998 	pop	ar6
   01B5 D0 05               999 	pop	ar5
   01B7 D0 04              1000 	pop	ar4
   01B9 80 6E              1001 	sjmp	00102$
   01BB                    1002 00117$:
                           1003 ;	../../../core/net/tcpip.c:266: l->p == PROCESS_CURRENT()) {
   01BB 74 02              1004 	mov	a,#0x02
   01BD 2F                 1005 	add	a,r7
   01BE FC                 1006 	mov	r4,a
   01BF E4                 1007 	clr	a
   01C0 3A                 1008 	addc	a,r2
   01C1 FD                 1009 	mov	r5,a
   01C2 8B 06              1010 	mov	ar6,r3
   01C4 8C 82              1011 	mov	dpl,r4
   01C6 8D 83              1012 	mov	dph,r5
   01C8 8E F0              1013 	mov	b,r6
   01CA E5*00              1014 	mov	a,_bp
   01CC 24 03              1015 	add	a,#0x03
   01CE F8                 1016 	mov	r0,a
   01CF 12s00r00           1017 	lcall	__gptrget
   01D2 F6                 1018 	mov	@r0,a
   01D3 A3                 1019 	inc	dptr
   01D4 12s00r00           1020 	lcall	__gptrget
   01D7 08                 1021 	inc	r0
   01D8 F6                 1022 	mov	@r0,a
   01D9 A3                 1023 	inc	dptr
   01DA 12s00r00           1024 	lcall	__gptrget
   01DD 08                 1025 	inc	r0
   01DE F6                 1026 	mov	@r0,a
   01DF 90s00r00           1027 	mov	dptr,#_process_current
   01E2 E0                 1028 	movx	a,@dptr
   01E3 FC                 1029 	mov	r4,a
   01E4 A3                 1030 	inc	dptr
   01E5 E0                 1031 	movx	a,@dptr
   01E6 FD                 1032 	mov	r5,a
   01E7 A3                 1033 	inc	dptr
   01E8 E0                 1034 	movx	a,@dptr
   01E9 FE                 1035 	mov	r6,a
   01EA E5*00              1036 	mov	a,_bp
   01EC 24 03              1037 	add	a,#0x03
   01EE F8                 1038 	mov	r0,a
   01EF E6                 1039 	mov	a,@r0
   01F0 B5 04 0C           1040 	cjne	a,ar4,00118$
   01F3 08                 1041 	inc	r0
   01F4 E6                 1042 	mov	a,@r0
   01F5 B5 05 07           1043 	cjne	a,ar5,00118$
   01F8 08                 1044 	inc	r0
   01F9 E6                 1045 	mov	a,@r0
   01FA B5 06 02           1046 	cjne	a,ar6,00118$
   01FD 80 08              1047 	sjmp	00119$
   01FF                    1048 00118$:
   01FF D0 06              1049 	pop	ar6
   0201 D0 05              1050 	pop	ar5
   0203 D0 04              1051 	pop	ar4
   0205 80 22              1052 	sjmp	00102$
   0207                    1053 00119$:
   0207 D0 06              1054 	pop	ar6
   0209 D0 05              1055 	pop	ar5
   020B D0 04              1056 	pop	ar4
                           1057 ;	../../../core/net/tcpip.c:267: l->port = 0;
   020D 8C 82              1058 	mov	dpl,r4
   020F 8D 83              1059 	mov	dph,r5
   0211 8E F0              1060 	mov	b,r6
   0213 E4                 1061 	clr	a
   0214 12s00r00           1062 	lcall	__gptrput
   0217 A3                 1063 	inc	dptr
   0218 E4                 1064 	clr	a
   0219 12s00r00           1065 	lcall	__gptrput
                           1066 ;	../../../core/net/tcpip.c:268: uip_unlisten(port);
   021C A8*00              1067 	mov	r0,_bp
   021E 08                 1068 	inc	r0
   021F 86 82              1069 	mov	dpl,@r0
   0221 08                 1070 	inc	r0
   0222 86 83              1071 	mov	dph,@r0
   0224 12s00r00           1072 	lcall	_uip_unlisten
                           1073 ;	../../../core/net/tcpip.c:269: break;
   0227 80 17              1074 	sjmp	00108$
   0229                    1075 00102$:
                           1076 ;	../../../core/net/tcpip.c:271: ++l;
   0229 74 05              1077 	mov	a,#0x05
   022B 2F                 1078 	add	a,r7
   022C FF                 1079 	mov	r7,a
   022D E4                 1080 	clr	a
   022E 3A                 1081 	addc	a,r2
   022F FA                 1082 	mov	r2,a
   0230 8F 04              1083 	mov	ar4,r7
   0232 8A 05              1084 	mov	ar5,r2
   0234 8B 06              1085 	mov	ar6,r3
                           1086 ;	../../../core/net/tcpip.c:264: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   0236 90s00r77           1087 	mov	dptr,#_tcp_unlisten_i_1_1
   0239 E0                 1088 	movx	a,@dptr
   023A 24 01              1089 	add	a,#0x01
   023C F0                 1090 	movx	@dptr,a
   023D 02s01r77           1091 	ljmp	00104$
   0240                    1092 00108$:
   0240 85*00 81           1093 	mov	sp,_bp
   0243 D0*00              1094 	pop	_bp
   0245 22                 1095 	ret
                           1096 ;------------------------------------------------------------
                           1097 ;Allocation info for local variables in function 'tcp_listen'
                           1098 ;------------------------------------------------------------
                           1099 ;port                      Allocated to stack - offset 1
                           1100 ;l                         Allocated to stack - offset 3
                           1101 ;sloc0                     Allocated to stack - offset 6
                           1102 ;sloc1                     Allocated to stack - offset 7
                           1103 ;i                         Allocated with name '_tcp_listen_i_1_1'
                           1104 ;------------------------------------------------------------
                           1105 ;	../../../core/net/tcpip.c:276: tcp_listen(u16_t port)
                           1106 ;	-----------------------------------------
                           1107 ;	 function tcp_listen
                           1108 ;	-----------------------------------------
   0246                    1109 _tcp_listen:
   0246 C0*00              1110 	push	_bp
   0248 85 81*00           1111 	mov	_bp,sp
   024B C0 82              1112 	push	dpl
   024D C0 83              1113 	push	dph
   024F 05 81              1114 	inc	sp
   0251 05 81              1115 	inc	sp
   0253 05 81              1116 	inc	sp
                           1117 ;	../../../core/net/tcpip.c:281: l = s.listenports;
   0255 E5*00              1118 	mov	a,_bp
   0257 24 03              1119 	add	a,#0x03
   0259 F8                 1120 	mov	r0,a
   025A 76r0B              1121 	mov	@r0,#_s
   025C 08                 1122 	inc	r0
   025D 76s00              1123 	mov	@r0,#(_s >> 8)
   025F 08                 1124 	inc	r0
   0260 76 00              1125 	mov	@r0,#0x00
                           1126 ;	../../../core/net/tcpip.c:282: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   0262 90s00r78           1127 	mov	dptr,#_tcp_listen_i_1_1
   0265 E4                 1128 	clr	a
   0266 F0                 1129 	movx	@dptr,a
   0267 E5*00              1130 	mov	a,_bp
   0269 24 03              1131 	add	a,#0x03
   026B F8                 1132 	mov	r0,a
   026C 86 07              1133 	mov	ar7,@r0
   026E 08                 1134 	inc	r0
   026F 86 02              1135 	mov	ar2,@r0
   0271 08                 1136 	inc	r0
   0272 86 03              1137 	mov	ar3,@r0
   0274                    1138 00103$:
   0274 90s00r78           1139 	mov	dptr,#_tcp_listen_i_1_1
   0277 E0                 1140 	movx	a,@dptr
   0278 FE                 1141 	mov	r6,a
   0279 BE 14 00           1142 	cjne	r6,#0x14,00112$
   027C                    1143 00112$:
   027C 40 03              1144 	jc	00113$
   027E 02s03r06           1145 	ljmp	00107$
   0281                    1146 00113$:
                           1147 ;	../../../core/net/tcpip.c:283: if(l->port == 0) {
   0281 8F 82              1148 	mov	dpl,r7
   0283 8A 83              1149 	mov	dph,r2
   0285 8B F0              1150 	mov	b,r3
   0287 12s00r00           1151 	lcall	__gptrget
   028A FC                 1152 	mov	r4,a
   028B A3                 1153 	inc	dptr
   028C 12s00r00           1154 	lcall	__gptrget
   028F FD                 1155 	mov	r5,a
   0290 4C                 1156 	orl	a,r4
   0291 70 56              1157 	jnz	00102$
                           1158 ;	../../../core/net/tcpip.c:284: l->port = port;
   0293 E5*00              1159 	mov	a,_bp
   0295 24 03              1160 	add	a,#0x03
   0297 F8                 1161 	mov	r0,a
   0298 86 82              1162 	mov	dpl,@r0
   029A 08                 1163 	inc	r0
   029B 86 83              1164 	mov	dph,@r0
   029D 08                 1165 	inc	r0
   029E 86 F0              1166 	mov	b,@r0
   02A0 A9*00              1167 	mov	r1,_bp
   02A2 09                 1168 	inc	r1
   02A3 E7                 1169 	mov	a,@r1
   02A4 12s00r00           1170 	lcall	__gptrput
   02A7 A3                 1171 	inc	dptr
   02A8 09                 1172 	inc	r1
   02A9 E7                 1173 	mov	a,@r1
   02AA 12s00r00           1174 	lcall	__gptrput
                           1175 ;	../../../core/net/tcpip.c:285: l->p = PROCESS_CURRENT();
   02AD E5*00              1176 	mov	a,_bp
   02AF 24 03              1177 	add	a,#0x03
   02B1 F8                 1178 	mov	r0,a
   02B2 74 02              1179 	mov	a,#0x02
   02B4 26                 1180 	add	a,@r0
   02B5 FA                 1181 	mov	r2,a
   02B6 E4                 1182 	clr	a
   02B7 08                 1183 	inc	r0
   02B8 36                 1184 	addc	a,@r0
   02B9 FB                 1185 	mov	r3,a
   02BA 08                 1186 	inc	r0
   02BB 86 07              1187 	mov	ar7,@r0
   02BD 90s00r00           1188 	mov	dptr,#_process_current
   02C0 E0                 1189 	movx	a,@dptr
   02C1 FC                 1190 	mov	r4,a
   02C2 A3                 1191 	inc	dptr
   02C3 E0                 1192 	movx	a,@dptr
   02C4 FD                 1193 	mov	r5,a
   02C5 A3                 1194 	inc	dptr
   02C6 E0                 1195 	movx	a,@dptr
   02C7 FE                 1196 	mov	r6,a
   02C8 8A 82              1197 	mov	dpl,r2
   02CA 8B 83              1198 	mov	dph,r3
   02CC 8F F0              1199 	mov	b,r7
   02CE EC                 1200 	mov	a,r4
   02CF 12s00r00           1201 	lcall	__gptrput
   02D2 A3                 1202 	inc	dptr
   02D3 ED                 1203 	mov	a,r5
   02D4 12s00r00           1204 	lcall	__gptrput
   02D7 A3                 1205 	inc	dptr
   02D8 EE                 1206 	mov	a,r6
   02D9 12s00r00           1207 	lcall	__gptrput
                           1208 ;	../../../core/net/tcpip.c:286: uip_listen(port);
   02DC A8*00              1209 	mov	r0,_bp
   02DE 08                 1210 	inc	r0
   02DF 86 82              1211 	mov	dpl,@r0
   02E1 08                 1212 	inc	r0
   02E2 86 83              1213 	mov	dph,@r0
   02E4 12s00r00           1214 	lcall	_uip_listen
                           1215 ;	../../../core/net/tcpip.c:287: break;
   02E7 80 1D              1216 	sjmp	00107$
   02E9                    1217 00102$:
                           1218 ;	../../../core/net/tcpip.c:289: ++l;
   02E9 74 05              1219 	mov	a,#0x05
   02EB 2F                 1220 	add	a,r7
   02EC FF                 1221 	mov	r7,a
   02ED E4                 1222 	clr	a
   02EE 3A                 1223 	addc	a,r2
   02EF FA                 1224 	mov	r2,a
   02F0 E5*00              1225 	mov	a,_bp
   02F2 24 03              1226 	add	a,#0x03
   02F4 F8                 1227 	mov	r0,a
   02F5 A6 07              1228 	mov	@r0,ar7
   02F7 08                 1229 	inc	r0
   02F8 A6 02              1230 	mov	@r0,ar2
   02FA 08                 1231 	inc	r0
   02FB A6 03              1232 	mov	@r0,ar3
                           1233 ;	../../../core/net/tcpip.c:282: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   02FD 90s00r78           1234 	mov	dptr,#_tcp_listen_i_1_1
   0300 EE                 1235 	mov	a,r6
   0301 04                 1236 	inc	a
   0302 F0                 1237 	movx	@dptr,a
   0303 02s02r74           1238 	ljmp	00103$
   0306                    1239 00107$:
   0306 85*00 81           1240 	mov	sp,_bp
   0309 D0*00              1241 	pop	_bp
   030B 22                 1242 	ret
                           1243 ;------------------------------------------------------------
                           1244 ;Allocation info for local variables in function 'tcp_attach'
                           1245 ;------------------------------------------------------------
                           1246 ;appstate                  Allocated to stack - offset -5
                           1247 ;conn                      Allocated to registers r2 r3 r4 
                           1248 ;s                         Allocated to registers r2 r3 r4 
                           1249 ;------------------------------------------------------------
                           1250 ;	../../../core/net/tcpip.c:294: tcp_attach(struct uip_conn *conn,
                           1251 ;	-----------------------------------------
                           1252 ;	 function tcp_attach
                           1253 ;	-----------------------------------------
   030C                    1254 _tcp_attach:
   030C C0*00              1255 	push	_bp
   030E 85 81*00           1256 	mov	_bp,sp
   0311 AA 82              1257 	mov	r2,dpl
   0313 AB 83              1258 	mov	r3,dph
   0315 AC F0              1259 	mov	r4,b
                           1260 ;	../../../core/net/tcpip.c:299: s = &conn->appstate;
   0317 74 1C              1261 	mov	a,#0x1C
   0319 2A                 1262 	add	a,r2
   031A FA                 1263 	mov	r2,a
   031B E4                 1264 	clr	a
   031C 3B                 1265 	addc	a,r3
   031D FB                 1266 	mov	r3,a
                           1267 ;	../../../core/net/tcpip.c:300: s->p = PROCESS_CURRENT();
   031E 90s00r00           1268 	mov	dptr,#_process_current
   0321 E0                 1269 	movx	a,@dptr
   0322 FD                 1270 	mov	r5,a
   0323 A3                 1271 	inc	dptr
   0324 E0                 1272 	movx	a,@dptr
   0325 FE                 1273 	mov	r6,a
   0326 A3                 1274 	inc	dptr
   0327 E0                 1275 	movx	a,@dptr
   0328 FF                 1276 	mov	r7,a
   0329 8A 82              1277 	mov	dpl,r2
   032B 8B 83              1278 	mov	dph,r3
   032D 8C F0              1279 	mov	b,r4
   032F ED                 1280 	mov	a,r5
   0330 12s00r00           1281 	lcall	__gptrput
   0333 A3                 1282 	inc	dptr
   0334 EE                 1283 	mov	a,r6
   0335 12s00r00           1284 	lcall	__gptrput
   0338 A3                 1285 	inc	dptr
   0339 EF                 1286 	mov	a,r7
   033A 12s00r00           1287 	lcall	__gptrput
                           1288 ;	../../../core/net/tcpip.c:301: s->state = appstate;
   033D 74 03              1289 	mov	a,#0x03
   033F 2A                 1290 	add	a,r2
   0340 FA                 1291 	mov	r2,a
   0341 E4                 1292 	clr	a
   0342 3B                 1293 	addc	a,r3
   0343 FB                 1294 	mov	r3,a
   0344 8A 82              1295 	mov	dpl,r2
   0346 8B 83              1296 	mov	dph,r3
   0348 8C F0              1297 	mov	b,r4
   034A E5*00              1298 	mov	a,_bp
   034C 24 FB              1299 	add	a,#0xfb
   034E F8                 1300 	mov	r0,a
   034F E6                 1301 	mov	a,@r0
   0350 12s00r00           1302 	lcall	__gptrput
   0353 A3                 1303 	inc	dptr
   0354 08                 1304 	inc	r0
   0355 E6                 1305 	mov	a,@r0
   0356 12s00r00           1306 	lcall	__gptrput
   0359 A3                 1307 	inc	dptr
   035A 08                 1308 	inc	r0
   035B E6                 1309 	mov	a,@r0
   035C 12s00r00           1310 	lcall	__gptrput
   035F D0*00              1311 	pop	_bp
   0361 22                 1312 	ret
                           1313 ;------------------------------------------------------------
                           1314 ;Allocation info for local variables in function 'udp_attach'
                           1315 ;------------------------------------------------------------
                           1316 ;appstate                  Allocated to stack - offset -5
                           1317 ;conn                      Allocated to registers r2 r3 r4 
                           1318 ;s                         Allocated to registers r2 r3 r4 
                           1319 ;------------------------------------------------------------
                           1320 ;	../../../core/net/tcpip.c:308: udp_attach(struct uip_udp_conn *conn,
                           1321 ;	-----------------------------------------
                           1322 ;	 function udp_attach
                           1323 ;	-----------------------------------------
   0362                    1324 _udp_attach:
   0362 C0*00              1325 	push	_bp
   0364 85 81*00           1326 	mov	_bp,sp
   0367 AA 82              1327 	mov	r2,dpl
   0369 AB 83              1328 	mov	r3,dph
   036B AC F0              1329 	mov	r4,b
                           1330 ;	../../../core/net/tcpip.c:313: s = &conn->appstate;
   036D 74 09              1331 	mov	a,#0x09
   036F 2A                 1332 	add	a,r2
   0370 FA                 1333 	mov	r2,a
   0371 E4                 1334 	clr	a
   0372 3B                 1335 	addc	a,r3
   0373 FB                 1336 	mov	r3,a
                           1337 ;	../../../core/net/tcpip.c:314: s->p = PROCESS_CURRENT();
   0374 90s00r00           1338 	mov	dptr,#_process_current
   0377 E0                 1339 	movx	a,@dptr
   0378 FD                 1340 	mov	r5,a
   0379 A3                 1341 	inc	dptr
   037A E0                 1342 	movx	a,@dptr
   037B FE                 1343 	mov	r6,a
   037C A3                 1344 	inc	dptr
   037D E0                 1345 	movx	a,@dptr
   037E FF                 1346 	mov	r7,a
   037F 8A 82              1347 	mov	dpl,r2
   0381 8B 83              1348 	mov	dph,r3
   0383 8C F0              1349 	mov	b,r4
   0385 ED                 1350 	mov	a,r5
   0386 12s00r00           1351 	lcall	__gptrput
   0389 A3                 1352 	inc	dptr
   038A EE                 1353 	mov	a,r6
   038B 12s00r00           1354 	lcall	__gptrput
   038E A3                 1355 	inc	dptr
   038F EF                 1356 	mov	a,r7
   0390 12s00r00           1357 	lcall	__gptrput
                           1358 ;	../../../core/net/tcpip.c:315: s->state = appstate;
   0393 74 03              1359 	mov	a,#0x03
   0395 2A                 1360 	add	a,r2
   0396 FA                 1361 	mov	r2,a
   0397 E4                 1362 	clr	a
   0398 3B                 1363 	addc	a,r3
   0399 FB                 1364 	mov	r3,a
   039A 8A 82              1365 	mov	dpl,r2
   039C 8B 83              1366 	mov	dph,r3
   039E 8C F0              1367 	mov	b,r4
   03A0 E5*00              1368 	mov	a,_bp
   03A2 24 FB              1369 	add	a,#0xfb
   03A4 F8                 1370 	mov	r0,a
   03A5 E6                 1371 	mov	a,@r0
   03A6 12s00r00           1372 	lcall	__gptrput
   03A9 A3                 1373 	inc	dptr
   03AA 08                 1374 	inc	r0
   03AB E6                 1375 	mov	a,@r0
   03AC 12s00r00           1376 	lcall	__gptrput
   03AF A3                 1377 	inc	dptr
   03B0 08                 1378 	inc	r0
   03B1 E6                 1379 	mov	a,@r0
   03B2 12s00r00           1380 	lcall	__gptrput
   03B5 D0*00              1381 	pop	_bp
   03B7 22                 1382 	ret
                           1383 ;------------------------------------------------------------
                           1384 ;Allocation info for local variables in function 'udp_new'
                           1385 ;------------------------------------------------------------
                           1386 ;port                      Allocated to stack - offset -4
                           1387 ;appstate                  Allocated to stack - offset -7
                           1388 ;ripaddr                   Allocated to registers r2 r3 r4 
                           1389 ;c                         Allocated to stack - offset 1
                           1390 ;s                         Allocated to registers r5 r6 r7 
                           1391 ;------------------------------------------------------------
                           1392 ;	../../../core/net/tcpip.c:319: udp_new(const uip_ipaddr_t *ripaddr, u16_t port, void *appstate) __banked
                           1393 ;	-----------------------------------------
                           1394 ;	 function udp_new
                           1395 ;	-----------------------------------------
   03B8                    1396 _udp_new:
   03B8 C0*00              1397 	push	_bp
   03BA 85 81*00           1398 	mov	_bp,sp
   03BD 05 81              1399 	inc	sp
   03BF 05 81              1400 	inc	sp
   03C1 05 81              1401 	inc	sp
   03C3 AA 82              1402 	mov	r2,dpl
   03C5 AB 83              1403 	mov	r3,dph
   03C7 AC F0              1404 	mov	r4,b
                           1405 ;	../../../core/net/tcpip.c:324: c = uip_udp_new(ripaddr, port);
   03C9 E5*00              1406 	mov	a,_bp
   03CB 24 FC              1407 	add	a,#0xfc
   03CD F8                 1408 	mov	r0,a
   03CE E6                 1409 	mov	a,@r0
   03CF C0 E0              1410 	push	acc
   03D1 08                 1411 	inc	r0
   03D2 E6                 1412 	mov	a,@r0
   03D3 C0 E0              1413 	push	acc
   03D5 8A 82              1414 	mov	dpl,r2
   03D7 8B 83              1415 	mov	dph,r3
   03D9 8C F0              1416 	mov	b,r4
   03DB 12s00r00           1417 	lcall	_uip_udp_new
   03DE AA 82              1418 	mov	r2,dpl
   03E0 AB 83              1419 	mov	r3,dph
   03E2 AC F0              1420 	mov	r4,b
   03E4 15 81              1421 	dec	sp
   03E6 15 81              1422 	dec	sp
   03E8 A8*00              1423 	mov	r0,_bp
   03EA 08                 1424 	inc	r0
   03EB A6 02              1425 	mov	@r0,ar2
   03ED 08                 1426 	inc	r0
   03EE A6 03              1427 	mov	@r0,ar3
   03F0 08                 1428 	inc	r0
   03F1 A6 04              1429 	mov	@r0,ar4
                           1430 ;	../../../core/net/tcpip.c:325: if(c == NULL) {
   03F3 A8*00              1431 	mov	r0,_bp
   03F5 08                 1432 	inc	r0
   03F6 E6                 1433 	mov	a,@r0
   03F7 08                 1434 	inc	r0
   03F8 46                 1435 	orl	a,@r0
   03F9 08                 1436 	inc	r0
   03FA 46                 1437 	orl	a,@r0
                           1438 ;	../../../core/net/tcpip.c:326: return NULL;
   03FB 70 07              1439 	jnz	00102$
   03FD 90 00 00           1440 	mov	dptr,#0x0000
   0400 F5 F0              1441 	mov	b,a
   0402 80 5A              1442 	sjmp	00103$
   0404                    1443 00102$:
                           1444 ;	../../../core/net/tcpip.c:329: s = &c->appstate;
   0404 A8*00              1445 	mov	r0,_bp
   0406 08                 1446 	inc	r0
   0407 74 09              1447 	mov	a,#0x09
   0409 26                 1448 	add	a,@r0
   040A FD                 1449 	mov	r5,a
   040B E4                 1450 	clr	a
   040C 08                 1451 	inc	r0
   040D 36                 1452 	addc	a,@r0
   040E FE                 1453 	mov	r6,a
   040F 08                 1454 	inc	r0
   0410 86 07              1455 	mov	ar7,@r0
                           1456 ;	../../../core/net/tcpip.c:330: s->p = PROCESS_CURRENT();
   0412 90s00r00           1457 	mov	dptr,#_process_current
   0415 E0                 1458 	movx	a,@dptr
   0416 FA                 1459 	mov	r2,a
   0417 A3                 1460 	inc	dptr
   0418 E0                 1461 	movx	a,@dptr
   0419 FB                 1462 	mov	r3,a
   041A A3                 1463 	inc	dptr
   041B E0                 1464 	movx	a,@dptr
   041C FC                 1465 	mov	r4,a
   041D 8D 82              1466 	mov	dpl,r5
   041F 8E 83              1467 	mov	dph,r6
   0421 8F F0              1468 	mov	b,r7
   0423 EA                 1469 	mov	a,r2
   0424 12s00r00           1470 	lcall	__gptrput
   0427 A3                 1471 	inc	dptr
   0428 EB                 1472 	mov	a,r3
   0429 12s00r00           1473 	lcall	__gptrput
   042C A3                 1474 	inc	dptr
   042D EC                 1475 	mov	a,r4
   042E 12s00r00           1476 	lcall	__gptrput
                           1477 ;	../../../core/net/tcpip.c:331: s->state = appstate;
   0431 74 03              1478 	mov	a,#0x03
   0433 2D                 1479 	add	a,r5
   0434 FD                 1480 	mov	r5,a
   0435 E4                 1481 	clr	a
   0436 3E                 1482 	addc	a,r6
   0437 FE                 1483 	mov	r6,a
   0438 8D 82              1484 	mov	dpl,r5
   043A 8E 83              1485 	mov	dph,r6
   043C 8F F0              1486 	mov	b,r7
   043E E5*00              1487 	mov	a,_bp
   0440 24 F9              1488 	add	a,#0xf9
   0442 F8                 1489 	mov	r0,a
   0443 E6                 1490 	mov	a,@r0
   0444 12s00r00           1491 	lcall	__gptrput
   0447 A3                 1492 	inc	dptr
   0448 08                 1493 	inc	r0
   0449 E6                 1494 	mov	a,@r0
   044A 12s00r00           1495 	lcall	__gptrput
   044D A3                 1496 	inc	dptr
   044E 08                 1497 	inc	r0
   044F E6                 1498 	mov	a,@r0
   0450 12s00r00           1499 	lcall	__gptrput
                           1500 ;	../../../core/net/tcpip.c:333: return c;
   0453 A8*00              1501 	mov	r0,_bp
   0455 08                 1502 	inc	r0
   0456 86 82              1503 	mov	dpl,@r0
   0458 08                 1504 	inc	r0
   0459 86 83              1505 	mov	dph,@r0
   045B 08                 1506 	inc	r0
   045C 86 F0              1507 	mov	b,@r0
   045E                    1508 00103$:
   045E 85*00 81           1509 	mov	sp,_bp
   0461 D0*00              1510 	pop	_bp
   0463 22                 1511 	ret
                           1512 ;------------------------------------------------------------
                           1513 ;Allocation info for local variables in function 'udp_broadcast_new'
                           1514 ;------------------------------------------------------------
                           1515 ;appstate                  Allocated to stack - offset -5
                           1516 ;port                      Allocated to stack - offset 1
                           1517 ;addr                      Allocated to stack - offset 3
                           1518 ;conn                      Allocated to registers r4 r5 r6 
                           1519 ;------------------------------------------------------------
                           1520 ;	../../../core/net/tcpip.c:337: udp_broadcast_new(u16_t port, void *appstate)
                           1521 ;	-----------------------------------------
                           1522 ;	 function udp_broadcast_new
                           1523 ;	-----------------------------------------
   0464                    1524 _udp_broadcast_new:
   0464 C0*00              1525 	push	_bp
   0466 85 81*00           1526 	mov	_bp,sp
   0469 C0 82              1527 	push	dpl
   046B C0 83              1528 	push	dph
   046D E5 81              1529 	mov	a,sp
   046F 24 06              1530 	add	a,#0x06
   0471 F5 81              1531 	mov	sp,a
                           1532 ;	../../../core/net/tcpip.c:345: uip_ipaddr(&addr, 255,255,255,255);
   0473 E5*00              1533 	mov	a,_bp
   0475 24 03              1534 	add	a,#0x03
   0477 F8                 1535 	mov	r0,a
   0478 76 FF              1536 	mov	@r0,#0xFF
   047A E5*00              1537 	mov	a,_bp
   047C 24 03              1538 	add	a,#0x03
   047E FC                 1539 	mov	r4,a
   047F 04                 1540 	inc	a
   0480 F8                 1541 	mov	r0,a
   0481 76 FF              1542 	mov	@r0,#0xFF
   0483 74 02              1543 	mov	a,#0x02
   0485 2C                 1544 	add	a,r4
   0486 F8                 1545 	mov	r0,a
   0487 76 FF              1546 	mov	@r0,#0xFF
   0489 74 03              1547 	mov	a,#0x03
   048B 2C                 1548 	add	a,r4
   048C F8                 1549 	mov	r0,a
   048D 76 FF              1550 	mov	@r0,#0xFF
                           1551 ;	../../../core/net/tcpip.c:347: conn = udp_new(&addr, port, appstate);
   048F E5*00              1552 	mov	a,_bp
   0491 24 03              1553 	add	a,#0x03
   0493 FC                 1554 	mov	r4,a
   0494 7D 00              1555 	mov	r5,#0x00
   0496 7E 40              1556 	mov	r6,#0x40
   0498 E5*00              1557 	mov	a,_bp
   049A 24 FB              1558 	add	a,#0xfb
   049C F8                 1559 	mov	r0,a
   049D E6                 1560 	mov	a,@r0
   049E C0 E0              1561 	push	acc
   04A0 08                 1562 	inc	r0
   04A1 E6                 1563 	mov	a,@r0
   04A2 C0 E0              1564 	push	acc
   04A4 08                 1565 	inc	r0
   04A5 E6                 1566 	mov	a,@r0
   04A6 C0 E0              1567 	push	acc
   04A8 A8*00              1568 	mov	r0,_bp
   04AA 08                 1569 	inc	r0
   04AB E6                 1570 	mov	a,@r0
   04AC C0 E0              1571 	push	acc
   04AE 08                 1572 	inc	r0
   04AF E6                 1573 	mov	a,@r0
   04B0 C0 E0              1574 	push	acc
   04B2 8C 82              1575 	mov	dpl,r4
   04B4 8D 83              1576 	mov	dph,r5
   04B6 8E F0              1577 	mov	b,r6
   04B8 12s03rB8           1578 	lcall	_udp_new
   04BB AC 82              1579 	mov	r4,dpl
   04BD AD 83              1580 	mov	r5,dph
   04BF AE F0              1581 	mov	r6,b
   04C1 E5 81              1582 	mov	a,sp
   04C3 24 FB              1583 	add	a,#0xfb
   04C5 F5 81              1584 	mov	sp,a
                           1585 ;	../../../core/net/tcpip.c:348: if(conn != NULL) {
   04C7 EC                 1586 	mov	a,r4
   04C8 4D                 1587 	orl	a,r5
   04C9 4E                 1588 	orl	a,r6
   04CA 60 1C              1589 	jz	00105$
                           1590 ;	../../../core/net/tcpip.c:349: udp_bind(conn, port);
   04CC 74 04              1591 	mov	a,#0x04
   04CE 2C                 1592 	add	a,r4
   04CF FF                 1593 	mov	r7,a
   04D0 E4                 1594 	clr	a
   04D1 3D                 1595 	addc	a,r5
   04D2 FA                 1596 	mov	r2,a
   04D3 8E 03              1597 	mov	ar3,r6
   04D5 8F 82              1598 	mov	dpl,r7
   04D7 8A 83              1599 	mov	dph,r2
   04D9 8B F0              1600 	mov	b,r3
   04DB A8*00              1601 	mov	r0,_bp
   04DD 08                 1602 	inc	r0
   04DE E6                 1603 	mov	a,@r0
   04DF 12s00r00           1604 	lcall	__gptrput
   04E2 A3                 1605 	inc	dptr
   04E3 08                 1606 	inc	r0
   04E4 E6                 1607 	mov	a,@r0
   04E5 12s00r00           1608 	lcall	__gptrput
   04E8                    1609 00105$:
                           1610 ;	../../../core/net/tcpip.c:351: return conn;
   04E8 8C 82              1611 	mov	dpl,r4
   04EA 8D 83              1612 	mov	dph,r5
   04EC 8E F0              1613 	mov	b,r6
   04EE 85*00 81           1614 	mov	sp,_bp
   04F1 D0*00              1615 	pop	_bp
   04F3 22                 1616 	ret
                           1617 ;------------------------------------------------------------
                           1618 ;Allocation info for local variables in function 'eventhandler'
                           1619 ;------------------------------------------------------------
                           1620 ;data                      Allocated to stack - offset -5
                           1621 ;ev                        Allocated to registers r2 
                           1622 ;l                         Allocated to registers 
                           1623 ;cptr                      Allocated to registers 
                           1624 ;cptr                      Allocated to registers 
                           1625 ;sloc0                     Allocated to stack - offset 1
                           1626 ;p                         Allocated with name '_eventhandler_p_1_1'
                           1627 ;i                         Allocated with name '_eventhandler_i_1_1'
                           1628 ;------------------------------------------------------------
                           1629 ;	../../../core/net/tcpip.c:379: eventhandler(process_event_t ev, process_data_t data)
                           1630 ;	-----------------------------------------
                           1631 ;	 function eventhandler
                           1632 ;	-----------------------------------------
   04F4                    1633 _eventhandler:
   04F4 C0*00              1634 	push	_bp
   04F6 85 81*00           1635 	mov	_bp,sp
   04F9 05 81              1636 	inc	sp
   04FB 05 81              1637 	inc	sp
   04FD 05 81              1638 	inc	sp
   04FF AA 82              1639 	mov	r2,dpl
                           1640 ;	../../../core/net/tcpip.c:386: switch(ev) {
   0501 BA 00 03           1641 	cjne	r2,#0x00,00181$
   0504 02s07r6A           1642 	ljmp	00119$
   0507                    1643 00181$:
   0507 BA 01 03           1644 	cjne	r2,#0x01,00182$
   050A 02s07rA1           1645 	ljmp	00127$
   050D                    1646 00182$:
   050D BA 02 03           1647 	cjne	r2,#0x02,00183$
   0510 02s07rD5           1648 	ljmp	00135$
   0513                    1649 00183$:
   0513 BA 87 02           1650 	cjne	r2,#0x87,00184$
   0516 80 09              1651 	sjmp	00101$
   0518                    1652 00184$:
   0518 BA 88 03           1653 	cjne	r2,#0x88,00185$
   051B 02s06rCD           1654 	ljmp	00108$
   051E                    1655 00185$:
   051E 02s07rD8           1656 	ljmp	00152$
                           1657 ;	../../../core/net/tcpip.c:387: case PROCESS_EVENT_EXITED:
   0521                    1658 00101$:
                           1659 ;	../../../core/net/tcpip.c:393: p = (struct process *)data;
   0521 E5*00              1660 	mov	a,_bp
   0523 24 FB              1661 	add	a,#0xfb
   0525 F8                 1662 	mov	r0,a
   0526 86*00              1663 	mov	_eventhandler_p_1_1,@r0
   0528 08                 1664 	inc	r0
   0529 86*01              1665 	mov	(_eventhandler_p_1_1 + 1),@r0
   052B 08                 1666 	inc	r0
   052C 86*02              1667 	mov	(_eventhandler_p_1_1 + 2),@r0
                           1668 ;	../../../core/net/tcpip.c:395: l = s.listenports;
                           1669 ;	../../../core/net/tcpip.c:396: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   052E 90s00r79           1670 	mov	dptr,#_eventhandler_i_1_1
   0531 74 14              1671 	mov	a,#0x14
   0533 F0                 1672 	movx	@dptr,a
   0534 7Ar0B              1673 	mov	r2,#_s
   0536 7Bs00              1674 	mov	r3,#(_s >> 8)
   0538 7C 00              1675 	mov	r4,#0x00
   053A                    1676 00139$:
                           1677 ;	../../../core/net/tcpip.c:397: if(l->p == p) {
   053A A8*00              1678 	mov	r0,_bp
   053C 08                 1679 	inc	r0
   053D 74 02              1680 	mov	a,#0x02
   053F 2A                 1681 	add	a,r2
   0540 F6                 1682 	mov	@r0,a
   0541 E4                 1683 	clr	a
   0542 3B                 1684 	addc	a,r3
   0543 08                 1685 	inc	r0
   0544 F6                 1686 	mov	@r0,a
   0545 08                 1687 	inc	r0
   0546 A6 04              1688 	mov	@r0,ar4
   0548 C0 02              1689 	push	ar2
   054A C0 03              1690 	push	ar3
   054C C0 04              1691 	push	ar4
   054E A8*00              1692 	mov	r0,_bp
   0550 08                 1693 	inc	r0
   0551 86 82              1694 	mov	dpl,@r0
   0553 08                 1695 	inc	r0
   0554 86 83              1696 	mov	dph,@r0
   0556 08                 1697 	inc	r0
   0557 86 F0              1698 	mov	b,@r0
   0559 12s00r00           1699 	lcall	__gptrget
   055C FA                 1700 	mov	r2,a
   055D A3                 1701 	inc	dptr
   055E 12s00r00           1702 	lcall	__gptrget
   0561 FB                 1703 	mov	r3,a
   0562 A3                 1704 	inc	dptr
   0563 12s00r00           1705 	lcall	__gptrget
   0566 FC                 1706 	mov	r4,a
   0567 EA                 1707 	mov	a,r2
   0568 B5*00 0A           1708 	cjne	a,_eventhandler_p_1_1,00186$
   056B EB                 1709 	mov	a,r3
   056C B5*01 06           1710 	cjne	a,(_eventhandler_p_1_1 + 1),00186$
   056F EC                 1711 	mov	a,r4
   0570 B5*02 02           1712 	cjne	a,(_eventhandler_p_1_1 + 2),00186$
   0573 80 08              1713 	sjmp	00187$
   0575                    1714 00186$:
   0575 D0 04              1715 	pop	ar4
   0577 D0 03              1716 	pop	ar3
   0579 D0 02              1717 	pop	ar2
   057B 80 50              1718 	sjmp	00103$
   057D                    1719 00187$:
   057D D0 04              1720 	pop	ar4
   057F D0 03              1721 	pop	ar3
   0581 D0 02              1722 	pop	ar2
                           1723 ;	../../../core/net/tcpip.c:398: uip_unlisten(l->port);
   0583 8A 82              1724 	mov	dpl,r2
   0585 8B 83              1725 	mov	dph,r3
   0587 8C F0              1726 	mov	b,r4
   0589 12s00r00           1727 	lcall	__gptrget
   058C FD                 1728 	mov	r5,a
   058D A3                 1729 	inc	dptr
   058E 12s00r00           1730 	lcall	__gptrget
   0591 FE                 1731 	mov	r6,a
   0592 8D 82              1732 	mov	dpl,r5
   0594 8E 83              1733 	mov	dph,r6
   0596 C0 02              1734 	push	ar2
   0598 C0 03              1735 	push	ar3
   059A C0 04              1736 	push	ar4
   059C 12s00r00           1737 	lcall	_uip_unlisten
   059F D0 04              1738 	pop	ar4
   05A1 D0 03              1739 	pop	ar3
   05A3 D0 02              1740 	pop	ar2
                           1741 ;	../../../core/net/tcpip.c:399: l->port = 0;
   05A5 8A 82              1742 	mov	dpl,r2
   05A7 8B 83              1743 	mov	dph,r3
   05A9 8C F0              1744 	mov	b,r4
   05AB E4                 1745 	clr	a
   05AC 12s00r00           1746 	lcall	__gptrput
   05AF A3                 1747 	inc	dptr
   05B0 E4                 1748 	clr	a
   05B1 12s00r00           1749 	lcall	__gptrput
                           1750 ;	../../../core/net/tcpip.c:400: l->p = PROCESS_NONE;
   05B4 A8*00              1751 	mov	r0,_bp
   05B6 08                 1752 	inc	r0
   05B7 86 82              1753 	mov	dpl,@r0
   05B9 08                 1754 	inc	r0
   05BA 86 83              1755 	mov	dph,@r0
   05BC 08                 1756 	inc	r0
   05BD 86 F0              1757 	mov	b,@r0
   05BF E4                 1758 	clr	a
   05C0 12s00r00           1759 	lcall	__gptrput
   05C3 A3                 1760 	inc	dptr
   05C4 E4                 1761 	clr	a
   05C5 12s00r00           1762 	lcall	__gptrput
   05C8 A3                 1763 	inc	dptr
   05C9 E4                 1764 	clr	a
   05CA 12s00r00           1765 	lcall	__gptrput
   05CD                    1766 00103$:
                           1767 ;	../../../core/net/tcpip.c:402: ++l;
   05CD 74 05              1768 	mov	a,#0x05
   05CF 2A                 1769 	add	a,r2
   05D0 FA                 1770 	mov	r2,a
   05D1 E4                 1771 	clr	a
   05D2 3B                 1772 	addc	a,r3
   05D3 FB                 1773 	mov	r3,a
   05D4 90s00r79           1774 	mov	dptr,#_eventhandler_i_1_1
   05D7 E0                 1775 	movx	a,@dptr
   05D8 14                 1776 	dec	a
                           1777 ;	../../../core/net/tcpip.c:396: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   05D9 90s00r79           1778 	mov	dptr,#_eventhandler_i_1_1
   05DC F0                 1779 	movx	@dptr,a
   05DD FD                 1780 	mov	r5,a
   05DE 60 03              1781 	jz	00188$
   05E0 02s05r3A           1782 	ljmp	00139$
   05E3                    1783 00188$:
   05E3 90s00r79           1784 	mov	dptr,#_eventhandler_i_1_1
   05E6 74 14              1785 	mov	a,#0x14
   05E8 F0                 1786 	movx	@dptr,a
                           1787 ;	../../../core/net/tcpip.c:408: for(cptr = &uip_conns[0]; cptr < &uip_conns[UIP_CONNS]; ++cptr) {
   05E9 7Ar00              1788 	mov	r2,#_uip_conns
   05EB 7Bs00              1789 	mov	r3,#(_uip_conns >> 8)
   05ED 7C 00              1790 	mov	r4,#0x00
   05EF                    1791 00140$:
   05EF C3                 1792 	clr	c
   05F0 EA                 1793 	mov	a,r2
   05F1 94r54              1794 	subb	a,#(_uip_conns + 0x0154)
   05F3 EB                 1795 	mov	a,r3
   05F4 94s01              1796 	subb	a,#((_uip_conns + 0x0154) >> 8)
   05F6 EC                 1797 	mov	a,r4
   05F7 94 00              1798 	subb	a,#0x00
   05F9 40 03              1799 	jc	00189$
   05FB 02s06r6E           1800 	ljmp	00143$
   05FE                    1801 00189$:
                           1802 ;	../../../core/net/tcpip.c:409: if(cptr->appstate.p == p) {
   05FE 74 1C              1803 	mov	a,#0x1C
   0600 2A                 1804 	add	a,r2
   0601 FD                 1805 	mov	r5,a
   0602 E4                 1806 	clr	a
   0603 3B                 1807 	addc	a,r3
   0604 FE                 1808 	mov	r6,a
   0605 8C 07              1809 	mov	ar7,r4
   0607 C0 02              1810 	push	ar2
   0609 C0 03              1811 	push	ar3
   060B C0 04              1812 	push	ar4
   060D 8D 82              1813 	mov	dpl,r5
   060F 8E 83              1814 	mov	dph,r6
   0611 8F F0              1815 	mov	b,r7
   0613 12s00r00           1816 	lcall	__gptrget
   0616 FA                 1817 	mov	r2,a
   0617 A3                 1818 	inc	dptr
   0618 12s00r00           1819 	lcall	__gptrget
   061B FB                 1820 	mov	r3,a
   061C A3                 1821 	inc	dptr
   061D 12s00r00           1822 	lcall	__gptrget
   0620 FC                 1823 	mov	r4,a
   0621 EA                 1824 	mov	a,r2
   0622 B5*00 0A           1825 	cjne	a,_eventhandler_p_1_1,00190$
   0625 EB                 1826 	mov	a,r3
   0626 B5*01 06           1827 	cjne	a,(_eventhandler_p_1_1 + 1),00190$
   0629 EC                 1828 	mov	a,r4
   062A B5*02 02           1829 	cjne	a,(_eventhandler_p_1_1 + 2),00190$
   062D 80 08              1830 	sjmp	00191$
   062F                    1831 00190$:
   062F D0 04              1832 	pop	ar4
   0631 D0 03              1833 	pop	ar3
   0633 D0 02              1834 	pop	ar2
   0635 80 2D              1835 	sjmp	00142$
   0637                    1836 00191$:
   0637 D0 04              1837 	pop	ar4
   0639 D0 03              1838 	pop	ar3
   063B D0 02              1839 	pop	ar2
                           1840 ;	../../../core/net/tcpip.c:410: cptr->appstate.p = PROCESS_NONE;
   063D 8D 82              1841 	mov	dpl,r5
   063F 8E 83              1842 	mov	dph,r6
   0641 8F F0              1843 	mov	b,r7
   0643 E4                 1844 	clr	a
   0644 12s00r00           1845 	lcall	__gptrput
   0647 A3                 1846 	inc	dptr
   0648 E4                 1847 	clr	a
   0649 12s00r00           1848 	lcall	__gptrput
   064C A3                 1849 	inc	dptr
   064D E4                 1850 	clr	a
   064E 12s00r00           1851 	lcall	__gptrput
                           1852 ;	../../../core/net/tcpip.c:411: cptr->tcpstateflags = UIP_CLOSED;
   0651 74 19              1853 	mov	a,#0x19
   0653 2A                 1854 	add	a,r2
   0654 FD                 1855 	mov	r5,a
   0655 E4                 1856 	clr	a
   0656 3B                 1857 	addc	a,r3
   0657 FE                 1858 	mov	r6,a
   0658 8C 07              1859 	mov	ar7,r4
   065A 8D 82              1860 	mov	dpl,r5
   065C 8E 83              1861 	mov	dph,r6
   065E 8F F0              1862 	mov	b,r7
   0660 E4                 1863 	clr	a
   0661 12s00r00           1864 	lcall	__gptrput
   0664                    1865 00142$:
                           1866 ;	../../../core/net/tcpip.c:408: for(cptr = &uip_conns[0]; cptr < &uip_conns[UIP_CONNS]; ++cptr) {
   0664 74 22              1867 	mov	a,#0x22
   0666 2A                 1868 	add	a,r2
   0667 FA                 1869 	mov	r2,a
   0668 E4                 1870 	clr	a
   0669 3B                 1871 	addc	a,r3
   066A FB                 1872 	mov	r3,a
   066B 02s05rEF           1873 	ljmp	00140$
   066E                    1874 00143$:
                           1875 ;	../../../core/net/tcpip.c:421: for(cptr = &uip_udp_conns[0];
   066E 7Ar00              1876 	mov	r2,#_uip_udp_conns
   0670 7Bs00              1877 	mov	r3,#(_uip_udp_conns >> 8)
   0672 7C 00              1878 	mov	r4,#0x00
   0674                    1879 00144$:
                           1880 ;	../../../core/net/tcpip.c:422: cptr < &uip_udp_conns[UIP_UDP_CONNS]; ++cptr) {
   0674 C3                 1881 	clr	c
   0675 EA                 1882 	mov	a,r2
   0676 94r96              1883 	subb	a,#(_uip_udp_conns + 0x0096)
   0678 EB                 1884 	mov	a,r3
   0679 94s00              1885 	subb	a,#((_uip_udp_conns + 0x0096) >> 8)
   067B EC                 1886 	mov	a,r4
   067C 94 00              1887 	subb	a,#0x00
   067E 40 03              1888 	jc	00192$
   0680 02s07rD8           1889 	ljmp	00152$
   0683                    1890 00192$:
                           1891 ;	../../../core/net/tcpip.c:423: if(cptr->appstate.p == p) {
   0683 74 09              1892 	mov	a,#0x09
   0685 2A                 1893 	add	a,r2
   0686 FD                 1894 	mov	r5,a
   0687 E4                 1895 	clr	a
   0688 3B                 1896 	addc	a,r3
   0689 FE                 1897 	mov	r6,a
   068A 8C 07              1898 	mov	ar7,r4
   068C 8D 82              1899 	mov	dpl,r5
   068E 8E 83              1900 	mov	dph,r6
   0690 8F F0              1901 	mov	b,r7
   0692 12s00r00           1902 	lcall	__gptrget
   0695 FD                 1903 	mov	r5,a
   0696 A3                 1904 	inc	dptr
   0697 12s00r00           1905 	lcall	__gptrget
   069A FE                 1906 	mov	r6,a
   069B A3                 1907 	inc	dptr
   069C 12s00r00           1908 	lcall	__gptrget
   069F FF                 1909 	mov	r7,a
   06A0 ED                 1910 	mov	a,r5
   06A1 B5*00 20           1911 	cjne	a,_eventhandler_p_1_1,00146$
   06A4 EE                 1912 	mov	a,r6
   06A5 B5*01 1C           1913 	cjne	a,(_eventhandler_p_1_1 + 1),00146$
   06A8 EF                 1914 	mov	a,r7
   06A9 B5*02 18           1915 	cjne	a,(_eventhandler_p_1_1 + 2),00146$
                           1916 ;	../../../core/net/tcpip.c:424: cptr->lport = 0;
   06AC 74 04              1917 	mov	a,#0x04
   06AE 2A                 1918 	add	a,r2
   06AF FD                 1919 	mov	r5,a
   06B0 E4                 1920 	clr	a
   06B1 3B                 1921 	addc	a,r3
   06B2 FE                 1922 	mov	r6,a
   06B3 8C 07              1923 	mov	ar7,r4
   06B5 8D 82              1924 	mov	dpl,r5
   06B7 8E 83              1925 	mov	dph,r6
   06B9 8F F0              1926 	mov	b,r7
   06BB E4                 1927 	clr	a
   06BC 12s00r00           1928 	lcall	__gptrput
   06BF A3                 1929 	inc	dptr
   06C0 E4                 1930 	clr	a
   06C1 12s00r00           1931 	lcall	__gptrput
   06C4                    1932 00146$:
                           1933 ;	../../../core/net/tcpip.c:422: cptr < &uip_udp_conns[UIP_UDP_CONNS]; ++cptr) {
   06C4 74 0F              1934 	mov	a,#0x0F
   06C6 2A                 1935 	add	a,r2
   06C7 FA                 1936 	mov	r2,a
   06C8 E4                 1937 	clr	a
   06C9 3B                 1938 	addc	a,r3
   06CA FB                 1939 	mov	r3,a
                           1940 ;	../../../core/net/tcpip.c:432: case PROCESS_EVENT_TIMER:
   06CB 80 A7              1941 	sjmp	00144$
   06CD                    1942 00108$:
                           1943 ;	../../../core/net/tcpip.c:437: if(data == &periodic &&
   06CD E5*00              1944 	mov	a,_bp
   06CF 24 FB              1945 	add	a,#0xfb
   06D1 F8                 1946 	mov	r0,a
   06D2 E6                 1947 	mov	a,@r0
   06D3 B4r01 0C           1948 	cjne	a,#_periodic,00195$
   06D6 08                 1949 	inc	r0
   06D7 E6                 1950 	mov	a,@r0
   06D8 B4s00 07           1951 	cjne	a,#(_periodic >> 8),00195$
   06DB 08                 1952 	inc	r0
   06DC E6                 1953 	mov	a,@r0
   06DD B4 00 02           1954 	cjne	a,#0x00,00195$
   06E0 80 03              1955 	sjmp	00196$
   06E2                    1956 00195$:
   06E2 02s07rD8           1957 	ljmp	00152$
   06E5                    1958 00196$:
                           1959 ;	../../../core/net/tcpip.c:438: etimer_expired(&periodic)) {
   06E5 90s00r01           1960 	mov	dptr,#_periodic
   06E8 75 F0 00           1961 	mov	b,#0x00
   06EB 12s00r00           1962 	lcall	_etimer_expired
   06EE E5 82              1963 	mov	a,dpl
   06F0 85 83 F0           1964 	mov	b,dph
   06F3 45 F0              1965 	orl	a,b
   06F5 70 03              1966 	jnz	00197$
   06F7 02s07rD8           1967 	ljmp	00152$
   06FA                    1968 00197$:
                           1969 ;	../../../core/net/tcpip.c:440: for(i = 0; i < UIP_CONNS; ++i) {
   06FA 90s00r79           1970 	mov	dptr,#_eventhandler_i_1_1
   06FD E4                 1971 	clr	a
   06FE F0                 1972 	movx	@dptr,a
   06FF                    1973 00148$:
   06FF 90s00r79           1974 	mov	dptr,#_eventhandler_i_1_1
   0702 E0                 1975 	movx	a,@dptr
   0703 FA                 1976 	mov	r2,a
   0704 BA 0A 00           1977 	cjne	r2,#0x0A,00198$
   0707                    1978 00198$:
   0707 50 5C              1979 	jnc	00151$
                           1980 ;	../../../core/net/tcpip.c:441: if(uip_conn_active(i)) {
   0709 EA                 1981 	mov	a,r2
   070A 75 F0 22           1982 	mov	b,#0x22
   070D A4                 1983 	mul	ab
   070E 24r00              1984 	add	a,#_uip_conns
   0710 FA                 1985 	mov	r2,a
   0711 74s00              1986 	mov	a,#(_uip_conns >> 8)
   0713 35 F0              1987 	addc	a,b
   0715 FB                 1988 	mov	r3,a
   0716 74 19              1989 	mov	a,#0x19
   0718 2A                 1990 	add	a,r2
   0719 FA                 1991 	mov	r2,a
   071A E4                 1992 	clr	a
   071B 3B                 1993 	addc	a,r3
   071C FB                 1994 	mov	r3,a
   071D 8A 82              1995 	mov	dpl,r2
   071F 8B 83              1996 	mov	dph,r3
   0721 E0                 1997 	movx	a,@dptr
   0722 60 38              1998 	jz	00150$
                           1999 ;	../../../core/net/tcpip.c:444: etimer_restart(&periodic);
   0724 90s00r01           2000 	mov	dptr,#_periodic
   0727 75 F0 00           2001 	mov	b,#0x00
   072A 12s00r00           2002 	lcall	_etimer_restart
                           2003 ;	../../../core/net/tcpip.c:445: uip_periodic(i);
   072D 90s00r79           2004 	mov	dptr,#_eventhandler_i_1_1
   0730 E0                 2005 	movx	a,@dptr
   0731 75 F0 22           2006 	mov	b,#0x22
   0734 A4                 2007 	mul	ab
   0735 24r00              2008 	add	a,#_uip_conns
   0737 FA                 2009 	mov	r2,a
   0738 74s00              2010 	mov	a,#(_uip_conns >> 8)
   073A 35 F0              2011 	addc	a,b
   073C FB                 2012 	mov	r3,a
   073D 90s00r00           2013 	mov	dptr,#_uip_conn
   0740 EA                 2014 	mov	a,r2
   0741 F0                 2015 	movx	@dptr,a
   0742 A3                 2016 	inc	dptr
   0743 EB                 2017 	mov	a,r3
   0744 F0                 2018 	movx	@dptr,a
   0745 A3                 2019 	inc	dptr
   0746 E4                 2020 	clr	a
   0747 F0                 2021 	movx	@dptr,a
   0748 75 82 02           2022 	mov	dpl,#0x02
   074B 12s00r00           2023 	lcall	_uip_process
                           2024 ;	../../../core/net/tcpip.c:449: if(uip_len > 0) {
   074E 90s00r00           2025 	mov	dptr,#_uip_len
   0751 E0                 2026 	movx	a,@dptr
   0752 FA                 2027 	mov	r2,a
   0753 A3                 2028 	inc	dptr
   0754 E0                 2029 	movx	a,@dptr
   0755 FB                 2030 	mov	r3,a
   0756 4A                 2031 	orl	a,r2
   0757 60 03              2032 	jz	00150$
                           2033 ;	../../../core/net/tcpip.c:451: tcpip_output();
   0759 12s00r00           2034 	lcall	_tcpip_output
   075C                    2035 00150$:
                           2036 ;	../../../core/net/tcpip.c:440: for(i = 0; i < UIP_CONNS; ++i) {
   075C 90s00r79           2037 	mov	dptr,#_eventhandler_i_1_1
   075F E0                 2038 	movx	a,@dptr
   0760 24 01              2039 	add	a,#0x01
   0762 F0                 2040 	movx	@dptr,a
   0763 80 9A              2041 	sjmp	00148$
   0765                    2042 00151$:
                           2043 ;	../../../core/net/tcpip.c:459: uip_fw_periodic();
   0765 12s00r00           2044 	lcall	_uip_fw_periodic
                           2045 ;	../../../core/net/tcpip.c:497: break;
                           2046 ;	../../../core/net/tcpip.c:500: case TCP_POLL:
   0768 80 6E              2047 	sjmp	00152$
   076A                    2048 00119$:
                           2049 ;	../../../core/net/tcpip.c:501: if(data != NULL) {
   076A E5*00              2050 	mov	a,_bp
   076C 24 FB              2051 	add	a,#0xfb
   076E F8                 2052 	mov	r0,a
   076F E6                 2053 	mov	a,@r0
   0770 08                 2054 	inc	r0
   0771 46                 2055 	orl	a,@r0
   0772 08                 2056 	inc	r0
   0773 46                 2057 	orl	a,@r0
   0774 60 62              2058 	jz	00152$
                           2059 ;	../../../core/net/tcpip.c:502: uip_poll_conn(data);
   0776 E5*00              2060 	mov	a,_bp
   0778 24 FB              2061 	add	a,#0xfb
   077A F8                 2062 	mov	r0,a
   077B 90s00r00           2063 	mov	dptr,#_uip_conn
   077E E6                 2064 	mov	a,@r0
   077F F0                 2065 	movx	@dptr,a
   0780 08                 2066 	inc	r0
   0781 A3                 2067 	inc	dptr
   0782 E6                 2068 	mov	a,@r0
   0783 F0                 2069 	movx	@dptr,a
   0784 08                 2070 	inc	r0
   0785 A3                 2071 	inc	dptr
   0786 E6                 2072 	mov	a,@r0
   0787 F0                 2073 	movx	@dptr,a
   0788 75 82 03           2074 	mov	dpl,#0x03
   078B 12s00r00           2075 	lcall	_uip_process
                           2076 ;	../../../core/net/tcpip.c:506: if(uip_len > 0) {
   078E 90s00r00           2077 	mov	dptr,#_uip_len
   0791 E0                 2078 	movx	a,@dptr
   0792 FA                 2079 	mov	r2,a
   0793 A3                 2080 	inc	dptr
   0794 E0                 2081 	movx	a,@dptr
   0795 FB                 2082 	mov	r3,a
   0796 4A                 2083 	orl	a,r2
   0797 60 03              2084 	jz	00124$
                           2085 ;	../../../core/net/tcpip.c:508: tcpip_output();
   0799 12s00r00           2086 	lcall	_tcpip_output
   079C                    2087 00124$:
                           2088 ;	../../../core/net/tcpip.c:512: start_periodic_tcp_timer();
   079C 12s00r29           2089 	lcall	_start_periodic_tcp_timer
                           2090 ;	../../../core/net/tcpip.c:514: break;
                           2091 ;	../../../core/net/tcpip.c:517: case UDP_POLL:
   079F 80 37              2092 	sjmp	00152$
   07A1                    2093 00127$:
                           2094 ;	../../../core/net/tcpip.c:518: if(data != NULL) {
   07A1 E5*00              2095 	mov	a,_bp
   07A3 24 FB              2096 	add	a,#0xfb
   07A5 F8                 2097 	mov	r0,a
   07A6 E6                 2098 	mov	a,@r0
   07A7 08                 2099 	inc	r0
   07A8 46                 2100 	orl	a,@r0
   07A9 08                 2101 	inc	r0
   07AA 46                 2102 	orl	a,@r0
   07AB 60 2B              2103 	jz	00152$
                           2104 ;	../../../core/net/tcpip.c:519: uip_udp_periodic_conn(data);
   07AD E5*00              2105 	mov	a,_bp
   07AF 24 FB              2106 	add	a,#0xfb
   07B1 F8                 2107 	mov	r0,a
   07B2 90s00r00           2108 	mov	dptr,#_uip_udp_conn
   07B5 E6                 2109 	mov	a,@r0
   07B6 F0                 2110 	movx	@dptr,a
   07B7 08                 2111 	inc	r0
   07B8 A3                 2112 	inc	dptr
   07B9 E6                 2113 	mov	a,@r0
   07BA F0                 2114 	movx	@dptr,a
   07BB 08                 2115 	inc	r0
   07BC A3                 2116 	inc	dptr
   07BD E6                 2117 	mov	a,@r0
   07BE F0                 2118 	movx	@dptr,a
   07BF 75 82 05           2119 	mov	dpl,#0x05
   07C2 12s00r00           2120 	lcall	_uip_process
                           2121 ;	../../../core/net/tcpip.c:523: if(uip_len > 0) {
   07C5 90s00r00           2122 	mov	dptr,#_uip_len
   07C8 E0                 2123 	movx	a,@dptr
   07C9 FA                 2124 	mov	r2,a
   07CA A3                 2125 	inc	dptr
   07CB E0                 2126 	movx	a,@dptr
   07CC FB                 2127 	mov	r3,a
   07CD 4A                 2128 	orl	a,r2
   07CE 60 08              2129 	jz	00152$
                           2130 ;	../../../core/net/tcpip.c:524: tcpip_output();
   07D0 12s00r00           2131 	lcall	_tcpip_output
                           2132 ;	../../../core/net/tcpip.c:528: break;
                           2133 ;	../../../core/net/tcpip.c:531: case PACKET_INPUT:
   07D3 80 03              2134 	sjmp	00152$
   07D5                    2135 00135$:
                           2136 ;	../../../core/net/tcpip.c:532: packet_input();
   07D5 12s00r5C           2137 	lcall	_packet_input
                           2138 ;	../../../core/net/tcpip.c:534: };
   07D8                    2139 00152$:
   07D8 85*00 81           2140 	mov	sp,_bp
   07DB D0*00              2141 	pop	_bp
   07DD 22                 2142 	ret
                           2143 ;------------------------------------------------------------
                           2144 ;Allocation info for local variables in function 'tcpip_input'
                           2145 ;------------------------------------------------------------
                           2146 ;------------------------------------------------------------
                           2147 ;	../../../core/net/tcpip.c:538: tcpip_input(void)
                           2148 ;	-----------------------------------------
                           2149 ;	 function tcpip_input
                           2150 ;	-----------------------------------------
   07DE                    2151 _tcpip_input:
                           2152 ;	../../../core/net/tcpip.c:545: packet_input();
   07DE 12s00r5C           2153 	lcall	_packet_input
                           2154 ;	../../../core/net/tcpip.c:549: uip_len = 0;
   07E1 90s00r00           2155 	mov	dptr,#_uip_len
   07E4 E4                 2156 	clr	a
   07E5 F0                 2157 	movx	@dptr,a
   07E6 A3                 2158 	inc	dptr
   07E7 F0                 2159 	movx	@dptr,a
   07E8 22                 2160 	ret
                           2161 ;------------------------------------------------------------
                           2162 ;Allocation info for local variables in function 'tcpip_poll_udp'
                           2163 ;------------------------------------------------------------
                           2164 ;conn                      Allocated to registers r2 r3 r4 
                           2165 ;------------------------------------------------------------
                           2166 ;	../../../core/net/tcpip.c:681: tcpip_poll_udp(struct uip_udp_conn *conn)
                           2167 ;	-----------------------------------------
                           2168 ;	 function tcpip_poll_udp
                           2169 ;	-----------------------------------------
   07E9                    2170 _tcpip_poll_udp:
   07E9 AA 82              2171 	mov	r2,dpl
   07EB AB 83              2172 	mov	r3,dph
   07ED AC F0              2173 	mov	r4,b
                           2174 ;	../../../core/net/tcpip.c:683: process_post(&tcpip_process, UDP_POLL, conn);
   07EF C0 02              2175 	push	ar2
   07F1 C0 03              2176 	push	ar3
   07F3 C0 04              2177 	push	ar4
   07F5 74 01              2178 	mov	a,#0x01
   07F7 C0 E0              2179 	push	acc
   07F9 90s00r00           2180 	mov	dptr,#_tcpip_process
   07FC 75 F0 00           2181 	mov	b,#0x00
   07FF 12s00r00           2182 	lcall	_process_post
   0802 E5 81              2183 	mov	a,sp
   0804 24 FC              2184 	add	a,#0xfc
   0806 F5 81              2185 	mov	sp,a
   0808 22                 2186 	ret
                           2187 ;------------------------------------------------------------
                           2188 ;Allocation info for local variables in function 'tcpip_poll_tcp'
                           2189 ;------------------------------------------------------------
                           2190 ;conn                      Allocated to registers r2 r3 r4 
                           2191 ;------------------------------------------------------------
                           2192 ;	../../../core/net/tcpip.c:689: tcpip_poll_tcp(struct uip_conn *conn)
                           2193 ;	-----------------------------------------
                           2194 ;	 function tcpip_poll_tcp
                           2195 ;	-----------------------------------------
   0809                    2196 _tcpip_poll_tcp:
   0809 AA 82              2197 	mov	r2,dpl
   080B AB 83              2198 	mov	r3,dph
   080D AC F0              2199 	mov	r4,b
                           2200 ;	../../../core/net/tcpip.c:691: process_post(&tcpip_process, TCP_POLL, conn);
   080F C0 02              2201 	push	ar2
   0811 C0 03              2202 	push	ar3
   0813 C0 04              2203 	push	ar4
   0815 E4                 2204 	clr	a
   0816 C0 E0              2205 	push	acc
   0818 90s00r00           2206 	mov	dptr,#_tcpip_process
   081B 75 F0 00           2207 	mov	b,#0x00
   081E 12s00r00           2208 	lcall	_process_post
   0821 E5 81              2209 	mov	a,sp
   0823 24 FC              2210 	add	a,#0xfc
   0825 F5 81              2211 	mov	sp,a
   0827 22                 2212 	ret
                           2213 ;------------------------------------------------------------
                           2214 ;Allocation info for local variables in function 'tcpip_uipcall'
                           2215 ;------------------------------------------------------------
                           2216 ;l                         Allocated to registers 
                           2217 ;sloc0                     Allocated to stack - offset 1
                           2218 ;sloc1                     Allocated to stack - offset 3
                           2219 ;ts                        Allocated with name '_tcpip_uipcall_ts_1_1'
                           2220 ;i                         Allocated with name '_tcpip_uipcall_i_2_4'
                           2221 ;------------------------------------------------------------
                           2222 ;	../../../core/net/tcpip.c:696: tcpip_uipcall(void)
                           2223 ;	-----------------------------------------
                           2224 ;	 function tcpip_uipcall
                           2225 ;	-----------------------------------------
   0828                    2226 _tcpip_uipcall:
   0828 C0*00              2227 	push	_bp
   082A E5 81              2228 	mov	a,sp
   082C F5*00              2229 	mov	_bp,a
   082E 24 05              2230 	add	a,#0x05
   0830 F5 81              2231 	mov	sp,a
                           2232 ;	../../../core/net/tcpip.c:701: if(uip_conn != NULL) {
   0832 90s00r00           2233 	mov	dptr,#_uip_conn
   0835 E0                 2234 	movx	a,@dptr
   0836 FA                 2235 	mov	r2,a
   0837 A3                 2236 	inc	dptr
   0838 E0                 2237 	movx	a,@dptr
   0839 FB                 2238 	mov	r3,a
   083A A3                 2239 	inc	dptr
   083B E0                 2240 	movx	a,@dptr
   083C FC                 2241 	mov	r4,a
   083D EA                 2242 	mov	a,r2
   083E 4B                 2243 	orl	a,r3
   083F 4C                 2244 	orl	a,r4
   0840 60 0D              2245 	jz	00102$
                           2246 ;	../../../core/net/tcpip.c:702: ts = &uip_conn->appstate;
   0842 74 1C              2247 	mov	a,#0x1C
   0844 2A                 2248 	add	a,r2
   0845 F5*03              2249 	mov	_tcpip_uipcall_ts_1_1,a
   0847 E4                 2250 	clr	a
   0848 3B                 2251 	addc	a,r3
   0849 F5*04              2252 	mov	(_tcpip_uipcall_ts_1_1 + 1),a
   084B 8C*05              2253 	mov	(_tcpip_uipcall_ts_1_1 + 2),r4
   084D 80 16              2254 	sjmp	00103$
   084F                    2255 00102$:
                           2256 ;	../../../core/net/tcpip.c:704: ts = &uip_udp_conn->appstate;
   084F 90s00r00           2257 	mov	dptr,#_uip_udp_conn
   0852 E0                 2258 	movx	a,@dptr
   0853 FD                 2259 	mov	r5,a
   0854 A3                 2260 	inc	dptr
   0855 E0                 2261 	movx	a,@dptr
   0856 FE                 2262 	mov	r6,a
   0857 A3                 2263 	inc	dptr
   0858 E0                 2264 	movx	a,@dptr
   0859 FF                 2265 	mov	r7,a
   085A 74 09              2266 	mov	a,#0x09
   085C 2D                 2267 	add	a,r5
   085D F5*03              2268 	mov	_tcpip_uipcall_ts_1_1,a
   085F E4                 2269 	clr	a
   0860 3E                 2270 	addc	a,r6
   0861 F5*04              2271 	mov	(_tcpip_uipcall_ts_1_1 + 1),a
   0863 8F*05              2272 	mov	(_tcpip_uipcall_ts_1_1 + 2),r7
   0865                    2273 00103$:
                           2274 ;	../../../core/net/tcpip.c:717: if(uip_connected()) {
   0865 90s00r00           2275 	mov	dptr,#_uip_flags
   0868 E0                 2276 	movx	a,@dptr
   0869 FD                 2277 	mov	r5,a
   086A 20 E6 03           2278 	jb	acc.6,00125$
   086D 02s09r47           2279 	ljmp	00112$
   0870                    2280 00125$:
                           2281 ;	../../../core/net/tcpip.c:718: l = &s.listenports[0];
                           2282 ;	../../../core/net/tcpip.c:719: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   0870 90s00r7A           2283 	mov	dptr,#_tcpip_uipcall_i_2_4
   0873 E4                 2284 	clr	a
   0874 F0                 2285 	movx	@dptr,a
   0875 74 04              2286 	mov	a,#0x04
   0877 2A                 2287 	add	a,r2
   0878 FA                 2288 	mov	r2,a
   0879 E4                 2289 	clr	a
   087A 3B                 2290 	addc	a,r3
   087B FB                 2291 	mov	r3,a
   087C 8A 82              2292 	mov	dpl,r2
   087E 8B 83              2293 	mov	dph,r3
   0880 8C F0              2294 	mov	b,r4
   0882 A8*00              2295 	mov	r0,_bp
   0884 08                 2296 	inc	r0
   0885 12s00r00           2297 	lcall	__gptrget
   0888 F6                 2298 	mov	@r0,a
   0889 A3                 2299 	inc	dptr
   088A 12s00r00           2300 	lcall	__gptrget
   088D 08                 2301 	inc	r0
   088E F6                 2302 	mov	@r0,a
   088F 7Cr0B              2303 	mov	r4,#_s
   0891 7Ds00              2304 	mov	r5,#(_s >> 8)
   0893 7E 00              2305 	mov	r6,#0x00
   0895                    2306 00107$:
   0895 90s00r7A           2307 	mov	dptr,#_tcpip_uipcall_i_2_4
   0898 E0                 2308 	movx	a,@dptr
   0899 FF                 2309 	mov	r7,a
   089A BF 14 00           2310 	cjne	r7,#0x14,00126$
   089D                    2311 00126$:
   089D 40 03              2312 	jc	00127$
   089F 02s09r44           2313 	ljmp	00110$
   08A2                    2314 00127$:
                           2315 ;	../../../core/net/tcpip.c:720: if(l->port == uip_conn->lport &&
   08A2 8C 82              2316 	mov	dpl,r4
   08A4 8D 83              2317 	mov	dph,r5
   08A6 8E F0              2318 	mov	b,r6
   08A8 12s00r00           2319 	lcall	__gptrget
   08AB FF                 2320 	mov	r7,a
   08AC A3                 2321 	inc	dptr
   08AD 12s00r00           2322 	lcall	__gptrget
   08B0 FA                 2323 	mov	r2,a
   08B1 A8*00              2324 	mov	r0,_bp
   08B3 08                 2325 	inc	r0
   08B4 E6                 2326 	mov	a,@r0
   08B5 B5 07 07           2327 	cjne	a,ar7,00128$
   08B8 08                 2328 	inc	r0
   08B9 E6                 2329 	mov	a,@r0
   08BA B5 02 02           2330 	cjne	a,ar2,00128$
   08BD 80 02              2331 	sjmp	00129$
   08BF                    2332 00128$:
   08BF 80 72              2333 	sjmp	00105$
   08C1                    2334 00129$:
                           2335 ;	../../../core/net/tcpip.c:721: l->p != PROCESS_NONE) {
   08C1 74 02              2336 	mov	a,#0x02
   08C3 2C                 2337 	add	a,r4
   08C4 FA                 2338 	mov	r2,a
   08C5 E4                 2339 	clr	a
   08C6 3D                 2340 	addc	a,r5
   08C7 FB                 2341 	mov	r3,a
   08C8 8E 07              2342 	mov	ar7,r6
   08CA 8A 82              2343 	mov	dpl,r2
   08CC 8B 83              2344 	mov	dph,r3
   08CE 8F F0              2345 	mov	b,r7
   08D0 E5*00              2346 	mov	a,_bp
   08D2 24 03              2347 	add	a,#0x03
   08D4 F8                 2348 	mov	r0,a
   08D5 12s00r00           2349 	lcall	__gptrget
   08D8 F6                 2350 	mov	@r0,a
   08D9 A3                 2351 	inc	dptr
   08DA 12s00r00           2352 	lcall	__gptrget
   08DD 08                 2353 	inc	r0
   08DE F6                 2354 	mov	@r0,a
   08DF A3                 2355 	inc	dptr
   08E0 12s00r00           2356 	lcall	__gptrget
   08E3 08                 2357 	inc	r0
   08E4 F6                 2358 	mov	@r0,a
   08E5 E5*00              2359 	mov	a,_bp
   08E7 24 03              2360 	add	a,#0x03
   08E9 F8                 2361 	mov	r0,a
   08EA E6                 2362 	mov	a,@r0
   08EB 08                 2363 	inc	r0
   08EC 46                 2364 	orl	a,@r0
   08ED 08                 2365 	inc	r0
   08EE 46                 2366 	orl	a,@r0
   08EF 60 42              2367 	jz	00105$
                           2368 ;	../../../core/net/tcpip.c:722: ts->p = l->p;
   08F1 AA*03              2369 	mov	r2,_tcpip_uipcall_ts_1_1
   08F3 AB*04              2370 	mov	r3,(_tcpip_uipcall_ts_1_1 + 1)
   08F5 AF*05              2371 	mov	r7,(_tcpip_uipcall_ts_1_1 + 2)
   08F7 8A 82              2372 	mov	dpl,r2
   08F9 8B 83              2373 	mov	dph,r3
   08FB 8F F0              2374 	mov	b,r7
   08FD E5*00              2375 	mov	a,_bp
   08FF 24 03              2376 	add	a,#0x03
   0901 F8                 2377 	mov	r0,a
   0902 E6                 2378 	mov	a,@r0
   0903 12s00r00           2379 	lcall	__gptrput
   0906 A3                 2380 	inc	dptr
   0907 08                 2381 	inc	r0
   0908 E6                 2382 	mov	a,@r0
   0909 12s00r00           2383 	lcall	__gptrput
   090C A3                 2384 	inc	dptr
   090D 08                 2385 	inc	r0
   090E E6                 2386 	mov	a,@r0
   090F 12s00r00           2387 	lcall	__gptrput
                           2388 ;	../../../core/net/tcpip.c:723: ts->state = NULL;
   0912 74 03              2389 	mov	a,#0x03
   0914 25*03              2390 	add	a,_tcpip_uipcall_ts_1_1
   0916 FA                 2391 	mov	r2,a
   0917 E4                 2392 	clr	a
   0918 35*04              2393 	addc	a,(_tcpip_uipcall_ts_1_1 + 1)
   091A FB                 2394 	mov	r3,a
   091B AF*05              2395 	mov	r7,(_tcpip_uipcall_ts_1_1 + 2)
   091D 8A 82              2396 	mov	dpl,r2
   091F 8B 83              2397 	mov	dph,r3
   0921 8F F0              2398 	mov	b,r7
   0923 E4                 2399 	clr	a
   0924 12s00r00           2400 	lcall	__gptrput
   0927 A3                 2401 	inc	dptr
   0928 E4                 2402 	clr	a
   0929 12s00r00           2403 	lcall	__gptrput
   092C A3                 2404 	inc	dptr
   092D E4                 2405 	clr	a
   092E 12s00r00           2406 	lcall	__gptrput
                           2407 ;	../../../core/net/tcpip.c:724: break;
   0931 80 11              2408 	sjmp	00110$
   0933                    2409 00105$:
                           2410 ;	../../../core/net/tcpip.c:726: ++l;
   0933 74 05              2411 	mov	a,#0x05
   0935 2C                 2412 	add	a,r4
   0936 FC                 2413 	mov	r4,a
   0937 E4                 2414 	clr	a
   0938 3D                 2415 	addc	a,r5
   0939 FD                 2416 	mov	r5,a
                           2417 ;	../../../core/net/tcpip.c:719: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   093A 90s00r7A           2418 	mov	dptr,#_tcpip_uipcall_i_2_4
   093D E0                 2419 	movx	a,@dptr
   093E 24 01              2420 	add	a,#0x01
   0940 F0                 2421 	movx	@dptr,a
   0941 02s08r95           2422 	ljmp	00107$
   0944                    2423 00110$:
                           2424 ;	../../../core/net/tcpip.c:730: start_periodic_tcp_timer();
   0944 12s00r29           2425 	lcall	_start_periodic_tcp_timer
   0947                    2426 00112$:
                           2427 ;	../../../core/net/tcpip.c:735: if(ts->p != NULL) {
   0947 AA*03              2428 	mov	r2,_tcpip_uipcall_ts_1_1
   0949 AB*04              2429 	mov	r3,(_tcpip_uipcall_ts_1_1 + 1)
   094B AC*05              2430 	mov	r4,(_tcpip_uipcall_ts_1_1 + 2)
   094D 8A 82              2431 	mov	dpl,r2
   094F 8B 83              2432 	mov	dph,r3
   0951 8C F0              2433 	mov	b,r4
   0953 12s00r00           2434 	lcall	__gptrget
   0956 FA                 2435 	mov	r2,a
   0957 A3                 2436 	inc	dptr
   0958 12s00r00           2437 	lcall	__gptrget
   095B FB                 2438 	mov	r3,a
   095C A3                 2439 	inc	dptr
   095D 12s00r00           2440 	lcall	__gptrget
   0960 FC                 2441 	mov	r4,a
   0961 EA                 2442 	mov	a,r2
   0962 4B                 2443 	orl	a,r3
   0963 4C                 2444 	orl	a,r4
   0964 70 03              2445 	jnz	00131$
   0966 02s0Ar0C           2446 	ljmp	00115$
   0969                    2447 00131$:
                           2448 ;	../../../core/net/tcpip.c:738: ts->p->thread(&ts->p->pt, tcpip_event, ts->state);
   0969 AA*03              2449 	mov	r2,_tcpip_uipcall_ts_1_1
   096B AB*04              2450 	mov	r3,(_tcpip_uipcall_ts_1_1 + 1)
   096D AC*05              2451 	mov	r4,(_tcpip_uipcall_ts_1_1 + 2)
   096F 8A 82              2452 	mov	dpl,r2
   0971 8B 83              2453 	mov	dph,r3
   0973 8C F0              2454 	mov	b,r4
   0975 12s00r00           2455 	lcall	__gptrget
   0978 FA                 2456 	mov	r2,a
   0979 A3                 2457 	inc	dptr
   097A 12s00r00           2458 	lcall	__gptrget
   097D FB                 2459 	mov	r3,a
   097E A3                 2460 	inc	dptr
   097F 12s00r00           2461 	lcall	__gptrget
   0982 FC                 2462 	mov	r4,a
   0983 74 03              2463 	mov	a,#0x03
   0985 2A                 2464 	add	a,r2
   0986 FA                 2465 	mov	r2,a
   0987 E4                 2466 	clr	a
   0988 3B                 2467 	addc	a,r3
   0989 FB                 2468 	mov	r3,a
   098A 8A 82              2469 	mov	dpl,r2
   098C 8B 83              2470 	mov	dph,r3
   098E 8C F0              2471 	mov	b,r4
   0990 E5*00              2472 	mov	a,_bp
   0992 24 03              2473 	add	a,#0x03
   0994 F8                 2474 	mov	r0,a
   0995 12s00r00           2475 	lcall	__gptrget
   0998 F6                 2476 	mov	@r0,a
   0999 A3                 2477 	inc	dptr
   099A 12s00r00           2478 	lcall	__gptrget
   099D 08                 2479 	inc	r0
   099E F6                 2480 	mov	@r0,a
   099F 74 03              2481 	mov	a,#0x03
   09A1 25*03              2482 	add	a,_tcpip_uipcall_ts_1_1
   09A3 FC                 2483 	mov	r4,a
   09A4 E4                 2484 	clr	a
   09A5 35*04              2485 	addc	a,(_tcpip_uipcall_ts_1_1 + 1)
   09A7 FD                 2486 	mov	r5,a
   09A8 AE*05              2487 	mov	r6,(_tcpip_uipcall_ts_1_1 + 2)
   09AA 8C 82              2488 	mov	dpl,r4
   09AC 8D 83              2489 	mov	dph,r5
   09AE 8E F0              2490 	mov	b,r6
   09B0 12s00r00           2491 	lcall	__gptrget
   09B3 FC                 2492 	mov	r4,a
   09B4 A3                 2493 	inc	dptr
   09B5 12s00r00           2494 	lcall	__gptrget
   09B8 FD                 2495 	mov	r5,a
   09B9 A3                 2496 	inc	dptr
   09BA 12s00r00           2497 	lcall	__gptrget
   09BD FE                 2498 	mov	r6,a
   09BE AF*03              2499 	mov	r7,_tcpip_uipcall_ts_1_1
   09C0 AA*04              2500 	mov	r2,(_tcpip_uipcall_ts_1_1 + 1)
   09C2 AB*05              2501 	mov	r3,(_tcpip_uipcall_ts_1_1 + 2)
   09C4 8F 82              2502 	mov	dpl,r7
   09C6 8A 83              2503 	mov	dph,r2
   09C8 8B F0              2504 	mov	b,r3
   09CA 12s00r00           2505 	lcall	__gptrget
   09CD FF                 2506 	mov	r7,a
   09CE A3                 2507 	inc	dptr
   09CF 12s00r00           2508 	lcall	__gptrget
   09D2 FA                 2509 	mov	r2,a
   09D3 A3                 2510 	inc	dptr
   09D4 12s00r00           2511 	lcall	__gptrget
   09D7 FB                 2512 	mov	r3,a
   09D8 74 05              2513 	mov	a,#0x05
   09DA 2F                 2514 	add	a,r7
   09DB FF                 2515 	mov	r7,a
   09DC E4                 2516 	clr	a
   09DD 3A                 2517 	addc	a,r2
   09DE FA                 2518 	mov	r2,a
   09DF C0 04              2519 	push	ar4
   09E1 C0 05              2520 	push	ar5
   09E3 C0 06              2521 	push	ar6
   09E5 90s00r00           2522 	mov	dptr,#_tcpip_event
   09E8 E0                 2523 	movx	a,@dptr
   09E9 C0 E0              2524 	push	acc
   09EB 74r06              2525 	mov	a,#00132$
   09ED C0 E0              2526 	push	acc
   09EF 74s0A              2527 	mov	a,#(00132$ >> 8)
   09F1 C0 E0              2528 	push	acc
   09F3 E5*00              2529 	mov	a,_bp
   09F5 24 03              2530 	add	a,#0x03
   09F7 F8                 2531 	mov	r0,a
   09F8 E6                 2532 	mov	a,@r0
   09F9 C0 E0              2533 	push	acc
   09FB 08                 2534 	inc	r0
   09FC E6                 2535 	mov	a,@r0
   09FD C0 E0              2536 	push	acc
   09FF 8F 82              2537 	mov	dpl,r7
   0A01 8A 83              2538 	mov	dph,r2
   0A03 8B F0              2539 	mov	b,r3
   0A05 22                 2540 	ret
   0A06                    2541 00132$:
   0A06 E5 81              2542 	mov	a,sp
   0A08 24 FC              2543 	add	a,#0xfc
   0A0A F5 81              2544 	mov	sp,a
   0A0C                    2545 00115$:
   0A0C 85*00 81           2546 	mov	sp,_bp
   0A0F D0*00              2547 	pop	_bp
   0A11 22                 2548 	ret
                           2549 ;------------------------------------------------------------
                           2550 ;Allocation info for local variables in function 'process_thread_tcpip_process'
                           2551 ;------------------------------------------------------------
                           2552 ;ev                        Allocated to stack - offset -3
                           2553 ;data                      Allocated to stack - offset -6
                           2554 ;process_pt                Allocated to registers r2 r3 r4 
                           2555 ;PT_YIELD_FLAG             Allocated to registers r5 
                           2556 ;i                         Allocated with name '_process_thread_tcpip_process_i_4_4'
                           2557 ;------------------------------------------------------------
                           2558 ;	../../../core/net/tcpip.c:745: PROCESS_THREAD(tcpip_process, ev, data)
                           2559 ;	-----------------------------------------
                           2560 ;	 function process_thread_tcpip_process
                           2561 ;	-----------------------------------------
   0A12                    2562 _process_thread_tcpip_process:
   0A12 C0*00              2563 	push	_bp
   0A14 85 81*00           2564 	mov	_bp,sp
                           2565 ;	../../../core/net/tcpip.c:747: PROCESS_BEGIN();
   0A17 AA 82              2566 	mov	r2,dpl
   0A19 AB 83              2567 	mov	r3,dph
   0A1B AC F0              2568 	mov	r4,b
   0A1D 7D 01              2569 	mov	r5,#0x01
   0A1F 12s00r00           2570 	lcall	__gptrget
   0A22 FE                 2571 	mov	r6,a
   0A23 A3                 2572 	inc	dptr
   0A24 12s00r00           2573 	lcall	__gptrget
   0A27 FF                 2574 	mov	r7,a
   0A28 BE 00 05           2575 	cjne	r6,#0x00,00124$
   0A2B BF 00 02           2576 	cjne	r7,#0x00,00124$
   0A2E 80 0C              2577 	sjmp	00101$
   0A30                    2578 00124$:
   0A30 BE 08 06           2579 	cjne	r6,#0x08,00125$
   0A33 BF 03 03           2580 	cjne	r7,#0x03,00125$
   0A36 02s0ArC6           2581 	ljmp	00102$
   0A39                    2582 00125$:
   0A39 02s0ArFC           2583 	ljmp	00111$
   0A3C                    2584 00101$:
                           2585 ;	../../../core/net/tcpip.c:753: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   0A3C 90s00r7B           2586 	mov	dptr,#_process_thread_tcpip_process_i_4_4
   0A3F E4                 2587 	clr	a
   0A40 F0                 2588 	movx	@dptr,a
   0A41                    2589 00112$:
   0A41 90s00r7B           2590 	mov	dptr,#_process_thread_tcpip_process_i_4_4
   0A44 E0                 2591 	movx	a,@dptr
   0A45 FE                 2592 	mov	r6,a
   0A46 BE 14 00           2593 	cjne	r6,#0x14,00126$
   0A49                    2594 00126$:
   0A49 50 1A              2595 	jnc	00115$
                           2596 ;	../../../core/net/tcpip.c:754: s.listenports[i].port = 0;
   0A4B EE                 2597 	mov	a,r6
   0A4C 75 F0 05           2598 	mov	b,#0x05
   0A4F A4                 2599 	mul	ab
   0A50 24r0B              2600 	add	a,#_s
   0A52 F5 82              2601 	mov	dpl,a
   0A54 E4                 2602 	clr	a
   0A55 34s00              2603 	addc	a,#(_s >> 8)
   0A57 F5 83              2604 	mov	dph,a
   0A59 E4                 2605 	clr	a
   0A5A F0                 2606 	movx	@dptr,a
   0A5B A3                 2607 	inc	dptr
   0A5C F0                 2608 	movx	@dptr,a
                           2609 ;	../../../core/net/tcpip.c:753: for(i = 0; i < UIP_LISTENPORTS; ++i) {
   0A5D 90s00r7B           2610 	mov	dptr,#_process_thread_tcpip_process_i_4_4
   0A60 EE                 2611 	mov	a,r6
   0A61 04                 2612 	inc	a
   0A62 F0                 2613 	movx	@dptr,a
   0A63 80 DC              2614 	sjmp	00112$
   0A65                    2615 00115$:
                           2616 ;	../../../core/net/tcpip.c:756: s.p = PROCESS_CURRENT();
   0A65 C0 02              2617 	push	ar2
   0A67 C0 03              2618 	push	ar3
   0A69 C0 04              2619 	push	ar4
   0A6B 90s00r00           2620 	mov	dptr,#_process_current
   0A6E E0                 2621 	movx	a,@dptr
   0A6F FE                 2622 	mov	r6,a
   0A70 A3                 2623 	inc	dptr
   0A71 E0                 2624 	movx	a,@dptr
   0A72 FF                 2625 	mov	r7,a
   0A73 A3                 2626 	inc	dptr
   0A74 E0                 2627 	movx	a,@dptr
   0A75 FA                 2628 	mov	r2,a
   0A76 90s00r6F           2629 	mov	dptr,#(_s + 0x0064)
   0A79 EE                 2630 	mov	a,r6
   0A7A F0                 2631 	movx	@dptr,a
   0A7B A3                 2632 	inc	dptr
   0A7C EF                 2633 	mov	a,r7
   0A7D F0                 2634 	movx	@dptr,a
   0A7E A3                 2635 	inc	dptr
   0A7F EA                 2636 	mov	a,r2
   0A80 F0                 2637 	movx	@dptr,a
                           2638 ;	../../../core/net/tcpip.c:760: tcpip_event = process_alloc_event();
   0A81 C0 02              2639 	push	ar2
   0A83 C0 03              2640 	push	ar3
   0A85 C0 04              2641 	push	ar4
   0A87 12s00r00           2642 	lcall	_process_alloc_event
   0A8A E5 82              2643 	mov	a,dpl
   0A8C 90s00r00           2644 	mov	dptr,#_tcpip_event
   0A8F F0                 2645 	movx	@dptr,a
                           2646 ;	../../../core/net/tcpip.c:764: etimer_set(&periodic, CLOCK_SECOND / 2);
   0A90 74 40              2647 	mov	a,#0x40
   0A92 C0 E0              2648 	push	acc
   0A94 E4                 2649 	clr	a
   0A95 C0 E0              2650 	push	acc
   0A97 90s00r01           2651 	mov	dptr,#_periodic
   0A9A 75 F0 00           2652 	mov	b,#0x00
   0A9D 12s00r00           2653 	lcall	_etimer_set
   0AA0 15 81              2654 	dec	sp
   0AA2 15 81              2655 	dec	sp
                           2656 ;	../../../core/net/tcpip.c:766: uip_init();
   0AA4 12s00r00           2657 	lcall	_uip_init
   0AA7 D0 04              2658 	pop	ar4
   0AA9 D0 03              2659 	pop	ar3
   0AAB D0 02              2660 	pop	ar2
                           2661 ;	../../../core/net/tcpip.c:780: PROCESS_END();
   0AAD D0 04              2662 	pop	ar4
   0AAF D0 03              2663 	pop	ar3
   0AB1 D0 02              2664 	pop	ar2
                           2665 ;	../../../core/net/tcpip.c:775: while(1) {
   0AB3                    2666 00109$:
                           2667 ;	../../../core/net/tcpip.c:776: PROCESS_YIELD();
   0AB3 7D 00              2668 	mov	r5,#0x00
   0AB5 8A 82              2669 	mov	dpl,r2
   0AB7 8B 83              2670 	mov	dph,r3
   0AB9 8C F0              2671 	mov	b,r4
   0ABB 74 08              2672 	mov	a,#0x08
   0ABD 12s00r00           2673 	lcall	__gptrput
   0AC0 A3                 2674 	inc	dptr
   0AC1 74 03              2675 	mov	a,#0x03
   0AC3 12s00r00           2676 	lcall	__gptrput
   0AC6                    2677 00102$:
   0AC6 ED                 2678 	mov	a,r5
   0AC7 70 05              2679 	jnz	00106$
   0AC9 75 82 01           2680 	mov	dpl,#0x01
   0ACC 80 40              2681 	sjmp	00116$
   0ACE                    2682 00106$:
                           2683 ;	../../../core/net/tcpip.c:777: eventhandler(ev, data);
   0ACE C0 02              2684 	push	ar2
   0AD0 C0 03              2685 	push	ar3
   0AD2 C0 04              2686 	push	ar4
   0AD4 E5*00              2687 	mov	a,_bp
   0AD6 24 FA              2688 	add	a,#0xfa
   0AD8 F8                 2689 	mov	r0,a
   0AD9 E6                 2690 	mov	a,@r0
   0ADA C0 E0              2691 	push	acc
   0ADC 08                 2692 	inc	r0
   0ADD E6                 2693 	mov	a,@r0
   0ADE C0 E0              2694 	push	acc
   0AE0 08                 2695 	inc	r0
   0AE1 E6                 2696 	mov	a,@r0
   0AE2 C0 E0              2697 	push	acc
   0AE4 E5*00              2698 	mov	a,_bp
   0AE6 24 FD              2699 	add	a,#0xfd
   0AE8 F8                 2700 	mov	r0,a
   0AE9 86 82              2701 	mov	dpl,@r0
   0AEB 12s04rF4           2702 	lcall	_eventhandler
   0AEE 15 81              2703 	dec	sp
   0AF0 15 81              2704 	dec	sp
   0AF2 15 81              2705 	dec	sp
   0AF4 D0 04              2706 	pop	ar4
   0AF6 D0 03              2707 	pop	ar3
   0AF8 D0 02              2708 	pop	ar2
                           2709 ;	../../../core/net/tcpip.c:780: PROCESS_END();
   0AFA 80 B7              2710 	sjmp	00109$
   0AFC                    2711 00111$:
   0AFC 8A 82              2712 	mov	dpl,r2
   0AFE 8B 83              2713 	mov	dph,r3
   0B00 8C F0              2714 	mov	b,r4
   0B02 E4                 2715 	clr	a
   0B03 12s00r00           2716 	lcall	__gptrput
   0B06 A3                 2717 	inc	dptr
   0B07 E4                 2718 	clr	a
   0B08 12s00r00           2719 	lcall	__gptrput
   0B0B 75 82 03           2720 	mov	dpl,#0x03
   0B0E                    2721 00116$:
   0B0E D0*00              2722 	pop	_bp
   0B10 22                 2723 	ret
                           2724 	.area CSEG    (CODE)
                           2725 	.area CONST   (CODE)
                           2726 	.area XINIT   (CODE)
   0000                    2727 __xinit__tcpip_process:
                           2728 ; generic printIvalPtr
   0000 00 00 00           2729 	.byte #0x00,#0x00,#0x00
   0003r12s0A              2730 	.byte _process_thread_tcpip_process,(_process_thread_tcpip_process >> 8)
   0005 00 00              2731 	.byte #0x00,#0x00	; 0
   0007 00                 2732 	.db #0x00	; 0
   0008 00                 2733 	.db #0x00	; 0
                           2734 	.area CABS    (ABS,CODE)
