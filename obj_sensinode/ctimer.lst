                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:26:34 2018
                              5 ;--------------------------------------------------------
                              6 	.module ctimer
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _IRCON2_P2IF
                             13 	.globl _IRCON2_UTX0IF
                             14 	.globl _IRCON2_UTX1IF
                             15 	.globl _IRCON2_P1IF
                             16 	.globl _IRCON2_WDTIF
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _IRCON_DMAIF
                             26 	.globl _IRCON_T1IF
                             27 	.globl _IRCON_T2IF
                             28 	.globl _IRCON_T3IF
                             29 	.globl _IRCON_T4IF
                             30 	.globl _IRCON_P0IF
                             31 	.globl _IRCON_STIF
                             32 	.globl _IEN1_DMAIE
                             33 	.globl _IEN1_T1IE
                             34 	.globl _IEN1_T2IE
                             35 	.globl _IEN1_T3IE
                             36 	.globl _IEN1_T4IE
                             37 	.globl _IEN1_P0IE
                             38 	.globl _IEN0_RFERRIE
                             39 	.globl _IEN0_ADCIE
                             40 	.globl _IEN0_URX0IE
                             41 	.globl _IEN0_URX1IE
                             42 	.globl _IEN0_ENCIE
                             43 	.globl _IEN0_STIE
                             44 	.globl _IEN0_EA
                             45 	.globl _EA
                             46 	.globl _P2_4
                             47 	.globl _P2_3
                             48 	.globl _P2_2
                             49 	.globl _P2_1
                             50 	.globl _P2_0
                             51 	.globl _S0CON_ENCIF_0
                             52 	.globl _S0CON_ENCIF_1
                             53 	.globl _P1_7
                             54 	.globl _P1_6
                             55 	.globl _P1_5
                             56 	.globl _P1_4
                             57 	.globl _P1_3
                             58 	.globl _P1_2
                             59 	.globl _P1_1
                             60 	.globl _P1_0
                             61 	.globl _TCON_IT0
                             62 	.globl _TCON_RFERRIF
                             63 	.globl _TCON_IT1
                             64 	.globl _TCON_URX0IF
                             65 	.globl _TCON_ADCIF
                             66 	.globl _TCON_URX1IF
                             67 	.globl _P0_0
                             68 	.globl _P0_1
                             69 	.globl _P0_2
                             70 	.globl _P0_3
                             71 	.globl _P0_4
                             72 	.globl _P0_5
                             73 	.globl _P0_6
                             74 	.globl _P0_7
                             75 	.globl _P2DIR
                             76 	.globl _P1DIR
                             77 	.globl _P0DIR
                             78 	.globl _U1GCR
                             79 	.globl _U1UCR
                             80 	.globl _U1BAUD
                             81 	.globl _U1BUF
                             82 	.globl _U1CSR
                             83 	.globl _P2INP
                             84 	.globl _P1INP
                             85 	.globl _P2SEL
                             86 	.globl _P1SEL
                             87 	.globl _P0SEL
                             88 	.globl _ADCCFG
                             89 	.globl _PERCFG
                             90 	.globl _B
                             91 	.globl _T4CC1
                             92 	.globl _T4CCTL1
                             93 	.globl _T4CC0
                             94 	.globl _T4CCTL0
                             95 	.globl _T4CTL
                             96 	.globl _T4CNT
                             97 	.globl _RFIF
                             98 	.globl _IRCON2
                             99 	.globl _T1CCTL2
                            100 	.globl _T1CCTL1
                            101 	.globl _T1CCTL0
                            102 	.globl _T1CTL
                            103 	.globl _T1CNTH
                            104 	.globl _T1CNTL
                            105 	.globl _RFST
                            106 	.globl _ACC
                            107 	.globl _T1CC2H
                            108 	.globl _T1CC2L
                            109 	.globl _T1CC1H
                            110 	.globl _T1CC1L
                            111 	.globl _T1CC0H
                            112 	.globl _T1CC0L
                            113 	.globl _RFD
                            114 	.globl _TIMIF
                            115 	.globl _DMAREQ
                            116 	.globl _DMAARM
                            117 	.globl _DMA0CFGH
                            118 	.globl _DMA0CFGL
                            119 	.globl _DMA1CFGH
                            120 	.globl _DMA1CFGL
                            121 	.globl _DMAIRQ
                            122 	.globl _PSW
                            123 	.globl _T3CC1
                            124 	.globl _T3CCTL1
                            125 	.globl _T3CC0
                            126 	.globl _T3CCTL0
                            127 	.globl _T3CTL
                            128 	.globl _T3CNT
                            129 	.globl _WDCTL
                            130 	.globl _T2CON
                            131 	.globl _MEMCTR
                            132 	.globl _CLKCON
                            133 	.globl _U0GCR
                            134 	.globl _U0UCR
                            135 	.globl _T2CNF
                            136 	.globl _U0BAUD
                            137 	.globl _U0BUF
                            138 	.globl _IRCON
                            139 	.globl _SLEEP
                            140 	.globl _RNDH
                            141 	.globl _RNDL
                            142 	.globl _ADCH
                            143 	.globl _ADCL
                            144 	.globl _IP1
                            145 	.globl _IEN1
                            146 	.globl _RCCTL
                            147 	.globl _ADCCON3
                            148 	.globl _ADCCON2
                            149 	.globl _ADCCON1
                            150 	.globl _ENCCS
                            151 	.globl _ENCDO
                            152 	.globl _ENCDI
                            153 	.globl _FWDATA
                            154 	.globl _FCTL
                            155 	.globl _FADDRH
                            156 	.globl _FADDRL
                            157 	.globl _FWT
                            158 	.globl _IP0
                            159 	.globl _IEN0
                            160 	.globl _IE
                            161 	.globl _T2THD
                            162 	.globl _T2TLD
                            163 	.globl _T2CAPHPH
                            164 	.globl _T2CAPLPL
                            165 	.globl _T2OF2
                            166 	.globl _T2OF1
                            167 	.globl _T2OF0
                            168 	.globl _P2
                            169 	.globl _PSBANK
                            170 	.globl _FMAP
                            171 	.globl _T2PEROF2
                            172 	.globl _T2PEROF1
                            173 	.globl _T2PEROF0
                            174 	.globl _S1CON
                            175 	.globl _IEN2
                            176 	.globl _HSRC
                            177 	.globl _S0CON
                            178 	.globl _ST2
                            179 	.globl _ST1
                            180 	.globl _ST0
                            181 	.globl _T2CMP
                            182 	.globl __XPAGE
                            183 	.globl _DPS
                            184 	.globl _RFIM
                            185 	.globl _P1
                            186 	.globl _P0INP
                            187 	.globl _P1IEN
                            188 	.globl _PICTL
                            189 	.globl _P2IFG
                            190 	.globl _P1IFG
                            191 	.globl _P0IFG
                            192 	.globl _TCON
                            193 	.globl _PCON
                            194 	.globl _U0CSR
                            195 	.globl _DPH1
                            196 	.globl _DPL1
                            197 	.globl _DPH0
                            198 	.globl _DPL0
                            199 	.globl _SP
                            200 	.globl _P0
                            201 	.globl _ctimer_process
                            202 	.globl _ADC_SHADOW
                            203 	.globl _U1BUF_SHADOW
                            204 	.globl _RFD_SHADOW
                            205 	.globl _U0BUF_SHADOW
                            206 	.globl _RFSTATUS
                            207 	.globl _CHIPID
                            208 	.globl _CHVER
                            209 	.globl _FSMTC1
                            210 	.globl _RXFIFOCNT
                            211 	.globl _IOCFG3
                            212 	.globl _IOCFG2
                            213 	.globl _IOCFG1
                            214 	.globl _IOCFG0
                            215 	.globl _SHORTADDRL
                            216 	.globl _SHORTADDRH
                            217 	.globl _PANIDL
                            218 	.globl _PANIDH
                            219 	.globl _IEEE_ADDR7
                            220 	.globl _IEEE_ADDR6
                            221 	.globl _IEEE_ADDR5
                            222 	.globl _IEEE_ADDR4
                            223 	.globl _IEEE_ADDR3
                            224 	.globl _IEEE_ADDR2
                            225 	.globl _IEEE_ADDR1
                            226 	.globl _IEEE_ADDR0
                            227 	.globl _DACTSTL
                            228 	.globl _DACTSTH
                            229 	.globl _ADCTSTL
                            230 	.globl _ADCTSTH
                            231 	.globl _FSMSTATE
                            232 	.globl _AGCCTRLL
                            233 	.globl _AGCCTRLH
                            234 	.globl _MANORL
                            235 	.globl _MANORH
                            236 	.globl _MANANDL
                            237 	.globl _MANANDH
                            238 	.globl _FSMTCL
                            239 	.globl _FSMTCH
                            240 	.globl _RFPWR
                            241 	.globl _CSPT
                            242 	.globl _CSPCTRL
                            243 	.globl _CSPZ
                            244 	.globl _CSPY
                            245 	.globl _CSPX
                            246 	.globl _FSCTRLL
                            247 	.globl _FSCTRLH
                            248 	.globl _RXCTRL1L
                            249 	.globl _RXCTRL1H
                            250 	.globl _RXCTRL0L
                            251 	.globl _RXCTRL0H
                            252 	.globl _TXCTRLL
                            253 	.globl _TXCTRLH
                            254 	.globl _SYNCWORDL
                            255 	.globl _SYNCWORDH
                            256 	.globl _RSSIL
                            257 	.globl _RSSIH
                            258 	.globl _MDMCTRL1L
                            259 	.globl _MDMCTRL1H
                            260 	.globl _MDMCTRL0L
                            261 	.globl _MDMCTRL0H
                            262 	.globl _ctimer_init
                            263 	.globl _ctimer_set
                            264 	.globl _ctimer_reset
                            265 	.globl _ctimer_restart
                            266 	.globl _ctimer_stop
                            267 	.globl _ctimer_expired
                            268 ;--------------------------------------------------------
                            269 ; special function registers
                            270 ;--------------------------------------------------------
                            271 	.area RSEG    (ABS,DATA)
   0000                     272 	.org 0x0000
                    0080    273 _P0	=	0x0080
                    0081    274 _SP	=	0x0081
                    0082    275 _DPL0	=	0x0082
                    0083    276 _DPH0	=	0x0083
                    0084    277 _DPL1	=	0x0084
                    0085    278 _DPH1	=	0x0085
                    0086    279 _U0CSR	=	0x0086
                    0087    280 _PCON	=	0x0087
                    0088    281 _TCON	=	0x0088
                    0089    282 _P0IFG	=	0x0089
                    008A    283 _P1IFG	=	0x008a
                    008B    284 _P2IFG	=	0x008b
                    008C    285 _PICTL	=	0x008c
                    008D    286 _P1IEN	=	0x008d
                    008F    287 _P0INP	=	0x008f
                    0090    288 _P1	=	0x0090
                    0091    289 _RFIM	=	0x0091
                    0092    290 _DPS	=	0x0092
                    0093    291 __XPAGE	=	0x0093
                    0094    292 _T2CMP	=	0x0094
                    0095    293 _ST0	=	0x0095
                    0096    294 _ST1	=	0x0096
                    0097    295 _ST2	=	0x0097
                    0098    296 _S0CON	=	0x0098
                    0099    297 _HSRC	=	0x0099
                    009A    298 _IEN2	=	0x009a
                    009B    299 _S1CON	=	0x009b
                    009C    300 _T2PEROF0	=	0x009c
                    009D    301 _T2PEROF1	=	0x009d
                    009E    302 _T2PEROF2	=	0x009e
                    009F    303 _FMAP	=	0x009f
                    009F    304 _PSBANK	=	0x009f
                    00A0    305 _P2	=	0x00a0
                    00A1    306 _T2OF0	=	0x00a1
                    00A2    307 _T2OF1	=	0x00a2
                    00A3    308 _T2OF2	=	0x00a3
                    00A4    309 _T2CAPLPL	=	0x00a4
                    00A5    310 _T2CAPHPH	=	0x00a5
                    00A6    311 _T2TLD	=	0x00a6
                    00A7    312 _T2THD	=	0x00a7
                    00A8    313 _IE	=	0x00a8
                    00A8    314 _IEN0	=	0x00a8
                    00A9    315 _IP0	=	0x00a9
                    00AB    316 _FWT	=	0x00ab
                    00AC    317 _FADDRL	=	0x00ac
                    00AD    318 _FADDRH	=	0x00ad
                    00AE    319 _FCTL	=	0x00ae
                    00AF    320 _FWDATA	=	0x00af
                    00B1    321 _ENCDI	=	0x00b1
                    00B2    322 _ENCDO	=	0x00b2
                    00B3    323 _ENCCS	=	0x00b3
                    00B4    324 _ADCCON1	=	0x00b4
                    00B5    325 _ADCCON2	=	0x00b5
                    00B6    326 _ADCCON3	=	0x00b6
                    00B7    327 _RCCTL	=	0x00b7
                    00B8    328 _IEN1	=	0x00b8
                    00B9    329 _IP1	=	0x00b9
                    00BA    330 _ADCL	=	0x00ba
                    00BB    331 _ADCH	=	0x00bb
                    00BC    332 _RNDL	=	0x00bc
                    00BD    333 _RNDH	=	0x00bd
                    00BE    334 _SLEEP	=	0x00be
                    00C0    335 _IRCON	=	0x00c0
                    00C1    336 _U0BUF	=	0x00c1
                    00C2    337 _U0BAUD	=	0x00c2
                    00C3    338 _T2CNF	=	0x00c3
                    00C4    339 _U0UCR	=	0x00c4
                    00C5    340 _U0GCR	=	0x00c5
                    00C6    341 _CLKCON	=	0x00c6
                    00C7    342 _MEMCTR	=	0x00c7
                    00C8    343 _T2CON	=	0x00c8
                    00C9    344 _WDCTL	=	0x00c9
                    00CA    345 _T3CNT	=	0x00ca
                    00CB    346 _T3CTL	=	0x00cb
                    00CC    347 _T3CCTL0	=	0x00cc
                    00CD    348 _T3CC0	=	0x00cd
                    00CE    349 _T3CCTL1	=	0x00ce
                    00CF    350 _T3CC1	=	0x00cf
                    00D0    351 _PSW	=	0x00d0
                    00D1    352 _DMAIRQ	=	0x00d1
                    00D2    353 _DMA1CFGL	=	0x00d2
                    00D3    354 _DMA1CFGH	=	0x00d3
                    00D4    355 _DMA0CFGL	=	0x00d4
                    00D5    356 _DMA0CFGH	=	0x00d5
                    00D6    357 _DMAARM	=	0x00d6
                    00D7    358 _DMAREQ	=	0x00d7
                    00D8    359 _TIMIF	=	0x00d8
                    00D9    360 _RFD	=	0x00d9
                    00DA    361 _T1CC0L	=	0x00da
                    00DB    362 _T1CC0H	=	0x00db
                    00DC    363 _T1CC1L	=	0x00dc
                    00DD    364 _T1CC1H	=	0x00dd
                    00DE    365 _T1CC2L	=	0x00de
                    00DF    366 _T1CC2H	=	0x00df
                    00E0    367 _ACC	=	0x00e0
                    00E1    368 _RFST	=	0x00e1
                    00E2    369 _T1CNTL	=	0x00e2
                    00E3    370 _T1CNTH	=	0x00e3
                    00E4    371 _T1CTL	=	0x00e4
                    00E5    372 _T1CCTL0	=	0x00e5
                    00E6    373 _T1CCTL1	=	0x00e6
                    00E7    374 _T1CCTL2	=	0x00e7
                    00E8    375 _IRCON2	=	0x00e8
                    00E9    376 _RFIF	=	0x00e9
                    00EA    377 _T4CNT	=	0x00ea
                    00EB    378 _T4CTL	=	0x00eb
                    00EC    379 _T4CCTL0	=	0x00ec
                    00ED    380 _T4CC0	=	0x00ed
                    00EE    381 _T4CCTL1	=	0x00ee
                    00EF    382 _T4CC1	=	0x00ef
                    00F0    383 _B	=	0x00f0
                    00F1    384 _PERCFG	=	0x00f1
                    00F2    385 _ADCCFG	=	0x00f2
                    00F3    386 _P0SEL	=	0x00f3
                    00F4    387 _P1SEL	=	0x00f4
                    00F5    388 _P2SEL	=	0x00f5
                    00F6    389 _P1INP	=	0x00f6
                    00F7    390 _P2INP	=	0x00f7
                    00F8    391 _U1CSR	=	0x00f8
                    00F9    392 _U1BUF	=	0x00f9
                    00FA    393 _U1BAUD	=	0x00fa
                    00FB    394 _U1UCR	=	0x00fb
                    00FC    395 _U1GCR	=	0x00fc
                    00FD    396 _P0DIR	=	0x00fd
                    00FE    397 _P1DIR	=	0x00fe
                    00FF    398 _P2DIR	=	0x00ff
                            399 ;--------------------------------------------------------
                            400 ; special function bits
                            401 ;--------------------------------------------------------
                            402 	.area RSEG    (ABS,DATA)
   0000                     403 	.org 0x0000
                    0087    404 _P0_7	=	0x0087
                    0086    405 _P0_6	=	0x0086
                    0085    406 _P0_5	=	0x0085
                    0084    407 _P0_4	=	0x0084
                    0083    408 _P0_3	=	0x0083
                    0082    409 _P0_2	=	0x0082
                    0081    410 _P0_1	=	0x0081
                    0080    411 _P0_0	=	0x0080
                    008F    412 _TCON_URX1IF	=	0x008f
                    008D    413 _TCON_ADCIF	=	0x008d
                    008B    414 _TCON_URX0IF	=	0x008b
                    008A    415 _TCON_IT1	=	0x008a
                    0089    416 _TCON_RFERRIF	=	0x0089
                    0088    417 _TCON_IT0	=	0x0088
                    0090    418 _P1_0	=	0x0090
                    0091    419 _P1_1	=	0x0091
                    0092    420 _P1_2	=	0x0092
                    0093    421 _P1_3	=	0x0093
                    0094    422 _P1_4	=	0x0094
                    0095    423 _P1_5	=	0x0095
                    0096    424 _P1_6	=	0x0096
                    0097    425 _P1_7	=	0x0097
                    0099    426 _S0CON_ENCIF_1	=	0x0099
                    0098    427 _S0CON_ENCIF_0	=	0x0098
                    00A0    428 _P2_0	=	0x00a0
                    00A1    429 _P2_1	=	0x00a1
                    00A2    430 _P2_2	=	0x00a2
                    00A3    431 _P2_3	=	0x00a3
                    00A4    432 _P2_4	=	0x00a4
                    00AF    433 _EA	=	0x00af
                    00AF    434 _IEN0_EA	=	0x00af
                    00AD    435 _IEN0_STIE	=	0x00ad
                    00AC    436 _IEN0_ENCIE	=	0x00ac
                    00AB    437 _IEN0_URX1IE	=	0x00ab
                    00AA    438 _IEN0_URX0IE	=	0x00aa
                    00A9    439 _IEN0_ADCIE	=	0x00a9
                    00A8    440 _IEN0_RFERRIE	=	0x00a8
                    00BD    441 _IEN1_P0IE	=	0x00bd
                    00BC    442 _IEN1_T4IE	=	0x00bc
                    00BB    443 _IEN1_T3IE	=	0x00bb
                    00BA    444 _IEN1_T2IE	=	0x00ba
                    00B9    445 _IEN1_T1IE	=	0x00b9
                    00B8    446 _IEN1_DMAIE	=	0x00b8
                    00C7    447 _IRCON_STIF	=	0x00c7
                    00C5    448 _IRCON_P0IF	=	0x00c5
                    00C4    449 _IRCON_T4IF	=	0x00c4
                    00C3    450 _IRCON_T3IF	=	0x00c3
                    00C2    451 _IRCON_T2IF	=	0x00c2
                    00C1    452 _IRCON_T1IF	=	0x00c1
                    00C0    453 _IRCON_DMAIF	=	0x00c0
                    00D0    454 _P	=	0x00d0
                    00D1    455 _F1	=	0x00d1
                    00D2    456 _OV	=	0x00d2
                    00D3    457 _RS0	=	0x00d3
                    00D4    458 _RS1	=	0x00d4
                    00D5    459 _F0	=	0x00d5
                    00D6    460 _AC	=	0x00d6
                    00D7    461 _CY	=	0x00d7
                    00EC    462 _IRCON2_WDTIF	=	0x00ec
                    00EB    463 _IRCON2_P1IF	=	0x00eb
                    00EA    464 _IRCON2_UTX1IF	=	0x00ea
                    00E9    465 _IRCON2_UTX0IF	=	0x00e9
                    00E8    466 _IRCON2_P2IF	=	0x00e8
                            467 ;--------------------------------------------------------
                            468 ; overlayable register banks
                            469 ;--------------------------------------------------------
                            470 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     471 	.ds 8
                            472 ;--------------------------------------------------------
                            473 ; internal ram data
                            474 ;--------------------------------------------------------
                            475 	.area DSEG    (DATA)
                            476 ;--------------------------------------------------------
                            477 ; overlayable items in internal ram 
                            478 ;--------------------------------------------------------
                            479 	.area OSEG    (OVR,DATA)
                            480 ;--------------------------------------------------------
                            481 ; indirectly addressable internal ram data
                            482 ;--------------------------------------------------------
                            483 	.area ISEG    (DATA)
                            484 ;--------------------------------------------------------
                            485 ; absolute internal ram data
                            486 ;--------------------------------------------------------
                            487 	.area IABS    (ABS,DATA)
                            488 	.area IABS    (ABS,DATA)
                            489 ;--------------------------------------------------------
                            490 ; bit data
                            491 ;--------------------------------------------------------
                            492 	.area BSEG    (BIT)
                            493 ;--------------------------------------------------------
                            494 ; paged external ram data
                            495 ;--------------------------------------------------------
                            496 	.area PSEG    (PAG,XDATA)
                            497 ;--------------------------------------------------------
                            498 ; external ram data
                            499 ;--------------------------------------------------------
                            500 	.area XSEG    (XDATA)
                    DF02    501 _MDMCTRL0H	=	0xdf02
                    DF03    502 _MDMCTRL0L	=	0xdf03
                    DF04    503 _MDMCTRL1H	=	0xdf04
                    DF05    504 _MDMCTRL1L	=	0xdf05
                    DF06    505 _RSSIH	=	0xdf06
                    DF07    506 _RSSIL	=	0xdf07
                    DF08    507 _SYNCWORDH	=	0xdf08
                    DF09    508 _SYNCWORDL	=	0xdf09
                    DF0A    509 _TXCTRLH	=	0xdf0a
                    DF0B    510 _TXCTRLL	=	0xdf0b
                    DF0C    511 _RXCTRL0H	=	0xdf0c
                    DF0D    512 _RXCTRL0L	=	0xdf0d
                    DF0E    513 _RXCTRL1H	=	0xdf0e
                    DF0F    514 _RXCTRL1L	=	0xdf0f
                    DF10    515 _FSCTRLH	=	0xdf10
                    DF11    516 _FSCTRLL	=	0xdf11
                    DF12    517 _CSPX	=	0xdf12
                    DF13    518 _CSPY	=	0xdf13
                    DF14    519 _CSPZ	=	0xdf14
                    DF15    520 _CSPCTRL	=	0xdf15
                    DF16    521 _CSPT	=	0xdf16
                    DF17    522 _RFPWR	=	0xdf17
                    DF20    523 _FSMTCH	=	0xdf20
                    DF21    524 _FSMTCL	=	0xdf21
                    DF22    525 _MANANDH	=	0xdf22
                    DF23    526 _MANANDL	=	0xdf23
                    DF24    527 _MANORH	=	0xdf24
                    DF25    528 _MANORL	=	0xdf25
                    DF26    529 _AGCCTRLH	=	0xdf26
                    DF27    530 _AGCCTRLL	=	0xdf27
                    DF39    531 _FSMSTATE	=	0xdf39
                    DF3A    532 _ADCTSTH	=	0xdf3a
                    DF3B    533 _ADCTSTL	=	0xdf3b
                    DF3C    534 _DACTSTH	=	0xdf3c
                    DF3D    535 _DACTSTL	=	0xdf3d
                    DF43    536 _IEEE_ADDR0	=	0xdf43
                    DF44    537 _IEEE_ADDR1	=	0xdf44
                    DF45    538 _IEEE_ADDR2	=	0xdf45
                    DF46    539 _IEEE_ADDR3	=	0xdf46
                    DF47    540 _IEEE_ADDR4	=	0xdf47
                    DF48    541 _IEEE_ADDR5	=	0xdf48
                    DF49    542 _IEEE_ADDR6	=	0xdf49
                    DF4A    543 _IEEE_ADDR7	=	0xdf4a
                    DF4B    544 _PANIDH	=	0xdf4b
                    DF4C    545 _PANIDL	=	0xdf4c
                    DF4D    546 _SHORTADDRH	=	0xdf4d
                    DF4E    547 _SHORTADDRL	=	0xdf4e
                    DF4F    548 _IOCFG0	=	0xdf4f
                    DF50    549 _IOCFG1	=	0xdf50
                    DF51    550 _IOCFG2	=	0xdf51
                    DF52    551 _IOCFG3	=	0xdf52
                    DF53    552 _RXFIFOCNT	=	0xdf53
                    DF54    553 _FSMTC1	=	0xdf54
                    DF60    554 _CHVER	=	0xdf60
                    DF61    555 _CHIPID	=	0xdf61
                    DF62    556 _RFSTATUS	=	0xdf62
                    DFC1    557 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    558 _RFD_SHADOW	=	0xdfd9
                    DFF9    559 _U1BUF_SHADOW	=	0xdff9
                    DFBA    560 _ADC_SHADOW	=	0xdfba
   0000                     561 _initialized:
   0000                     562 	.ds 1
                            563 ;--------------------------------------------------------
                            564 ; absolute external ram data
                            565 ;--------------------------------------------------------
                            566 	.area XABS    (ABS,XDATA)
                            567 ;--------------------------------------------------------
                            568 ; external initialized ram data
                            569 ;--------------------------------------------------------
                            570 	.area XISEG   (XDATA)
   0000                     571 _ctimer_list_list:
   0000                     572 	.ds 3
   0003                     573 _ctimer_list:
   0003                     574 	.ds 3
   0006                     575 _ctimer_process::
   0006                     576 	.ds 9
                            577 	.area HOME    (CODE)
                            578 	.area GSINIT0 (CODE)
                            579 	.area GSINIT1 (CODE)
                            580 	.area GSINIT2 (CODE)
                            581 	.area GSINIT3 (CODE)
                            582 	.area GSINIT4 (CODE)
                            583 	.area GSINIT5 (CODE)
                            584 	.area GSINIT  (CODE)
                            585 	.area GSFINAL (CODE)
                            586 	.area CSEG    (CODE)
                            587 ;--------------------------------------------------------
                            588 ; global & static initialisations
                            589 ;--------------------------------------------------------
                            590 	.area HOME    (CODE)
                            591 	.area GSINIT  (CODE)
                            592 	.area GSFINAL (CODE)
                            593 	.area GSINIT  (CODE)
                            594 ;--------------------------------------------------------
                            595 ; Home
                            596 ;--------------------------------------------------------
                            597 	.area HOME    (CODE)
                            598 	.area HOME    (CODE)
                            599 ;--------------------------------------------------------
                            600 ; code
                            601 ;--------------------------------------------------------
                            602 	.area CSEG    (CODE)
                            603 ;------------------------------------------------------------
                            604 ;Allocation info for local variables in function 'process_thread_ctimer_process'
                            605 ;------------------------------------------------------------
                            606 ;ev                        Allocated to stack - offset -3
                            607 ;data                      Allocated to stack - offset -6
                            608 ;process_pt                Allocated to registers r2 r3 r4 
                            609 ;c                         Allocated to stack - offset 1
                            610 ;PT_YIELD_FLAG             Allocated to registers r5 
                            611 ;tmp_current               Allocated to registers r5 r6 r7 
                            612 ;sloc0                     Allocated to stack - offset 4
                            613 ;------------------------------------------------------------
                            614 ;	../../../core/sys/ctimer.c:64: PROCESS_THREAD(ctimer_process, ev, data)
                            615 ;	-----------------------------------------
                            616 ;	 function process_thread_ctimer_process
                            617 ;	-----------------------------------------
   0000                     618 _process_thread_ctimer_process:
                    0002    619 	ar2 = 0x02
                    0003    620 	ar3 = 0x03
                    0004    621 	ar4 = 0x04
                    0005    622 	ar5 = 0x05
                    0006    623 	ar6 = 0x06
                    0007    624 	ar7 = 0x07
                    0000    625 	ar0 = 0x00
                    0001    626 	ar1 = 0x01
   0000 C0*00               627 	push	_bp
   0002 E5 81               628 	mov	a,sp
   0004 F5*00               629 	mov	_bp,a
   0006 24 05               630 	add	a,#0x05
   0008 F5 81               631 	mov	sp,a
                            632 ;	../../../core/sys/ctimer.c:67: PROCESS_BEGIN();
   000A AA 82               633 	mov	r2,dpl
   000C AB 83               634 	mov	r3,dph
   000E AC F0               635 	mov	r4,b
   0010 7D 01               636 	mov	r5,#0x01
   0012 12s00r00            637 	lcall	__gptrget
   0015 FE                  638 	mov	r6,a
   0016 A3                  639 	inc	dptr
   0017 12s00r00            640 	lcall	__gptrget
   001A FF                  641 	mov	r7,a
   001B BE 00 05            642 	cjne	r6,#0x00,00137$
   001E BF 00 02            643 	cjne	r7,#0x00,00137$
   0021 80 0C               644 	sjmp	00101$
   0023                     645 00137$:
   0023 BE 4B 06            646 	cjne	r6,#0x4B,00138$
   0026 BF 00 03            647 	cjne	r7,#0x00,00138$
   0029 02s01r03            648 	ljmp	00102$
   002C                     649 00138$:
   002C 02s02rBD            650 	ljmp	00120$
   002F                     651 00101$:
                            652 ;	../../../core/sys/ctimer.c:69: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
   002F C0 02               653 	push	ar2
   0031 C0 03               654 	push	ar3
   0033 C0 04               655 	push	ar4
   0035 90s00r03            656 	mov	dptr,#_ctimer_list
   0038 E0                  657 	movx	a,@dptr
   0039 FE                  658 	mov	r6,a
   003A A3                  659 	inc	dptr
   003B E0                  660 	movx	a,@dptr
   003C FF                  661 	mov	r7,a
   003D A3                  662 	inc	dptr
   003E E0                  663 	movx	a,@dptr
   003F FA                  664 	mov	r2,a
   0040 8E 82               665 	mov	dpl,r6
   0042 8F 83               666 	mov	dph,r7
   0044 8A F0               667 	mov	b,r2
   0046 12s00r00            668 	lcall	_list_head
   0049 AA 82               669 	mov	r2,dpl
   004B AB 83               670 	mov	r3,dph
   004D AC F0               671 	mov	r4,b
   004F A8*00               672 	mov	r0,_bp
   0051 08                  673 	inc	r0
   0052 A6 02               674 	mov	@r0,ar2
   0054 08                  675 	inc	r0
   0055 A6 03               676 	mov	@r0,ar3
   0057 08                  677 	inc	r0
   0058 A6 04               678 	mov	@r0,ar4
                            679 ;	../../../core/sys/ctimer.c:88: PROCESS_END();
   005A D0 04               680 	pop	ar4
   005C D0 03               681 	pop	ar3
   005E D0 02               682 	pop	ar2
                            683 ;	../../../core/sys/ctimer.c:69: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
   0060                     684 00121$:
   0060 A8*00               685 	mov	r0,_bp
   0062 08                  686 	inc	r0
   0063 B6 00 0A            687 	cjne	@r0,#0x00,00139$
   0066 08                  688 	inc	r0
   0067 B6 00 06            689 	cjne	@r0,#0x00,00139$
   006A 08                  690 	inc	r0
   006B B6 00 02            691 	cjne	@r0,#0x00,00139$
   006E 80 7B               692 	sjmp	00124$
   0070                     693 00139$:
                            694 ;	../../../core/sys/ctimer.c:70: etimer_set(&c->etimer, c->etimer.timer.interval);
   0070 C0 02               695 	push	ar2
   0072 C0 03               696 	push	ar3
   0074 C0 04               697 	push	ar4
   0076 A8*00               698 	mov	r0,_bp
   0078 08                  699 	inc	r0
   0079 74 03               700 	mov	a,#0x03
   007B 26                  701 	add	a,@r0
   007C FE                  702 	mov	r6,a
   007D E4                  703 	clr	a
   007E 08                  704 	inc	r0
   007F 36                  705 	addc	a,@r0
   0080 FF                  706 	mov	r7,a
   0081 08                  707 	inc	r0
   0082 86 02               708 	mov	ar2,@r0
   0084 74 02               709 	mov	a,#0x02
   0086 2E                  710 	add	a,r6
   0087 FE                  711 	mov	r6,a
   0088 E4                  712 	clr	a
   0089 3F                  713 	addc	a,r7
   008A FF                  714 	mov	r7,a
   008B 8E 82               715 	mov	dpl,r6
   008D 8F 83               716 	mov	dph,r7
   008F 8A F0               717 	mov	b,r2
   0091 12s00r00            718 	lcall	__gptrget
   0094 FE                  719 	mov	r6,a
   0095 A3                  720 	inc	dptr
   0096 12s00r00            721 	lcall	__gptrget
   0099 FF                  722 	mov	r7,a
   009A A8*00               723 	mov	r0,_bp
   009C 08                  724 	inc	r0
   009D 74 03               725 	mov	a,#0x03
   009F 26                  726 	add	a,@r0
   00A0 FA                  727 	mov	r2,a
   00A1 E4                  728 	clr	a
   00A2 08                  729 	inc	r0
   00A3 36                  730 	addc	a,@r0
   00A4 FB                  731 	mov	r3,a
   00A5 08                  732 	inc	r0
   00A6 86 04               733 	mov	ar4,@r0
   00A8 C0 02               734 	push	ar2
   00AA C0 03               735 	push	ar3
   00AC C0 04               736 	push	ar4
   00AE C0 06               737 	push	ar6
   00B0 C0 07               738 	push	ar7
   00B2 8A 82               739 	mov	dpl,r2
   00B4 8B 83               740 	mov	dph,r3
   00B6 8C F0               741 	mov	b,r4
   00B8 12s00r00            742 	lcall	_etimer_set
   00BB 15 81               743 	dec	sp
   00BD 15 81               744 	dec	sp
   00BF D0 04               745 	pop	ar4
   00C1 D0 03               746 	pop	ar3
   00C3 D0 02               747 	pop	ar2
                            748 ;	../../../core/sys/ctimer.c:69: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
   00C5 A8*00               749 	mov	r0,_bp
   00C7 08                  750 	inc	r0
   00C8 86 82               751 	mov	dpl,@r0
   00CA 08                  752 	inc	r0
   00CB 86 83               753 	mov	dph,@r0
   00CD 08                  754 	inc	r0
   00CE 86 F0               755 	mov	b,@r0
   00D0 12s00r00            756 	lcall	__gptrget
   00D3 18                  757 	dec	r0
   00D4 18                  758 	dec	r0
   00D5 F6                  759 	mov	@r0,a
   00D6 A3                  760 	inc	dptr
   00D7 12s00r00            761 	lcall	__gptrget
   00DA 08                  762 	inc	r0
   00DB F6                  763 	mov	@r0,a
   00DC A3                  764 	inc	dptr
   00DD 12s00r00            765 	lcall	__gptrget
   00E0 08                  766 	inc	r0
   00E1 F6                  767 	mov	@r0,a
   00E2 D0 04               768 	pop	ar4
   00E4 D0 03               769 	pop	ar3
   00E6 D0 02               770 	pop	ar2
   00E8 02s00r60            771 	ljmp	00121$
   00EB                     772 00124$:
                            773 ;	../../../core/sys/ctimer.c:72: initialized = 1;
   00EB 90s00r00            774 	mov	dptr,#_initialized
   00EE 74 01               775 	mov	a,#0x01
   00F0 F0                  776 	movx	@dptr,a
                            777 ;	../../../core/sys/ctimer.c:74: while(1) {
   00F1                     778 00118$:
                            779 ;	../../../core/sys/ctimer.c:75: PROCESS_YIELD_UNTIL(ev == PROCESS_EVENT_TIMER);
   00F1 7D 00               780 	mov	r5,#0x00
   00F3 8A 82               781 	mov	dpl,r2
   00F5 8B 83               782 	mov	dph,r3
   00F7 8C F0               783 	mov	b,r4
   00F9 74 4B               784 	mov	a,#0x4B
   00FB 12s00r00            785 	lcall	__gptrput
   00FE A3                  786 	inc	dptr
   00FF E4                  787 	clr	a
   0100 12s00r00            788 	lcall	__gptrput
   0103                     789 00102$:
   0103 ED                  790 	mov	a,r5
   0104 60 0A               791 	jz	00103$
   0106 E5*00               792 	mov	a,_bp
   0108 24 FD               793 	add	a,#0xfd
   010A F8                  794 	mov	r0,a
   010B B6 88 02            795 	cjne	@r0,#0x88,00141$
   010E 80 06               796 	sjmp	00107$
   0110                     797 00141$:
   0110                     798 00103$:
   0110 75 82 01            799 	mov	dpl,#0x01
   0113 02s02rCF            800 	ljmp	00125$
   0116                     801 00107$:
                            802 ;	../../../core/sys/ctimer.c:76: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
   0116 90s00r03            803 	mov	dptr,#_ctimer_list
   0119 E0                  804 	movx	a,@dptr
   011A FD                  805 	mov	r5,a
   011B A3                  806 	inc	dptr
   011C E0                  807 	movx	a,@dptr
   011D FE                  808 	mov	r6,a
   011E A3                  809 	inc	dptr
   011F E0                  810 	movx	a,@dptr
   0120 FF                  811 	mov	r7,a
   0121 8D 82               812 	mov	dpl,r5
   0123 8E 83               813 	mov	dph,r6
   0125 8F F0               814 	mov	b,r7
   0127 C0 02               815 	push	ar2
   0129 C0 03               816 	push	ar3
   012B C0 04               817 	push	ar4
   012D 12s00r00            818 	lcall	_list_head
   0130 AD 82               819 	mov	r5,dpl
   0132 AE 83               820 	mov	r6,dph
   0134 AF F0               821 	mov	r7,b
   0136 D0 04               822 	pop	ar4
   0138 D0 03               823 	pop	ar3
   013A D0 02               824 	pop	ar2
   013C A8*00               825 	mov	r0,_bp
   013E 08                  826 	inc	r0
   013F A6 05               827 	mov	@r0,ar5
   0141 08                  828 	inc	r0
   0142 A6 06               829 	mov	@r0,ar6
   0144 08                  830 	inc	r0
   0145 A6 07               831 	mov	@r0,ar7
   0147 E5*00               832 	mov	a,_bp
   0149 24 FA               833 	add	a,#0xfa
   014B F8                  834 	mov	r0,a
   014C 86 05               835 	mov	ar5,@r0
   014E 08                  836 	inc	r0
   014F 86 06               837 	mov	ar6,@r0
   0151 08                  838 	inc	r0
   0152 86 07               839 	mov	ar7,@r0
   0154                     840 00113$:
   0154 A8*00               841 	mov	r0,_bp
   0156 08                  842 	inc	r0
   0157 E6                  843 	mov	a,@r0
   0158 08                  844 	inc	r0
   0159 46                  845 	orl	a,@r0
   015A 08                  846 	inc	r0
   015B 46                  847 	orl	a,@r0
   015C 60 93               848 	jz	00118$
                            849 ;	../../../core/sys/ctimer.c:77: if(&c->etimer == data) {
   015E C0 02               850 	push	ar2
   0160 C0 03               851 	push	ar3
   0162 C0 04               852 	push	ar4
   0164 A8*00               853 	mov	r0,_bp
   0166 08                  854 	inc	r0
   0167 74 03               855 	mov	a,#0x03
   0169 26                  856 	add	a,@r0
   016A FA                  857 	mov	r2,a
   016B E4                  858 	clr	a
   016C 08                  859 	inc	r0
   016D 36                  860 	addc	a,@r0
   016E FB                  861 	mov	r3,a
   016F 08                  862 	inc	r0
   0170 86 04               863 	mov	ar4,@r0
   0172 EA                  864 	mov	a,r2
   0173 B5 05 0A            865 	cjne	a,ar5,00143$
   0176 EB                  866 	mov	a,r3
   0177 B5 06 06            867 	cjne	a,ar6,00143$
   017A EC                  868 	mov	a,r4
   017B B5 07 02            869 	cjne	a,ar7,00143$
   017E 80 09               870 	sjmp	00144$
   0180                     871 00143$:
   0180 D0 04               872 	pop	ar4
   0182 D0 03               873 	pop	ar3
   0184 D0 02               874 	pop	ar2
   0186 02s02r9D            875 	ljmp	00115$
   0189                     876 00144$:
                            877 ;	../../../core/sys/ctimer.c:78: list_remove(ctimer_list, c);
   0189 90s00r03            878 	mov	dptr,#_ctimer_list
   018C E0                  879 	movx	a,@dptr
   018D FA                  880 	mov	r2,a
   018E A3                  881 	inc	dptr
   018F E0                  882 	movx	a,@dptr
   0190 FB                  883 	mov	r3,a
   0191 A3                  884 	inc	dptr
   0192 E0                  885 	movx	a,@dptr
   0193 FC                  886 	mov	r4,a
   0194 C0 02               887 	push	ar2
   0196 C0 03               888 	push	ar3
   0198 C0 04               889 	push	ar4
   019A A8*00               890 	mov	r0,_bp
   019C 08                  891 	inc	r0
   019D E6                  892 	mov	a,@r0
   019E C0 E0               893 	push	acc
   01A0 08                  894 	inc	r0
   01A1 E6                  895 	mov	a,@r0
   01A2 C0 E0               896 	push	acc
   01A4 08                  897 	inc	r0
   01A5 E6                  898 	mov	a,@r0
   01A6 C0 E0               899 	push	acc
   01A8 8A 82               900 	mov	dpl,r2
   01AA 8B 83               901 	mov	dph,r3
   01AC 8C F0               902 	mov	b,r4
   01AE 12s00r00            903 	lcall	_list_remove
   01B1 15 81               904 	dec	sp
   01B3 15 81               905 	dec	sp
   01B5 15 81               906 	dec	sp
   01B7 D0 04               907 	pop	ar4
   01B9 D0 03               908 	pop	ar3
   01BB D0 02               909 	pop	ar2
                            910 ;	../../../core/sys/ctimer.c:79: PROCESS_CONTEXT_BEGIN(c->p);
   01BD 90s00r00            911 	mov	dptr,#_process_current
   01C0 E0                  912 	movx	a,@dptr
   01C1 FA                  913 	mov	r2,a
   01C2 A3                  914 	inc	dptr
   01C3 E0                  915 	movx	a,@dptr
   01C4 FB                  916 	mov	r3,a
   01C5 A3                  917 	inc	dptr
   01C6 E0                  918 	movx	a,@dptr
   01C7 FC                  919 	mov	r4,a
   01C8 8A 05               920 	mov	ar5,r2
   01CA 8B 06               921 	mov	ar6,r3
   01CC 8C 07               922 	mov	ar7,r4
   01CE A8*00               923 	mov	r0,_bp
   01D0 08                  924 	inc	r0
   01D1 74 0D               925 	mov	a,#0x0D
   01D3 26                  926 	add	a,@r0
   01D4 FA                  927 	mov	r2,a
   01D5 E4                  928 	clr	a
   01D6 08                  929 	inc	r0
   01D7 36                  930 	addc	a,@r0
   01D8 FB                  931 	mov	r3,a
   01D9 08                  932 	inc	r0
   01DA 86 04               933 	mov	ar4,@r0
   01DC 8A 82               934 	mov	dpl,r2
   01DE 8B 83               935 	mov	dph,r3
   01E0 8C F0               936 	mov	b,r4
   01E2 12s00r00            937 	lcall	__gptrget
   01E5 FA                  938 	mov	r2,a
   01E6 A3                  939 	inc	dptr
   01E7 12s00r00            940 	lcall	__gptrget
   01EA FB                  941 	mov	r3,a
   01EB A3                  942 	inc	dptr
   01EC 12s00r00            943 	lcall	__gptrget
   01EF FC                  944 	mov	r4,a
   01F0 90s00r00            945 	mov	dptr,#_process_current
   01F3 EA                  946 	mov	a,r2
   01F4 F0                  947 	movx	@dptr,a
   01F5 A3                  948 	inc	dptr
   01F6 EB                  949 	mov	a,r3
   01F7 F0                  950 	movx	@dptr,a
   01F8 A3                  951 	inc	dptr
   01F9 EC                  952 	mov	a,r4
   01FA F0                  953 	movx	@dptr,a
                            954 ;	../../../core/sys/ctimer.c:80: if(c->f != NULL) {
   01FB A8*00               955 	mov	r0,_bp
   01FD 08                  956 	inc	r0
   01FE 74 10               957 	mov	a,#0x10
   0200 26                  958 	add	a,@r0
   0201 FA                  959 	mov	r2,a
   0202 E4                  960 	clr	a
   0203 08                  961 	inc	r0
   0204 36                  962 	addc	a,@r0
   0205 FB                  963 	mov	r3,a
   0206 08                  964 	inc	r0
   0207 86 04               965 	mov	ar4,@r0
   0209 8A 82               966 	mov	dpl,r2
   020B 8B 83               967 	mov	dph,r3
   020D 8C F0               968 	mov	b,r4
   020F E5*00               969 	mov	a,_bp
   0211 24 04               970 	add	a,#0x04
   0213 F8                  971 	mov	r0,a
   0214 12s00r00            972 	lcall	__gptrget
   0217 F6                  973 	mov	@r0,a
   0218 A3                  974 	inc	dptr
   0219 12s00r00            975 	lcall	__gptrget
   021C 08                  976 	inc	r0
   021D F6                  977 	mov	@r0,a
   021E D0 04               978 	pop	ar4
   0220 D0 03               979 	pop	ar3
   0222 D0 02               980 	pop	ar2
   0224 E5*00               981 	mov	a,_bp
   0226 24 04               982 	add	a,#0x04
   0228 F8                  983 	mov	r0,a
   0229 E6                  984 	mov	a,@r0
   022A 08                  985 	inc	r0
   022B 46                  986 	orl	a,@r0
   022C 60 61               987 	jz	00110$
                            988 ;	../../../core/sys/ctimer.c:81: c->f(c->ptr);
   022E C0 02               989 	push	ar2
   0230 C0 03               990 	push	ar3
   0232 C0 04               991 	push	ar4
   0234 A8*00               992 	mov	r0,_bp
   0236 08                  993 	inc	r0
   0237 74 12               994 	mov	a,#0x12
   0239 26                  995 	add	a,@r0
   023A FA                  996 	mov	r2,a
   023B E4                  997 	clr	a
   023C 08                  998 	inc	r0
   023D 36                  999 	addc	a,@r0
   023E FB                 1000 	mov	r3,a
   023F 08                 1001 	inc	r0
   0240 86 04              1002 	mov	ar4,@r0
   0242 8A 82              1003 	mov	dpl,r2
   0244 8B 83              1004 	mov	dph,r3
   0246 8C F0              1005 	mov	b,r4
   0248 12s00r00           1006 	lcall	__gptrget
   024B FA                 1007 	mov	r2,a
   024C A3                 1008 	inc	dptr
   024D 12s00r00           1009 	lcall	__gptrget
   0250 FB                 1010 	mov	r3,a
   0251 A3                 1011 	inc	dptr
   0252 12s00r00           1012 	lcall	__gptrget
   0255 FC                 1013 	mov	r4,a
   0256 C0 02              1014 	push	ar2
   0258 C0 03              1015 	push	ar3
   025A C0 04              1016 	push	ar4
   025C C0 05              1017 	push	ar5
   025E C0 06              1018 	push	ar6
   0260 C0 07              1019 	push	ar7
   0262 74r7D              1020 	mov	a,#00146$
   0264 C0 E0              1021 	push	acc
   0266 74s02              1022 	mov	a,#(00146$ >> 8)
   0268 C0 E0              1023 	push	acc
   026A E5*00              1024 	mov	a,_bp
   026C 24 04              1025 	add	a,#0x04
   026E F8                 1026 	mov	r0,a
   026F E6                 1027 	mov	a,@r0
   0270 C0 E0              1028 	push	acc
   0272 08                 1029 	inc	r0
   0273 E6                 1030 	mov	a,@r0
   0274 C0 E0              1031 	push	acc
   0276 8A 82              1032 	mov	dpl,r2
   0278 8B 83              1033 	mov	dph,r3
   027A 8C F0              1034 	mov	b,r4
   027C 22                 1035 	ret
   027D                    1036 00146$:
   027D D0 07              1037 	pop	ar7
   027F D0 06              1038 	pop	ar6
   0281 D0 05              1039 	pop	ar5
   0283 D0 04              1040 	pop	ar4
   0285 D0 03              1041 	pop	ar3
   0287 D0 02              1042 	pop	ar2
                           1043 ;	../../../core/sys/ctimer.c:88: PROCESS_END();
   0289 D0 04              1044 	pop	ar4
   028B D0 03              1045 	pop	ar3
   028D D0 02              1046 	pop	ar2
                           1047 ;	../../../core/sys/ctimer.c:81: c->f(c->ptr);
   028F                    1048 00110$:
                           1049 ;	../../../core/sys/ctimer.c:83: PROCESS_CONTEXT_END(c->p);
   028F 90s00r00           1050 	mov	dptr,#_process_current
   0292 ED                 1051 	mov	a,r5
   0293 F0                 1052 	movx	@dptr,a
   0294 A3                 1053 	inc	dptr
   0295 EE                 1054 	mov	a,r6
   0296 F0                 1055 	movx	@dptr,a
   0297 A3                 1056 	inc	dptr
   0298 EF                 1057 	mov	a,r7
   0299 F0                 1058 	movx	@dptr,a
                           1059 ;	../../../core/sys/ctimer.c:84: break;
   029A 02s00rF1           1060 	ljmp	00118$
   029D                    1061 00115$:
                           1062 ;	../../../core/sys/ctimer.c:76: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
   029D A8*00              1063 	mov	r0,_bp
   029F 08                 1064 	inc	r0
   02A0 86 82              1065 	mov	dpl,@r0
   02A2 08                 1066 	inc	r0
   02A3 86 83              1067 	mov	dph,@r0
   02A5 08                 1068 	inc	r0
   02A6 86 F0              1069 	mov	b,@r0
   02A8 12s00r00           1070 	lcall	__gptrget
   02AB 18                 1071 	dec	r0
   02AC 18                 1072 	dec	r0
   02AD F6                 1073 	mov	@r0,a
   02AE A3                 1074 	inc	dptr
   02AF 12s00r00           1075 	lcall	__gptrget
   02B2 08                 1076 	inc	r0
   02B3 F6                 1077 	mov	@r0,a
   02B4 A3                 1078 	inc	dptr
   02B5 12s00r00           1079 	lcall	__gptrget
   02B8 08                 1080 	inc	r0
   02B9 F6                 1081 	mov	@r0,a
   02BA 02s01r54           1082 	ljmp	00113$
                           1083 ;	../../../core/sys/ctimer.c:88: PROCESS_END();
   02BD                    1084 00120$:
   02BD 8A 82              1085 	mov	dpl,r2
   02BF 8B 83              1086 	mov	dph,r3
   02C1 8C F0              1087 	mov	b,r4
   02C3 E4                 1088 	clr	a
   02C4 12s00r00           1089 	lcall	__gptrput
   02C7 A3                 1090 	inc	dptr
   02C8 E4                 1091 	clr	a
   02C9 12s00r00           1092 	lcall	__gptrput
   02CC 75 82 03           1093 	mov	dpl,#0x03
   02CF                    1094 00125$:
   02CF 85*00 81           1095 	mov	sp,_bp
   02D2 D0*00              1096 	pop	_bp
   02D4 22                 1097 	ret
                           1098 ;------------------------------------------------------------
                           1099 ;Allocation info for local variables in function 'ctimer_init'
                           1100 ;------------------------------------------------------------
                           1101 ;------------------------------------------------------------
                           1102 ;	../../../core/sys/ctimer.c:92: ctimer_init(void)
                           1103 ;	-----------------------------------------
                           1104 ;	 function ctimer_init
                           1105 ;	-----------------------------------------
   02D5                    1106 _ctimer_init:
                           1107 ;	../../../core/sys/ctimer.c:94: initialized = 0;
   02D5 90s00r00           1108 	mov	dptr,#_initialized
   02D8 E4                 1109 	clr	a
   02D9 F0                 1110 	movx	@dptr,a
                           1111 ;	../../../core/sys/ctimer.c:95: list_init(ctimer_list);
   02DA 90s00r03           1112 	mov	dptr,#_ctimer_list
   02DD E0                 1113 	movx	a,@dptr
   02DE FA                 1114 	mov	r2,a
   02DF A3                 1115 	inc	dptr
   02E0 E0                 1116 	movx	a,@dptr
   02E1 FB                 1117 	mov	r3,a
   02E2 A3                 1118 	inc	dptr
   02E3 E0                 1119 	movx	a,@dptr
   02E4 FC                 1120 	mov	r4,a
   02E5 8A 82              1121 	mov	dpl,r2
   02E7 8B 83              1122 	mov	dph,r3
   02E9 8C F0              1123 	mov	b,r4
   02EB 12s00r00           1124 	lcall	_list_init
                           1125 ;	../../../core/sys/ctimer.c:96: process_start(&ctimer_process, NULL);
   02EE E4                 1126 	clr	a
   02EF C0 E0              1127 	push	acc
   02F1 C0 E0              1128 	push	acc
   02F3 C0 E0              1129 	push	acc
   02F5 90s00r06           1130 	mov	dptr,#_ctimer_process
   02F8 75 F0 00           1131 	mov	b,#0x00
   02FB 12s00r00           1132 	lcall	_process_start
   02FE 15 81              1133 	dec	sp
   0300 15 81              1134 	dec	sp
   0302 15 81              1135 	dec	sp
   0304 22                 1136 	ret
                           1137 ;------------------------------------------------------------
                           1138 ;Allocation info for local variables in function 'ctimer_set'
                           1139 ;------------------------------------------------------------
                           1140 ;t                         Allocated to stack - offset -4
                           1141 ;f                         Allocated to stack - offset -6
                           1142 ;ptr                       Allocated to stack - offset -9
                           1143 ;c                         Allocated to registers r2 r3 r4 
                           1144 ;tmp_current               Allocated to stack - offset 1
                           1145 ;sloc0                     Allocated to stack - offset 4
                           1146 ;------------------------------------------------------------
                           1147 ;	../../../core/sys/ctimer.c:100: ctimer_set(struct ctimer *c, clock_time_t t,
                           1148 ;	-----------------------------------------
                           1149 ;	 function ctimer_set
                           1150 ;	-----------------------------------------
   0305                    1151 _ctimer_set:
   0305 C0*00              1152 	push	_bp
   0307 E5 81              1153 	mov	a,sp
   0309 F5*00              1154 	mov	_bp,a
   030B 24 06              1155 	add	a,#0x06
   030D F5 81              1156 	mov	sp,a
   030F AA 82              1157 	mov	r2,dpl
   0311 AB 83              1158 	mov	r3,dph
   0313 AC F0              1159 	mov	r4,b
                           1160 ;	../../../core/sys/ctimer.c:104: c->p = PROCESS_CURRENT();
   0315 74 0D              1161 	mov	a,#0x0D
   0317 2A                 1162 	add	a,r2
   0318 FD                 1163 	mov	r5,a
   0319 E4                 1164 	clr	a
   031A 3B                 1165 	addc	a,r3
   031B FE                 1166 	mov	r6,a
   031C 8C 07              1167 	mov	ar7,r4
   031E 90s00r00           1168 	mov	dptr,#_process_current
   0321 E5*00              1169 	mov	a,_bp
   0323 24 04              1170 	add	a,#0x04
   0325 F8                 1171 	mov	r0,a
   0326 E0                 1172 	movx	a,@dptr
   0327 F6                 1173 	mov	@r0,a
   0328 A3                 1174 	inc	dptr
   0329 E0                 1175 	movx	a,@dptr
   032A 08                 1176 	inc	r0
   032B F6                 1177 	mov	@r0,a
   032C A3                 1178 	inc	dptr
   032D E0                 1179 	movx	a,@dptr
   032E 08                 1180 	inc	r0
   032F F6                 1181 	mov	@r0,a
   0330 8D 82              1182 	mov	dpl,r5
   0332 8E 83              1183 	mov	dph,r6
   0334 8F F0              1184 	mov	b,r7
   0336 E5*00              1185 	mov	a,_bp
   0338 24 04              1186 	add	a,#0x04
   033A F8                 1187 	mov	r0,a
   033B E6                 1188 	mov	a,@r0
   033C 12s00r00           1189 	lcall	__gptrput
   033F A3                 1190 	inc	dptr
   0340 08                 1191 	inc	r0
   0341 E6                 1192 	mov	a,@r0
   0342 12s00r00           1193 	lcall	__gptrput
   0345 A3                 1194 	inc	dptr
   0346 08                 1195 	inc	r0
   0347 E6                 1196 	mov	a,@r0
   0348 12s00r00           1197 	lcall	__gptrput
                           1198 ;	../../../core/sys/ctimer.c:105: c->f = f;
   034B 74 10              1199 	mov	a,#0x10
   034D 2A                 1200 	add	a,r2
   034E FD                 1201 	mov	r5,a
   034F E4                 1202 	clr	a
   0350 3B                 1203 	addc	a,r3
   0351 FE                 1204 	mov	r6,a
   0352 8C 07              1205 	mov	ar7,r4
   0354 8D 82              1206 	mov	dpl,r5
   0356 8E 83              1207 	mov	dph,r6
   0358 8F F0              1208 	mov	b,r7
   035A E5*00              1209 	mov	a,_bp
   035C 24 FA              1210 	add	a,#0xfa
   035E F8                 1211 	mov	r0,a
   035F E6                 1212 	mov	a,@r0
   0360 12s00r00           1213 	lcall	__gptrput
   0363 A3                 1214 	inc	dptr
   0364 08                 1215 	inc	r0
   0365 E6                 1216 	mov	a,@r0
   0366 12s00r00           1217 	lcall	__gptrput
                           1218 ;	../../../core/sys/ctimer.c:106: c->ptr = ptr;
   0369 74 12              1219 	mov	a,#0x12
   036B 2A                 1220 	add	a,r2
   036C FD                 1221 	mov	r5,a
   036D E4                 1222 	clr	a
   036E 3B                 1223 	addc	a,r3
   036F FE                 1224 	mov	r6,a
   0370 8C 07              1225 	mov	ar7,r4
   0372 8D 82              1226 	mov	dpl,r5
   0374 8E 83              1227 	mov	dph,r6
   0376 8F F0              1228 	mov	b,r7
   0378 E5*00              1229 	mov	a,_bp
   037A 24 F7              1230 	add	a,#0xf7
   037C F8                 1231 	mov	r0,a
   037D E6                 1232 	mov	a,@r0
   037E 12s00r00           1233 	lcall	__gptrput
   0381 A3                 1234 	inc	dptr
   0382 08                 1235 	inc	r0
   0383 E6                 1236 	mov	a,@r0
   0384 12s00r00           1237 	lcall	__gptrput
   0387 A3                 1238 	inc	dptr
   0388 08                 1239 	inc	r0
   0389 E6                 1240 	mov	a,@r0
   038A 12s00r00           1241 	lcall	__gptrput
                           1242 ;	../../../core/sys/ctimer.c:107: if(initialized) {
   038D 90s00r00           1243 	mov	dptr,#_initialized
   0390 E0                 1244 	movx	a,@dptr
   0391 FD                 1245 	mov	r5,a
   0392 60 65              1246 	jz	00102$
                           1247 ;	../../../core/sys/ctimer.c:108: PROCESS_CONTEXT_BEGIN(&ctimer_process);
   0394 E5*00              1248 	mov	a,_bp
   0396 24 04              1249 	add	a,#0x04
   0398 F8                 1250 	mov	r0,a
   0399 86 05              1251 	mov	ar5,@r0
   039B 08                 1252 	inc	r0
   039C 86 06              1253 	mov	ar6,@r0
   039E 08                 1254 	inc	r0
   039F 86 07              1255 	mov	ar7,@r0
   03A1 A8*00              1256 	mov	r0,_bp
   03A3 08                 1257 	inc	r0
   03A4 A6 05              1258 	mov	@r0,ar5
   03A6 08                 1259 	inc	r0
   03A7 A6 06              1260 	mov	@r0,ar6
   03A9 08                 1261 	inc	r0
   03AA A6 07              1262 	mov	@r0,ar7
   03AC 90s00r00           1263 	mov	dptr,#_process_current
   03AF 74r06              1264 	mov	a,#_ctimer_process
   03B1 F0                 1265 	movx	@dptr,a
   03B2 A3                 1266 	inc	dptr
   03B3 74s00              1267 	mov	a,#(_ctimer_process >> 8)
   03B5 F0                 1268 	movx	@dptr,a
   03B6 A3                 1269 	inc	dptr
   03B7 E4                 1270 	clr	a
   03B8 F0                 1271 	movx	@dptr,a
                           1272 ;	../../../core/sys/ctimer.c:109: etimer_set(&c->etimer, t);
   03B9 74 03              1273 	mov	a,#0x03
   03BB 2A                 1274 	add	a,r2
   03BC FD                 1275 	mov	r5,a
   03BD E4                 1276 	clr	a
   03BE 3B                 1277 	addc	a,r3
   03BF FE                 1278 	mov	r6,a
   03C0 8C 07              1279 	mov	ar7,r4
   03C2 C0 02              1280 	push	ar2
   03C4 C0 03              1281 	push	ar3
   03C6 C0 04              1282 	push	ar4
   03C8 E5*00              1283 	mov	a,_bp
   03CA 24 FC              1284 	add	a,#0xfc
   03CC F8                 1285 	mov	r0,a
   03CD E6                 1286 	mov	a,@r0
   03CE C0 E0              1287 	push	acc
   03D0 08                 1288 	inc	r0
   03D1 E6                 1289 	mov	a,@r0
   03D2 C0 E0              1290 	push	acc
   03D4 8D 82              1291 	mov	dpl,r5
   03D6 8E 83              1292 	mov	dph,r6
   03D8 8F F0              1293 	mov	b,r7
   03DA 12s00r00           1294 	lcall	_etimer_set
   03DD 15 81              1295 	dec	sp
   03DF 15 81              1296 	dec	sp
   03E1 D0 04              1297 	pop	ar4
   03E3 D0 03              1298 	pop	ar3
   03E5 D0 02              1299 	pop	ar2
                           1300 ;	../../../core/sys/ctimer.c:110: PROCESS_CONTEXT_END(&ctimer_process);
   03E7 A8*00              1301 	mov	r0,_bp
   03E9 08                 1302 	inc	r0
   03EA 90s00r00           1303 	mov	dptr,#_process_current
   03ED E6                 1304 	mov	a,@r0
   03EE F0                 1305 	movx	@dptr,a
   03EF 08                 1306 	inc	r0
   03F0 A3                 1307 	inc	dptr
   03F1 E6                 1308 	mov	a,@r0
   03F2 F0                 1309 	movx	@dptr,a
   03F3 08                 1310 	inc	r0
   03F4 A3                 1311 	inc	dptr
   03F5 E6                 1312 	mov	a,@r0
   03F6 F0                 1313 	movx	@dptr,a
   03F7 80 25              1314 	sjmp	00103$
   03F9                    1315 00102$:
                           1316 ;	../../../core/sys/ctimer.c:112: c->etimer.timer.interval = t;
   03F9 74 03              1317 	mov	a,#0x03
   03FB 2A                 1318 	add	a,r2
   03FC FD                 1319 	mov	r5,a
   03FD E4                 1320 	clr	a
   03FE 3B                 1321 	addc	a,r3
   03FF FE                 1322 	mov	r6,a
   0400 8C 07              1323 	mov	ar7,r4
   0402 74 02              1324 	mov	a,#0x02
   0404 2D                 1325 	add	a,r5
   0405 FD                 1326 	mov	r5,a
   0406 E4                 1327 	clr	a
   0407 3E                 1328 	addc	a,r6
   0408 FE                 1329 	mov	r6,a
   0409 8D 82              1330 	mov	dpl,r5
   040B 8E 83              1331 	mov	dph,r6
   040D 8F F0              1332 	mov	b,r7
   040F E5*00              1333 	mov	a,_bp
   0411 24 FC              1334 	add	a,#0xfc
   0413 F8                 1335 	mov	r0,a
   0414 E6                 1336 	mov	a,@r0
   0415 12s00r00           1337 	lcall	__gptrput
   0418 A3                 1338 	inc	dptr
   0419 08                 1339 	inc	r0
   041A E6                 1340 	mov	a,@r0
   041B 12s00r00           1341 	lcall	__gptrput
   041E                    1342 00103$:
                           1343 ;	../../../core/sys/ctimer.c:115: list_remove(ctimer_list, c);
   041E 90s00r03           1344 	mov	dptr,#_ctimer_list
   0421 E0                 1345 	movx	a,@dptr
   0422 FD                 1346 	mov	r5,a
   0423 A3                 1347 	inc	dptr
   0424 E0                 1348 	movx	a,@dptr
   0425 FE                 1349 	mov	r6,a
   0426 A3                 1350 	inc	dptr
   0427 E0                 1351 	movx	a,@dptr
   0428 FF                 1352 	mov	r7,a
   0429 C0 02              1353 	push	ar2
   042B C0 03              1354 	push	ar3
   042D C0 04              1355 	push	ar4
   042F C0 02              1356 	push	ar2
   0431 C0 03              1357 	push	ar3
   0433 C0 04              1358 	push	ar4
   0435 8D 82              1359 	mov	dpl,r5
   0437 8E 83              1360 	mov	dph,r6
   0439 8F F0              1361 	mov	b,r7
   043B 12s00r00           1362 	lcall	_list_remove
   043E 15 81              1363 	dec	sp
   0440 15 81              1364 	dec	sp
   0442 15 81              1365 	dec	sp
                           1366 ;	../../../core/sys/ctimer.c:116: list_add(ctimer_list, c);
   0444 90s00r03           1367 	mov	dptr,#_ctimer_list
   0447 E0                 1368 	movx	a,@dptr
   0448 FD                 1369 	mov	r5,a
   0449 A3                 1370 	inc	dptr
   044A E0                 1371 	movx	a,@dptr
   044B FE                 1372 	mov	r6,a
   044C A3                 1373 	inc	dptr
   044D E0                 1374 	movx	a,@dptr
   044E FF                 1375 	mov	r7,a
   044F 8D 82              1376 	mov	dpl,r5
   0451 8E 83              1377 	mov	dph,r6
   0453 8F F0              1378 	mov	b,r7
   0455 12s00r00           1379 	lcall	_list_add
   0458 15 81              1380 	dec	sp
   045A 15 81              1381 	dec	sp
   045C 15 81              1382 	dec	sp
   045E 85*00 81           1383 	mov	sp,_bp
   0461 D0*00              1384 	pop	_bp
   0463 22                 1385 	ret
                           1386 ;------------------------------------------------------------
                           1387 ;Allocation info for local variables in function 'ctimer_reset'
                           1388 ;------------------------------------------------------------
                           1389 ;c                         Allocated to registers r2 r3 r4 
                           1390 ;tmp_current               Allocated to stack - offset 1
                           1391 ;------------------------------------------------------------
                           1392 ;	../../../core/sys/ctimer.c:120: ctimer_reset(struct ctimer *c)
                           1393 ;	-----------------------------------------
                           1394 ;	 function ctimer_reset
                           1395 ;	-----------------------------------------
   0464                    1396 _ctimer_reset:
   0464 C0*00              1397 	push	_bp
   0466 85 81*00           1398 	mov	_bp,sp
   0469 05 81              1399 	inc	sp
   046B 05 81              1400 	inc	sp
   046D 05 81              1401 	inc	sp
   046F AA 82              1402 	mov	r2,dpl
   0471 AB 83              1403 	mov	r3,dph
   0473 AC F0              1404 	mov	r4,b
                           1405 ;	../../../core/sys/ctimer.c:122: if(initialized) {
   0475 90s00r00           1406 	mov	dptr,#_initialized
   0478 E0                 1407 	movx	a,@dptr
   0479 FD                 1408 	mov	r5,a
   047A 60 51              1409 	jz	00102$
                           1410 ;	../../../core/sys/ctimer.c:123: PROCESS_CONTEXT_BEGIN(&ctimer_process);
   047C 90s00r00           1411 	mov	dptr,#_process_current
   047F E0                 1412 	movx	a,@dptr
   0480 FD                 1413 	mov	r5,a
   0481 A3                 1414 	inc	dptr
   0482 E0                 1415 	movx	a,@dptr
   0483 FE                 1416 	mov	r6,a
   0484 A3                 1417 	inc	dptr
   0485 E0                 1418 	movx	a,@dptr
   0486 FF                 1419 	mov	r7,a
   0487 A8*00              1420 	mov	r0,_bp
   0489 08                 1421 	inc	r0
   048A A6 05              1422 	mov	@r0,ar5
   048C 08                 1423 	inc	r0
   048D A6 06              1424 	mov	@r0,ar6
   048F 08                 1425 	inc	r0
   0490 A6 07              1426 	mov	@r0,ar7
   0492 90s00r00           1427 	mov	dptr,#_process_current
   0495 74r06              1428 	mov	a,#_ctimer_process
   0497 F0                 1429 	movx	@dptr,a
   0498 A3                 1430 	inc	dptr
   0499 74s00              1431 	mov	a,#(_ctimer_process >> 8)
   049B F0                 1432 	movx	@dptr,a
   049C A3                 1433 	inc	dptr
   049D E4                 1434 	clr	a
   049E F0                 1435 	movx	@dptr,a
                           1436 ;	../../../core/sys/ctimer.c:124: etimer_reset(&c->etimer);
   049F 74 03              1437 	mov	a,#0x03
   04A1 2A                 1438 	add	a,r2
   04A2 FD                 1439 	mov	r5,a
   04A3 E4                 1440 	clr	a
   04A4 3B                 1441 	addc	a,r3
   04A5 FE                 1442 	mov	r6,a
   04A6 8C 07              1443 	mov	ar7,r4
   04A8 8D 82              1444 	mov	dpl,r5
   04AA 8E 83              1445 	mov	dph,r6
   04AC 8F F0              1446 	mov	b,r7
   04AE C0 02              1447 	push	ar2
   04B0 C0 03              1448 	push	ar3
   04B2 C0 04              1449 	push	ar4
   04B4 12s00r00           1450 	lcall	_etimer_reset
   04B7 D0 04              1451 	pop	ar4
   04B9 D0 03              1452 	pop	ar3
   04BB D0 02              1453 	pop	ar2
                           1454 ;	../../../core/sys/ctimer.c:125: PROCESS_CONTEXT_END(&ctimer_process);
   04BD A8*00              1455 	mov	r0,_bp
   04BF 08                 1456 	inc	r0
   04C0 90s00r00           1457 	mov	dptr,#_process_current
   04C3 E6                 1458 	mov	a,@r0
   04C4 F0                 1459 	movx	@dptr,a
   04C5 08                 1460 	inc	r0
   04C6 A3                 1461 	inc	dptr
   04C7 E6                 1462 	mov	a,@r0
   04C8 F0                 1463 	movx	@dptr,a
   04C9 08                 1464 	inc	r0
   04CA A3                 1465 	inc	dptr
   04CB E6                 1466 	mov	a,@r0
   04CC F0                 1467 	movx	@dptr,a
   04CD                    1468 00102$:
                           1469 ;	../../../core/sys/ctimer.c:128: list_remove(ctimer_list, c);
   04CD 90s00r03           1470 	mov	dptr,#_ctimer_list
   04D0 E0                 1471 	movx	a,@dptr
   04D1 FD                 1472 	mov	r5,a
   04D2 A3                 1473 	inc	dptr
   04D3 E0                 1474 	movx	a,@dptr
   04D4 FE                 1475 	mov	r6,a
   04D5 A3                 1476 	inc	dptr
   04D6 E0                 1477 	movx	a,@dptr
   04D7 FF                 1478 	mov	r7,a
   04D8 C0 02              1479 	push	ar2
   04DA C0 03              1480 	push	ar3
   04DC C0 04              1481 	push	ar4
   04DE C0 02              1482 	push	ar2
   04E0 C0 03              1483 	push	ar3
   04E2 C0 04              1484 	push	ar4
   04E4 8D 82              1485 	mov	dpl,r5
   04E6 8E 83              1486 	mov	dph,r6
   04E8 8F F0              1487 	mov	b,r7
   04EA 12s00r00           1488 	lcall	_list_remove
   04ED 15 81              1489 	dec	sp
   04EF 15 81              1490 	dec	sp
   04F1 15 81              1491 	dec	sp
                           1492 ;	../../../core/sys/ctimer.c:129: list_add(ctimer_list, c);
   04F3 90s00r03           1493 	mov	dptr,#_ctimer_list
   04F6 E0                 1494 	movx	a,@dptr
   04F7 FD                 1495 	mov	r5,a
   04F8 A3                 1496 	inc	dptr
   04F9 E0                 1497 	movx	a,@dptr
   04FA FE                 1498 	mov	r6,a
   04FB A3                 1499 	inc	dptr
   04FC E0                 1500 	movx	a,@dptr
   04FD FF                 1501 	mov	r7,a
   04FE 8D 82              1502 	mov	dpl,r5
   0500 8E 83              1503 	mov	dph,r6
   0502 8F F0              1504 	mov	b,r7
   0504 12s00r00           1505 	lcall	_list_add
   0507 15 81              1506 	dec	sp
   0509 15 81              1507 	dec	sp
   050B 15 81              1508 	dec	sp
   050D 85*00 81           1509 	mov	sp,_bp
   0510 D0*00              1510 	pop	_bp
   0512 22                 1511 	ret
                           1512 ;------------------------------------------------------------
                           1513 ;Allocation info for local variables in function 'ctimer_restart'
                           1514 ;------------------------------------------------------------
                           1515 ;c                         Allocated to registers r2 r3 r4 
                           1516 ;tmp_current               Allocated to stack - offset 1
                           1517 ;------------------------------------------------------------
                           1518 ;	../../../core/sys/ctimer.c:133: ctimer_restart(struct ctimer *c)
                           1519 ;	-----------------------------------------
                           1520 ;	 function ctimer_restart
                           1521 ;	-----------------------------------------
   0513                    1522 _ctimer_restart:
   0513 C0*00              1523 	push	_bp
   0515 85 81*00           1524 	mov	_bp,sp
   0518 05 81              1525 	inc	sp
   051A 05 81              1526 	inc	sp
   051C 05 81              1527 	inc	sp
   051E AA 82              1528 	mov	r2,dpl
   0520 AB 83              1529 	mov	r3,dph
   0522 AC F0              1530 	mov	r4,b
                           1531 ;	../../../core/sys/ctimer.c:135: if(initialized) {
   0524 90s00r00           1532 	mov	dptr,#_initialized
   0527 E0                 1533 	movx	a,@dptr
   0528 FD                 1534 	mov	r5,a
   0529 60 51              1535 	jz	00102$
                           1536 ;	../../../core/sys/ctimer.c:136: PROCESS_CONTEXT_BEGIN(&ctimer_process);
   052B 90s00r00           1537 	mov	dptr,#_process_current
   052E E0                 1538 	movx	a,@dptr
   052F FD                 1539 	mov	r5,a
   0530 A3                 1540 	inc	dptr
   0531 E0                 1541 	movx	a,@dptr
   0532 FE                 1542 	mov	r6,a
   0533 A3                 1543 	inc	dptr
   0534 E0                 1544 	movx	a,@dptr
   0535 FF                 1545 	mov	r7,a
   0536 A8*00              1546 	mov	r0,_bp
   0538 08                 1547 	inc	r0
   0539 A6 05              1548 	mov	@r0,ar5
   053B 08                 1549 	inc	r0
   053C A6 06              1550 	mov	@r0,ar6
   053E 08                 1551 	inc	r0
   053F A6 07              1552 	mov	@r0,ar7
   0541 90s00r00           1553 	mov	dptr,#_process_current
   0544 74r06              1554 	mov	a,#_ctimer_process
   0546 F0                 1555 	movx	@dptr,a
   0547 A3                 1556 	inc	dptr
   0548 74s00              1557 	mov	a,#(_ctimer_process >> 8)
   054A F0                 1558 	movx	@dptr,a
   054B A3                 1559 	inc	dptr
   054C E4                 1560 	clr	a
   054D F0                 1561 	movx	@dptr,a
                           1562 ;	../../../core/sys/ctimer.c:137: etimer_restart(&c->etimer);
   054E 74 03              1563 	mov	a,#0x03
   0550 2A                 1564 	add	a,r2
   0551 FD                 1565 	mov	r5,a
   0552 E4                 1566 	clr	a
   0553 3B                 1567 	addc	a,r3
   0554 FE                 1568 	mov	r6,a
   0555 8C 07              1569 	mov	ar7,r4
   0557 8D 82              1570 	mov	dpl,r5
   0559 8E 83              1571 	mov	dph,r6
   055B 8F F0              1572 	mov	b,r7
   055D C0 02              1573 	push	ar2
   055F C0 03              1574 	push	ar3
   0561 C0 04              1575 	push	ar4
   0563 12s00r00           1576 	lcall	_etimer_restart
   0566 D0 04              1577 	pop	ar4
   0568 D0 03              1578 	pop	ar3
   056A D0 02              1579 	pop	ar2
                           1580 ;	../../../core/sys/ctimer.c:138: PROCESS_CONTEXT_END(&ctimer_process);
   056C A8*00              1581 	mov	r0,_bp
   056E 08                 1582 	inc	r0
   056F 90s00r00           1583 	mov	dptr,#_process_current
   0572 E6                 1584 	mov	a,@r0
   0573 F0                 1585 	movx	@dptr,a
   0574 08                 1586 	inc	r0
   0575 A3                 1587 	inc	dptr
   0576 E6                 1588 	mov	a,@r0
   0577 F0                 1589 	movx	@dptr,a
   0578 08                 1590 	inc	r0
   0579 A3                 1591 	inc	dptr
   057A E6                 1592 	mov	a,@r0
   057B F0                 1593 	movx	@dptr,a
   057C                    1594 00102$:
                           1595 ;	../../../core/sys/ctimer.c:141: list_remove(ctimer_list, c);
   057C 90s00r03           1596 	mov	dptr,#_ctimer_list
   057F E0                 1597 	movx	a,@dptr
   0580 FD                 1598 	mov	r5,a
   0581 A3                 1599 	inc	dptr
   0582 E0                 1600 	movx	a,@dptr
   0583 FE                 1601 	mov	r6,a
   0584 A3                 1602 	inc	dptr
   0585 E0                 1603 	movx	a,@dptr
   0586 FF                 1604 	mov	r7,a
   0587 C0 02              1605 	push	ar2
   0589 C0 03              1606 	push	ar3
   058B C0 04              1607 	push	ar4
   058D C0 02              1608 	push	ar2
   058F C0 03              1609 	push	ar3
   0591 C0 04              1610 	push	ar4
   0593 8D 82              1611 	mov	dpl,r5
   0595 8E 83              1612 	mov	dph,r6
   0597 8F F0              1613 	mov	b,r7
   0599 12s00r00           1614 	lcall	_list_remove
   059C 15 81              1615 	dec	sp
   059E 15 81              1616 	dec	sp
   05A0 15 81              1617 	dec	sp
                           1618 ;	../../../core/sys/ctimer.c:142: list_add(ctimer_list, c);
   05A2 90s00r03           1619 	mov	dptr,#_ctimer_list
   05A5 E0                 1620 	movx	a,@dptr
   05A6 FD                 1621 	mov	r5,a
   05A7 A3                 1622 	inc	dptr
   05A8 E0                 1623 	movx	a,@dptr
   05A9 FE                 1624 	mov	r6,a
   05AA A3                 1625 	inc	dptr
   05AB E0                 1626 	movx	a,@dptr
   05AC FF                 1627 	mov	r7,a
   05AD 8D 82              1628 	mov	dpl,r5
   05AF 8E 83              1629 	mov	dph,r6
   05B1 8F F0              1630 	mov	b,r7
   05B3 12s00r00           1631 	lcall	_list_add
   05B6 15 81              1632 	dec	sp
   05B8 15 81              1633 	dec	sp
   05BA 15 81              1634 	dec	sp
   05BC 85*00 81           1635 	mov	sp,_bp
   05BF D0*00              1636 	pop	_bp
   05C1 22                 1637 	ret
                           1638 ;------------------------------------------------------------
                           1639 ;Allocation info for local variables in function 'ctimer_stop'
                           1640 ;------------------------------------------------------------
                           1641 ;c                         Allocated to registers r2 r3 r4 
                           1642 ;sloc0                     Allocated to stack - offset 1
                           1643 ;------------------------------------------------------------
                           1644 ;	../../../core/sys/ctimer.c:146: ctimer_stop(struct ctimer *c)
                           1645 ;	-----------------------------------------
                           1646 ;	 function ctimer_stop
                           1647 ;	-----------------------------------------
   05C2                    1648 _ctimer_stop:
   05C2 C0*00              1649 	push	_bp
   05C4 85 81*00           1650 	mov	_bp,sp
   05C7 05 81              1651 	inc	sp
   05C9 05 81              1652 	inc	sp
   05CB 05 81              1653 	inc	sp
   05CD AA 82              1654 	mov	r2,dpl
   05CF AB 83              1655 	mov	r3,dph
   05D1 AC F0              1656 	mov	r4,b
                           1657 ;	../../../core/sys/ctimer.c:148: if(initialized) {
   05D3 90s00r00           1658 	mov	dptr,#_initialized
   05D6 E0                 1659 	movx	a,@dptr
   05D7 FD                 1660 	mov	r5,a
   05D8 60 20              1661 	jz	00102$
                           1662 ;	../../../core/sys/ctimer.c:149: etimer_stop(&c->etimer);
   05DA 74 03              1663 	mov	a,#0x03
   05DC 2A                 1664 	add	a,r2
   05DD FD                 1665 	mov	r5,a
   05DE E4                 1666 	clr	a
   05DF 3B                 1667 	addc	a,r3
   05E0 FE                 1668 	mov	r6,a
   05E1 8C 07              1669 	mov	ar7,r4
   05E3 8D 82              1670 	mov	dpl,r5
   05E5 8E 83              1671 	mov	dph,r6
   05E7 8F F0              1672 	mov	b,r7
   05E9 C0 02              1673 	push	ar2
   05EB C0 03              1674 	push	ar3
   05ED C0 04              1675 	push	ar4
   05EF 12s00r00           1676 	lcall	_etimer_stop
   05F2 D0 04              1677 	pop	ar4
   05F4 D0 03              1678 	pop	ar3
   05F6 D0 02              1679 	pop	ar2
   05F8 80 57              1680 	sjmp	00103$
   05FA                    1681 00102$:
                           1682 ;	../../../core/sys/ctimer.c:151: c->etimer.next = NULL;
   05FA 74 03              1683 	mov	a,#0x03
   05FC 2A                 1684 	add	a,r2
   05FD FD                 1685 	mov	r5,a
   05FE E4                 1686 	clr	a
   05FF 3B                 1687 	addc	a,r3
   0600 FE                 1688 	mov	r6,a
   0601 8C 07              1689 	mov	ar7,r4
   0603 C0 02              1690 	push	ar2
   0605 C0 03              1691 	push	ar3
   0607 C0 04              1692 	push	ar4
   0609 A8*00              1693 	mov	r0,_bp
   060B 08                 1694 	inc	r0
   060C 74 04              1695 	mov	a,#0x04
   060E 2D                 1696 	add	a,r5
   060F F6                 1697 	mov	@r0,a
   0610 E4                 1698 	clr	a
   0611 3E                 1699 	addc	a,r6
   0612 08                 1700 	inc	r0
   0613 F6                 1701 	mov	@r0,a
   0614 08                 1702 	inc	r0
   0615 A6 07              1703 	mov	@r0,ar7
   0617 A8*00              1704 	mov	r0,_bp
   0619 08                 1705 	inc	r0
   061A 86 82              1706 	mov	dpl,@r0
   061C 08                 1707 	inc	r0
   061D 86 83              1708 	mov	dph,@r0
   061F 08                 1709 	inc	r0
   0620 86 F0              1710 	mov	b,@r0
   0622 E4                 1711 	clr	a
   0623 12s00r00           1712 	lcall	__gptrput
   0626 A3                 1713 	inc	dptr
   0627 E4                 1714 	clr	a
   0628 12s00r00           1715 	lcall	__gptrput
   062B A3                 1716 	inc	dptr
   062C E4                 1717 	clr	a
   062D 12s00r00           1718 	lcall	__gptrput
                           1719 ;	../../../core/sys/ctimer.c:152: c->etimer.p = PROCESS_NONE;
   0630 74 07              1720 	mov	a,#0x07
   0632 2D                 1721 	add	a,r5
   0633 FD                 1722 	mov	r5,a
   0634 E4                 1723 	clr	a
   0635 3E                 1724 	addc	a,r6
   0636 FE                 1725 	mov	r6,a
   0637 8D 82              1726 	mov	dpl,r5
   0639 8E 83              1727 	mov	dph,r6
   063B 8F F0              1728 	mov	b,r7
   063D E4                 1729 	clr	a
   063E 12s00r00           1730 	lcall	__gptrput
   0641 A3                 1731 	inc	dptr
   0642 E4                 1732 	clr	a
   0643 12s00r00           1733 	lcall	__gptrput
   0646 A3                 1734 	inc	dptr
   0647 E4                 1735 	clr	a
   0648 12s00r00           1736 	lcall	__gptrput
                           1737 ;	../../../core/sys/ctimer.c:154: list_remove(ctimer_list, c);
   064B D0 04              1738 	pop	ar4
   064D D0 03              1739 	pop	ar3
   064F D0 02              1740 	pop	ar2
                           1741 ;	../../../core/sys/ctimer.c:152: c->etimer.p = PROCESS_NONE;
   0651                    1742 00103$:
                           1743 ;	../../../core/sys/ctimer.c:154: list_remove(ctimer_list, c);
   0651 90s00r03           1744 	mov	dptr,#_ctimer_list
   0654 E0                 1745 	movx	a,@dptr
   0655 FD                 1746 	mov	r5,a
   0656 A3                 1747 	inc	dptr
   0657 E0                 1748 	movx	a,@dptr
   0658 FE                 1749 	mov	r6,a
   0659 A3                 1750 	inc	dptr
   065A E0                 1751 	movx	a,@dptr
   065B FF                 1752 	mov	r7,a
   065C C0 02              1753 	push	ar2
   065E C0 03              1754 	push	ar3
   0660 C0 04              1755 	push	ar4
   0662 8D 82              1756 	mov	dpl,r5
   0664 8E 83              1757 	mov	dph,r6
   0666 8F F0              1758 	mov	b,r7
   0668 12s00r00           1759 	lcall	_list_remove
   066B 15 81              1760 	dec	sp
   066D 15 81              1761 	dec	sp
   066F 15 81              1762 	dec	sp
   0671 85*00 81           1763 	mov	sp,_bp
   0674 D0*00              1764 	pop	_bp
   0676 22                 1765 	ret
                           1766 ;------------------------------------------------------------
                           1767 ;Allocation info for local variables in function 'ctimer_expired'
                           1768 ;------------------------------------------------------------
                           1769 ;c                         Allocated to registers r2 r3 r4 
                           1770 ;t                         Allocated to registers r5 r6 r7 
                           1771 ;------------------------------------------------------------
                           1772 ;	../../../core/sys/ctimer.c:158: ctimer_expired(struct ctimer *c)
                           1773 ;	-----------------------------------------
                           1774 ;	 function ctimer_expired
                           1775 ;	-----------------------------------------
   0677                    1776 _ctimer_expired:
   0677 AA 82              1777 	mov	r2,dpl
   0679 AB 83              1778 	mov	r3,dph
   067B AC F0              1779 	mov	r4,b
                           1780 ;	../../../core/sys/ctimer.c:161: if(initialized) {
   067D 90s00r00           1781 	mov	dptr,#_initialized
   0680 E0                 1782 	movx	a,@dptr
   0681 FD                 1783 	mov	r5,a
   0682 60 12              1784 	jz	00102$
                           1785 ;	../../../core/sys/ctimer.c:162: return etimer_expired(&c->etimer);
   0684 74 03              1786 	mov	a,#0x03
   0686 2A                 1787 	add	a,r2
   0687 FD                 1788 	mov	r5,a
   0688 E4                 1789 	clr	a
   0689 3B                 1790 	addc	a,r3
   068A FE                 1791 	mov	r6,a
   068B 8C 07              1792 	mov	ar7,r4
   068D 8D 82              1793 	mov	dpl,r5
   068F 8E 83              1794 	mov	dph,r6
   0691 8F F0              1795 	mov	b,r7
   0693 02s00r00           1796 	ljmp	_etimer_expired
   0696                    1797 00102$:
                           1798 ;	../../../core/sys/ctimer.c:164: for(t = list_head(ctimer_list); t != NULL; t = t->next) {
   0696 90s00r03           1799 	mov	dptr,#_ctimer_list
   0699 E0                 1800 	movx	a,@dptr
   069A FD                 1801 	mov	r5,a
   069B A3                 1802 	inc	dptr
   069C E0                 1803 	movx	a,@dptr
   069D FE                 1804 	mov	r6,a
   069E A3                 1805 	inc	dptr
   069F E0                 1806 	movx	a,@dptr
   06A0 FF                 1807 	mov	r7,a
   06A1 8D 82              1808 	mov	dpl,r5
   06A3 8E 83              1809 	mov	dph,r6
   06A5 8F F0              1810 	mov	b,r7
   06A7 C0 02              1811 	push	ar2
   06A9 C0 03              1812 	push	ar3
   06AB C0 04              1813 	push	ar4
   06AD 12s00r00           1814 	lcall	_list_head
   06B0 AD 82              1815 	mov	r5,dpl
   06B2 AE 83              1816 	mov	r6,dph
   06B4 AF F0              1817 	mov	r7,b
   06B6 D0 04              1818 	pop	ar4
   06B8 D0 03              1819 	pop	ar3
   06BA D0 02              1820 	pop	ar2
   06BC                    1821 00105$:
   06BC BD 00 08           1822 	cjne	r5,#0x00,00116$
   06BF BE 00 05           1823 	cjne	r6,#0x00,00116$
   06C2 BF 00 02           1824 	cjne	r7,#0x00,00116$
   06C5 80 26              1825 	sjmp	00108$
   06C7                    1826 00116$:
                           1827 ;	../../../core/sys/ctimer.c:165: if(t == c) {
   06C7 ED                 1828 	mov	a,r5
   06C8 B5 02 0C           1829 	cjne	a,ar2,00107$
   06CB EE                 1830 	mov	a,r6
   06CC B5 03 08           1831 	cjne	a,ar3,00107$
   06CF EF                 1832 	mov	a,r7
   06D0 B5 04 04           1833 	cjne	a,ar4,00107$
                           1834 ;	../../../core/sys/ctimer.c:166: return 0;
   06D3 90 00 00           1835 	mov	dptr,#0x0000
   06D6 22                 1836 	ret
   06D7                    1837 00107$:
                           1838 ;	../../../core/sys/ctimer.c:164: for(t = list_head(ctimer_list); t != NULL; t = t->next) {
   06D7 8D 82              1839 	mov	dpl,r5
   06D9 8E 83              1840 	mov	dph,r6
   06DB 8F F0              1841 	mov	b,r7
   06DD 12s00r00           1842 	lcall	__gptrget
   06E0 FD                 1843 	mov	r5,a
   06E1 A3                 1844 	inc	dptr
   06E2 12s00r00           1845 	lcall	__gptrget
   06E5 FE                 1846 	mov	r6,a
   06E6 A3                 1847 	inc	dptr
   06E7 12s00r00           1848 	lcall	__gptrget
   06EA FF                 1849 	mov	r7,a
   06EB 80 CF              1850 	sjmp	00105$
   06ED                    1851 00108$:
                           1852 ;	../../../core/sys/ctimer.c:169: return 1;
   06ED 90 00 01           1853 	mov	dptr,#0x0001
   06F0 22                 1854 	ret
                           1855 	.area CSEG    (CODE)
                           1856 	.area CONST   (CODE)
                           1857 	.area XINIT   (CODE)
   0000                    1858 __xinit__ctimer_list_list:
                           1859 ; generic printIvalPtr
   0000 00 00 00           1860 	.byte #0x00,#0x00,#0x00
   0003                    1861 __xinit__ctimer_list:
   0003r00s00 00           1862 	.byte _ctimer_list_list,(_ctimer_list_list >> 8),#0x00
   0006                    1863 __xinit__ctimer_process:
                           1864 ; generic printIvalPtr
   0006 00 00 00           1865 	.byte #0x00,#0x00,#0x00
   0009r00s00              1866 	.byte _process_thread_ctimer_process,(_process_thread_ctimer_process >> 8)
   000B 00 00              1867 	.byte #0x00,#0x00	; 0
   000D 00                 1868 	.db #0x00	; 0
   000E 00                 1869 	.db #0x00	; 0
                           1870 	.area CABS    (ABS,CODE)
