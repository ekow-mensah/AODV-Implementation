                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:27:24 2018
                              5 ;--------------------------------------------------------
                              6 	.module uip_over_mesh
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _IRCON2_P2IF
                             13 	.globl _IRCON2_UTX0IF
                             14 	.globl _IRCON2_UTX1IF
                             15 	.globl _IRCON2_P1IF
                             16 	.globl _IRCON2_WDTIF
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _IRCON_DMAIF
                             26 	.globl _IRCON_T1IF
                             27 	.globl _IRCON_T2IF
                             28 	.globl _IRCON_T3IF
                             29 	.globl _IRCON_T4IF
                             30 	.globl _IRCON_P0IF
                             31 	.globl _IRCON_STIF
                             32 	.globl _IEN1_DMAIE
                             33 	.globl _IEN1_T1IE
                             34 	.globl _IEN1_T2IE
                             35 	.globl _IEN1_T3IE
                             36 	.globl _IEN1_T4IE
                             37 	.globl _IEN1_P0IE
                             38 	.globl _IEN0_RFERRIE
                             39 	.globl _IEN0_ADCIE
                             40 	.globl _IEN0_URX0IE
                             41 	.globl _IEN0_URX1IE
                             42 	.globl _IEN0_ENCIE
                             43 	.globl _IEN0_STIE
                             44 	.globl _IEN0_EA
                             45 	.globl _EA
                             46 	.globl _P2_4
                             47 	.globl _P2_3
                             48 	.globl _P2_2
                             49 	.globl _P2_1
                             50 	.globl _P2_0
                             51 	.globl _S0CON_ENCIF_0
                             52 	.globl _S0CON_ENCIF_1
                             53 	.globl _P1_7
                             54 	.globl _P1_6
                             55 	.globl _P1_5
                             56 	.globl _P1_4
                             57 	.globl _P1_3
                             58 	.globl _P1_2
                             59 	.globl _P1_1
                             60 	.globl _P1_0
                             61 	.globl _TCON_IT0
                             62 	.globl _TCON_RFERRIF
                             63 	.globl _TCON_IT1
                             64 	.globl _TCON_URX0IF
                             65 	.globl _TCON_ADCIF
                             66 	.globl _TCON_URX1IF
                             67 	.globl _P0_0
                             68 	.globl _P0_1
                             69 	.globl _P0_2
                             70 	.globl _P0_3
                             71 	.globl _P0_4
                             72 	.globl _P0_5
                             73 	.globl _P0_6
                             74 	.globl _P0_7
                             75 	.globl _P2DIR
                             76 	.globl _P1DIR
                             77 	.globl _P0DIR
                             78 	.globl _U1GCR
                             79 	.globl _U1UCR
                             80 	.globl _U1BAUD
                             81 	.globl _U1BUF
                             82 	.globl _U1CSR
                             83 	.globl _P2INP
                             84 	.globl _P1INP
                             85 	.globl _P2SEL
                             86 	.globl _P1SEL
                             87 	.globl _P0SEL
                             88 	.globl _ADCCFG
                             89 	.globl _PERCFG
                             90 	.globl _B
                             91 	.globl _T4CC1
                             92 	.globl _T4CCTL1
                             93 	.globl _T4CC0
                             94 	.globl _T4CCTL0
                             95 	.globl _T4CTL
                             96 	.globl _T4CNT
                             97 	.globl _RFIF
                             98 	.globl _IRCON2
                             99 	.globl _T1CCTL2
                            100 	.globl _T1CCTL1
                            101 	.globl _T1CCTL0
                            102 	.globl _T1CTL
                            103 	.globl _T1CNTH
                            104 	.globl _T1CNTL
                            105 	.globl _RFST
                            106 	.globl _ACC
                            107 	.globl _T1CC2H
                            108 	.globl _T1CC2L
                            109 	.globl _T1CC1H
                            110 	.globl _T1CC1L
                            111 	.globl _T1CC0H
                            112 	.globl _T1CC0L
                            113 	.globl _RFD
                            114 	.globl _TIMIF
                            115 	.globl _DMAREQ
                            116 	.globl _DMAARM
                            117 	.globl _DMA0CFGH
                            118 	.globl _DMA0CFGL
                            119 	.globl _DMA1CFGH
                            120 	.globl _DMA1CFGL
                            121 	.globl _DMAIRQ
                            122 	.globl _PSW
                            123 	.globl _T3CC1
                            124 	.globl _T3CCTL1
                            125 	.globl _T3CC0
                            126 	.globl _T3CCTL0
                            127 	.globl _T3CTL
                            128 	.globl _T3CNT
                            129 	.globl _WDCTL
                            130 	.globl _T2CON
                            131 	.globl _MEMCTR
                            132 	.globl _CLKCON
                            133 	.globl _U0GCR
                            134 	.globl _U0UCR
                            135 	.globl _T2CNF
                            136 	.globl _U0BAUD
                            137 	.globl _U0BUF
                            138 	.globl _IRCON
                            139 	.globl _SLEEP
                            140 	.globl _RNDH
                            141 	.globl _RNDL
                            142 	.globl _ADCH
                            143 	.globl _ADCL
                            144 	.globl _IP1
                            145 	.globl _IEN1
                            146 	.globl _RCCTL
                            147 	.globl _ADCCON3
                            148 	.globl _ADCCON2
                            149 	.globl _ADCCON1
                            150 	.globl _ENCCS
                            151 	.globl _ENCDO
                            152 	.globl _ENCDI
                            153 	.globl _FWDATA
                            154 	.globl _FCTL
                            155 	.globl _FADDRH
                            156 	.globl _FADDRL
                            157 	.globl _FWT
                            158 	.globl _IP0
                            159 	.globl _IEN0
                            160 	.globl _IE
                            161 	.globl _T2THD
                            162 	.globl _T2TLD
                            163 	.globl _T2CAPHPH
                            164 	.globl _T2CAPLPL
                            165 	.globl _T2OF2
                            166 	.globl _T2OF1
                            167 	.globl _T2OF0
                            168 	.globl _P2
                            169 	.globl _PSBANK
                            170 	.globl _FMAP
                            171 	.globl _T2PEROF2
                            172 	.globl _T2PEROF1
                            173 	.globl _T2PEROF0
                            174 	.globl _S1CON
                            175 	.globl _IEN2
                            176 	.globl _HSRC
                            177 	.globl _S0CON
                            178 	.globl _ST2
                            179 	.globl _ST1
                            180 	.globl _ST0
                            181 	.globl _T2CMP
                            182 	.globl __XPAGE
                            183 	.globl _DPS
                            184 	.globl _RFIM
                            185 	.globl _P1
                            186 	.globl _P0INP
                            187 	.globl _P1IEN
                            188 	.globl _PICTL
                            189 	.globl _P2IFG
                            190 	.globl _P1IFG
                            191 	.globl _P0IFG
                            192 	.globl _TCON
                            193 	.globl _PCON
                            194 	.globl _U0CSR
                            195 	.globl _DPH1
                            196 	.globl _DPL1
                            197 	.globl _DPH0
                            198 	.globl _DPL0
                            199 	.globl _SP
                            200 	.globl _P0
                            201 	.globl _ADC_SHADOW
                            202 	.globl _U1BUF_SHADOW
                            203 	.globl _RFD_SHADOW
                            204 	.globl _U0BUF_SHADOW
                            205 	.globl _RFSTATUS
                            206 	.globl _CHIPID
                            207 	.globl _CHVER
                            208 	.globl _FSMTC1
                            209 	.globl _RXFIFOCNT
                            210 	.globl _IOCFG3
                            211 	.globl _IOCFG2
                            212 	.globl _IOCFG1
                            213 	.globl _IOCFG0
                            214 	.globl _SHORTADDRL
                            215 	.globl _SHORTADDRH
                            216 	.globl _PANIDL
                            217 	.globl _PANIDH
                            218 	.globl _IEEE_ADDR7
                            219 	.globl _IEEE_ADDR6
                            220 	.globl _IEEE_ADDR5
                            221 	.globl _IEEE_ADDR4
                            222 	.globl _IEEE_ADDR3
                            223 	.globl _IEEE_ADDR2
                            224 	.globl _IEEE_ADDR1
                            225 	.globl _IEEE_ADDR0
                            226 	.globl _DACTSTL
                            227 	.globl _DACTSTH
                            228 	.globl _ADCTSTL
                            229 	.globl _ADCTSTH
                            230 	.globl _FSMSTATE
                            231 	.globl _AGCCTRLL
                            232 	.globl _AGCCTRLH
                            233 	.globl _MANORL
                            234 	.globl _MANORH
                            235 	.globl _MANANDL
                            236 	.globl _MANANDH
                            237 	.globl _FSMTCL
                            238 	.globl _FSMTCH
                            239 	.globl _RFPWR
                            240 	.globl _CSPT
                            241 	.globl _CSPCTRL
                            242 	.globl _CSPZ
                            243 	.globl _CSPY
                            244 	.globl _CSPX
                            245 	.globl _FSCTRLL
                            246 	.globl _FSCTRLH
                            247 	.globl _RXCTRL1L
                            248 	.globl _RXCTRL1H
                            249 	.globl _RXCTRL0L
                            250 	.globl _RXCTRL0H
                            251 	.globl _TXCTRLL
                            252 	.globl _TXCTRLH
                            253 	.globl _SYNCWORDL
                            254 	.globl _SYNCWORDH
                            255 	.globl _RSSIL
                            256 	.globl _RSSIH
                            257 	.globl _MDMCTRL1L
                            258 	.globl _MDMCTRL1H
                            259 	.globl _MDMCTRL0L
                            260 	.globl _MDMCTRL0H
                            261 	.globl _uip_over_mesh_make_announced_gateway
                            262 	.globl _uip_over_mesh_init
                            263 	.globl _uip_over_mesh_send
                            264 	.globl _uip_over_mesh_set_gateway_netif
                            265 	.globl _uip_over_mesh_set_gateway
                            266 	.globl _uip_over_mesh_set_net
                            267 ;--------------------------------------------------------
                            268 ; special function registers
                            269 ;--------------------------------------------------------
                            270 	.area RSEG    (ABS,DATA)
   0000                     271 	.org 0x0000
                    0080    272 _P0	=	0x0080
                    0081    273 _SP	=	0x0081
                    0082    274 _DPL0	=	0x0082
                    0083    275 _DPH0	=	0x0083
                    0084    276 _DPL1	=	0x0084
                    0085    277 _DPH1	=	0x0085
                    0086    278 _U0CSR	=	0x0086
                    0087    279 _PCON	=	0x0087
                    0088    280 _TCON	=	0x0088
                    0089    281 _P0IFG	=	0x0089
                    008A    282 _P1IFG	=	0x008a
                    008B    283 _P2IFG	=	0x008b
                    008C    284 _PICTL	=	0x008c
                    008D    285 _P1IEN	=	0x008d
                    008F    286 _P0INP	=	0x008f
                    0090    287 _P1	=	0x0090
                    0091    288 _RFIM	=	0x0091
                    0092    289 _DPS	=	0x0092
                    0093    290 __XPAGE	=	0x0093
                    0094    291 _T2CMP	=	0x0094
                    0095    292 _ST0	=	0x0095
                    0096    293 _ST1	=	0x0096
                    0097    294 _ST2	=	0x0097
                    0098    295 _S0CON	=	0x0098
                    0099    296 _HSRC	=	0x0099
                    009A    297 _IEN2	=	0x009a
                    009B    298 _S1CON	=	0x009b
                    009C    299 _T2PEROF0	=	0x009c
                    009D    300 _T2PEROF1	=	0x009d
                    009E    301 _T2PEROF2	=	0x009e
                    009F    302 _FMAP	=	0x009f
                    009F    303 _PSBANK	=	0x009f
                    00A0    304 _P2	=	0x00a0
                    00A1    305 _T2OF0	=	0x00a1
                    00A2    306 _T2OF1	=	0x00a2
                    00A3    307 _T2OF2	=	0x00a3
                    00A4    308 _T2CAPLPL	=	0x00a4
                    00A5    309 _T2CAPHPH	=	0x00a5
                    00A6    310 _T2TLD	=	0x00a6
                    00A7    311 _T2THD	=	0x00a7
                    00A8    312 _IE	=	0x00a8
                    00A8    313 _IEN0	=	0x00a8
                    00A9    314 _IP0	=	0x00a9
                    00AB    315 _FWT	=	0x00ab
                    00AC    316 _FADDRL	=	0x00ac
                    00AD    317 _FADDRH	=	0x00ad
                    00AE    318 _FCTL	=	0x00ae
                    00AF    319 _FWDATA	=	0x00af
                    00B1    320 _ENCDI	=	0x00b1
                    00B2    321 _ENCDO	=	0x00b2
                    00B3    322 _ENCCS	=	0x00b3
                    00B4    323 _ADCCON1	=	0x00b4
                    00B5    324 _ADCCON2	=	0x00b5
                    00B6    325 _ADCCON3	=	0x00b6
                    00B7    326 _RCCTL	=	0x00b7
                    00B8    327 _IEN1	=	0x00b8
                    00B9    328 _IP1	=	0x00b9
                    00BA    329 _ADCL	=	0x00ba
                    00BB    330 _ADCH	=	0x00bb
                    00BC    331 _RNDL	=	0x00bc
                    00BD    332 _RNDH	=	0x00bd
                    00BE    333 _SLEEP	=	0x00be
                    00C0    334 _IRCON	=	0x00c0
                    00C1    335 _U0BUF	=	0x00c1
                    00C2    336 _U0BAUD	=	0x00c2
                    00C3    337 _T2CNF	=	0x00c3
                    00C4    338 _U0UCR	=	0x00c4
                    00C5    339 _U0GCR	=	0x00c5
                    00C6    340 _CLKCON	=	0x00c6
                    00C7    341 _MEMCTR	=	0x00c7
                    00C8    342 _T2CON	=	0x00c8
                    00C9    343 _WDCTL	=	0x00c9
                    00CA    344 _T3CNT	=	0x00ca
                    00CB    345 _T3CTL	=	0x00cb
                    00CC    346 _T3CCTL0	=	0x00cc
                    00CD    347 _T3CC0	=	0x00cd
                    00CE    348 _T3CCTL1	=	0x00ce
                    00CF    349 _T3CC1	=	0x00cf
                    00D0    350 _PSW	=	0x00d0
                    00D1    351 _DMAIRQ	=	0x00d1
                    00D2    352 _DMA1CFGL	=	0x00d2
                    00D3    353 _DMA1CFGH	=	0x00d3
                    00D4    354 _DMA0CFGL	=	0x00d4
                    00D5    355 _DMA0CFGH	=	0x00d5
                    00D6    356 _DMAARM	=	0x00d6
                    00D7    357 _DMAREQ	=	0x00d7
                    00D8    358 _TIMIF	=	0x00d8
                    00D9    359 _RFD	=	0x00d9
                    00DA    360 _T1CC0L	=	0x00da
                    00DB    361 _T1CC0H	=	0x00db
                    00DC    362 _T1CC1L	=	0x00dc
                    00DD    363 _T1CC1H	=	0x00dd
                    00DE    364 _T1CC2L	=	0x00de
                    00DF    365 _T1CC2H	=	0x00df
                    00E0    366 _ACC	=	0x00e0
                    00E1    367 _RFST	=	0x00e1
                    00E2    368 _T1CNTL	=	0x00e2
                    00E3    369 _T1CNTH	=	0x00e3
                    00E4    370 _T1CTL	=	0x00e4
                    00E5    371 _T1CCTL0	=	0x00e5
                    00E6    372 _T1CCTL1	=	0x00e6
                    00E7    373 _T1CCTL2	=	0x00e7
                    00E8    374 _IRCON2	=	0x00e8
                    00E9    375 _RFIF	=	0x00e9
                    00EA    376 _T4CNT	=	0x00ea
                    00EB    377 _T4CTL	=	0x00eb
                    00EC    378 _T4CCTL0	=	0x00ec
                    00ED    379 _T4CC0	=	0x00ed
                    00EE    380 _T4CCTL1	=	0x00ee
                    00EF    381 _T4CC1	=	0x00ef
                    00F0    382 _B	=	0x00f0
                    00F1    383 _PERCFG	=	0x00f1
                    00F2    384 _ADCCFG	=	0x00f2
                    00F3    385 _P0SEL	=	0x00f3
                    00F4    386 _P1SEL	=	0x00f4
                    00F5    387 _P2SEL	=	0x00f5
                    00F6    388 _P1INP	=	0x00f6
                    00F7    389 _P2INP	=	0x00f7
                    00F8    390 _U1CSR	=	0x00f8
                    00F9    391 _U1BUF	=	0x00f9
                    00FA    392 _U1BAUD	=	0x00fa
                    00FB    393 _U1UCR	=	0x00fb
                    00FC    394 _U1GCR	=	0x00fc
                    00FD    395 _P0DIR	=	0x00fd
                    00FE    396 _P1DIR	=	0x00fe
                    00FF    397 _P2DIR	=	0x00ff
                            398 ;--------------------------------------------------------
                            399 ; special function bits
                            400 ;--------------------------------------------------------
                            401 	.area RSEG    (ABS,DATA)
   0000                     402 	.org 0x0000
                    0087    403 _P0_7	=	0x0087
                    0086    404 _P0_6	=	0x0086
                    0085    405 _P0_5	=	0x0085
                    0084    406 _P0_4	=	0x0084
                    0083    407 _P0_3	=	0x0083
                    0082    408 _P0_2	=	0x0082
                    0081    409 _P0_1	=	0x0081
                    0080    410 _P0_0	=	0x0080
                    008F    411 _TCON_URX1IF	=	0x008f
                    008D    412 _TCON_ADCIF	=	0x008d
                    008B    413 _TCON_URX0IF	=	0x008b
                    008A    414 _TCON_IT1	=	0x008a
                    0089    415 _TCON_RFERRIF	=	0x0089
                    0088    416 _TCON_IT0	=	0x0088
                    0090    417 _P1_0	=	0x0090
                    0091    418 _P1_1	=	0x0091
                    0092    419 _P1_2	=	0x0092
                    0093    420 _P1_3	=	0x0093
                    0094    421 _P1_4	=	0x0094
                    0095    422 _P1_5	=	0x0095
                    0096    423 _P1_6	=	0x0096
                    0097    424 _P1_7	=	0x0097
                    0099    425 _S0CON_ENCIF_1	=	0x0099
                    0098    426 _S0CON_ENCIF_0	=	0x0098
                    00A0    427 _P2_0	=	0x00a0
                    00A1    428 _P2_1	=	0x00a1
                    00A2    429 _P2_2	=	0x00a2
                    00A3    430 _P2_3	=	0x00a3
                    00A4    431 _P2_4	=	0x00a4
                    00AF    432 _EA	=	0x00af
                    00AF    433 _IEN0_EA	=	0x00af
                    00AD    434 _IEN0_STIE	=	0x00ad
                    00AC    435 _IEN0_ENCIE	=	0x00ac
                    00AB    436 _IEN0_URX1IE	=	0x00ab
                    00AA    437 _IEN0_URX0IE	=	0x00aa
                    00A9    438 _IEN0_ADCIE	=	0x00a9
                    00A8    439 _IEN0_RFERRIE	=	0x00a8
                    00BD    440 _IEN1_P0IE	=	0x00bd
                    00BC    441 _IEN1_T4IE	=	0x00bc
                    00BB    442 _IEN1_T3IE	=	0x00bb
                    00BA    443 _IEN1_T2IE	=	0x00ba
                    00B9    444 _IEN1_T1IE	=	0x00b9
                    00B8    445 _IEN1_DMAIE	=	0x00b8
                    00C7    446 _IRCON_STIF	=	0x00c7
                    00C5    447 _IRCON_P0IF	=	0x00c5
                    00C4    448 _IRCON_T4IF	=	0x00c4
                    00C3    449 _IRCON_T3IF	=	0x00c3
                    00C2    450 _IRCON_T2IF	=	0x00c2
                    00C1    451 _IRCON_T1IF	=	0x00c1
                    00C0    452 _IRCON_DMAIF	=	0x00c0
                    00D0    453 _P	=	0x00d0
                    00D1    454 _F1	=	0x00d1
                    00D2    455 _OV	=	0x00d2
                    00D3    456 _RS0	=	0x00d3
                    00D4    457 _RS1	=	0x00d4
                    00D5    458 _F0	=	0x00d5
                    00D6    459 _AC	=	0x00d6
                    00D7    460 _CY	=	0x00d7
                    00EC    461 _IRCON2_WDTIF	=	0x00ec
                    00EB    462 _IRCON2_P1IF	=	0x00eb
                    00EA    463 _IRCON2_UTX1IF	=	0x00ea
                    00E9    464 _IRCON2_UTX0IF	=	0x00e9
                    00E8    465 _IRCON2_P2IF	=	0x00e8
                            466 ;--------------------------------------------------------
                            467 ; overlayable register banks
                            468 ;--------------------------------------------------------
                            469 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     470 	.ds 8
                            471 ;--------------------------------------------------------
                            472 ; internal ram data
                            473 ;--------------------------------------------------------
                            474 	.area DSEG    (DATA)
                            475 ;--------------------------------------------------------
                            476 ; overlayable items in internal ram 
                            477 ;--------------------------------------------------------
                            478 	.area OSEG    (OVR,DATA)
                            479 ;--------------------------------------------------------
                            480 ; indirectly addressable internal ram data
                            481 ;--------------------------------------------------------
                            482 	.area ISEG    (DATA)
                            483 ;--------------------------------------------------------
                            484 ; absolute internal ram data
                            485 ;--------------------------------------------------------
                            486 	.area IABS    (ABS,DATA)
                            487 	.area IABS    (ABS,DATA)
                            488 ;--------------------------------------------------------
                            489 ; bit data
                            490 ;--------------------------------------------------------
                            491 	.area BSEG    (BIT)
                            492 ;--------------------------------------------------------
                            493 ; paged external ram data
                            494 ;--------------------------------------------------------
                            495 	.area PSEG    (PAG,XDATA)
                            496 ;--------------------------------------------------------
                            497 ; external ram data
                            498 ;--------------------------------------------------------
                            499 	.area XSEG    (XDATA)
                    DF02    500 _MDMCTRL0H	=	0xdf02
                    DF03    501 _MDMCTRL0L	=	0xdf03
                    DF04    502 _MDMCTRL1H	=	0xdf04
                    DF05    503 _MDMCTRL1L	=	0xdf05
                    DF06    504 _RSSIH	=	0xdf06
                    DF07    505 _RSSIL	=	0xdf07
                    DF08    506 _SYNCWORDH	=	0xdf08
                    DF09    507 _SYNCWORDL	=	0xdf09
                    DF0A    508 _TXCTRLH	=	0xdf0a
                    DF0B    509 _TXCTRLL	=	0xdf0b
                    DF0C    510 _RXCTRL0H	=	0xdf0c
                    DF0D    511 _RXCTRL0L	=	0xdf0d
                    DF0E    512 _RXCTRL1H	=	0xdf0e
                    DF0F    513 _RXCTRL1L	=	0xdf0f
                    DF10    514 _FSCTRLH	=	0xdf10
                    DF11    515 _FSCTRLL	=	0xdf11
                    DF12    516 _CSPX	=	0xdf12
                    DF13    517 _CSPY	=	0xdf13
                    DF14    518 _CSPZ	=	0xdf14
                    DF15    519 _CSPCTRL	=	0xdf15
                    DF16    520 _CSPT	=	0xdf16
                    DF17    521 _RFPWR	=	0xdf17
                    DF20    522 _FSMTCH	=	0xdf20
                    DF21    523 _FSMTCL	=	0xdf21
                    DF22    524 _MANANDH	=	0xdf22
                    DF23    525 _MANANDL	=	0xdf23
                    DF24    526 _MANORH	=	0xdf24
                    DF25    527 _MANORL	=	0xdf25
                    DF26    528 _AGCCTRLH	=	0xdf26
                    DF27    529 _AGCCTRLL	=	0xdf27
                    DF39    530 _FSMSTATE	=	0xdf39
                    DF3A    531 _ADCTSTH	=	0xdf3a
                    DF3B    532 _ADCTSTL	=	0xdf3b
                    DF3C    533 _DACTSTH	=	0xdf3c
                    DF3D    534 _DACTSTL	=	0xdf3d
                    DF43    535 _IEEE_ADDR0	=	0xdf43
                    DF44    536 _IEEE_ADDR1	=	0xdf44
                    DF45    537 _IEEE_ADDR2	=	0xdf45
                    DF46    538 _IEEE_ADDR3	=	0xdf46
                    DF47    539 _IEEE_ADDR4	=	0xdf47
                    DF48    540 _IEEE_ADDR5	=	0xdf48
                    DF49    541 _IEEE_ADDR6	=	0xdf49
                    DF4A    542 _IEEE_ADDR7	=	0xdf4a
                    DF4B    543 _PANIDH	=	0xdf4b
                    DF4C    544 _PANIDL	=	0xdf4c
                    DF4D    545 _SHORTADDRH	=	0xdf4d
                    DF4E    546 _SHORTADDRL	=	0xdf4e
                    DF4F    547 _IOCFG0	=	0xdf4f
                    DF50    548 _IOCFG1	=	0xdf50
                    DF51    549 _IOCFG2	=	0xdf51
                    DF52    550 _IOCFG3	=	0xdf52
                    DF53    551 _RXFIFOCNT	=	0xdf53
                    DF54    552 _FSMTC1	=	0xdf54
                    DF60    553 _CHVER	=	0xdf60
                    DF61    554 _CHIPID	=	0xdf61
                    DF62    555 _RFSTATUS	=	0xdf62
                    DFC1    556 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    557 _RFD_SHADOW	=	0xdfd9
                    DFF9    558 _U1BUF_SHADOW	=	0xdff9
                    DFBA    559 _ADC_SHADOW	=	0xdfba
   0000                     560 _queued_packet:
   0000                     561 	.ds 3
   0003                     562 _queued_receiver:
   0003                     563 	.ds 2
   0005                     564 _route_discovery:
   0005                     565 	.ds 101
   006A                     566 _dataconn:
   006A                     567 	.ds 18
   007C                     568 _gateway_announce_conn:
   007C                     569 	.ds 91
   00D7                     570 _gw_netif:
   00D7                     571 	.ds 3
   00DA                     572 _gateway:
   00DA                     573 	.ds 2
   00DC                     574 _netaddr:
   00DC                     575 	.ds 4
   00E0                     576 _netmask:
   00E0                     577 	.ds 4
   00E4                     578 _is_gateway:
   00E4                     579 	.ds 1
                            580 ;--------------------------------------------------------
                            581 ; absolute external ram data
                            582 ;--------------------------------------------------------
                            583 	.area XABS    (ABS,XDATA)
                            584 ;--------------------------------------------------------
                            585 ; external initialized ram data
                            586 ;--------------------------------------------------------
                            587 	.area XISEG   (XDATA)
                            588 	.area HOME    (CODE)
                            589 	.area GSINIT0 (CODE)
                            590 	.area GSINIT1 (CODE)
                            591 	.area GSINIT2 (CODE)
                            592 	.area GSINIT3 (CODE)
                            593 	.area GSINIT4 (CODE)
                            594 	.area GSINIT5 (CODE)
                            595 	.area GSINIT  (CODE)
                            596 	.area GSFINAL (CODE)
                            597 	.area CSEG    (CODE)
                            598 ;--------------------------------------------------------
                            599 ; global & static initialisations
                            600 ;--------------------------------------------------------
                            601 	.area HOME    (CODE)
                            602 	.area GSINIT  (CODE)
                            603 	.area GSFINAL (CODE)
                            604 	.area GSINIT  (CODE)
                            605 ;--------------------------------------------------------
                            606 ; Home
                            607 ;--------------------------------------------------------
                            608 	.area HOME    (CODE)
                            609 	.area HOME    (CODE)
                            610 ;--------------------------------------------------------
                            611 ; code
                            612 ;--------------------------------------------------------
                            613 	.area CSEG    (CODE)
                            614 ;------------------------------------------------------------
                            615 ;Allocation info for local variables in function 'recv_data'
                            616 ;------------------------------------------------------------
                            617 ;from                      Allocated to stack - offset -5
                            618 ;c                         Allocated to registers 
                            619 ;e                         Allocated to registers r2 r3 r4 
                            620 ;source                    Allocated to stack - offset 1
                            621 ;sloc0                     Allocated to stack - offset 9
                            622 ;sloc1                     Allocated to stack - offset 11
                            623 ;------------------------------------------------------------
                            624 ;	../../../core/net/uip-over-mesh.c:83: recv_data(struct unicast_conn *c, const rimeaddr_t *from)
                            625 ;	-----------------------------------------
                            626 ;	 function recv_data
                            627 ;	-----------------------------------------
   0000                     628 _recv_data:
                    0002    629 	ar2 = 0x02
                    0003    630 	ar3 = 0x03
                    0004    631 	ar4 = 0x04
                    0005    632 	ar5 = 0x05
                    0006    633 	ar6 = 0x06
                    0007    634 	ar7 = 0x07
                    0000    635 	ar0 = 0x00
                    0001    636 	ar1 = 0x01
   0000 C0*00               637 	push	_bp
   0002 85 81*00            638 	mov	_bp,sp
   0005 05 81               639 	inc	sp
   0007 05 81               640 	inc	sp
                            641 ;	../../../core/net/uip-over-mesh.c:88: uip_len = packetbuf_copyto(&uip_buf[UIP_LLH_LEN]);
   0009 90s00r0E            642 	mov	dptr,#(_uip_aligned_buf + 0x000e)
   000C 75 F0 00            643 	mov	b,#0x00
   000F 12s00r00            644 	lcall	_packetbuf_copyto
   0012 E5 82               645 	mov	a,dpl
   0014 85 83 F0            646 	mov	b,dph
   0017 90s00r00            647 	mov	dptr,#_uip_len
   001A F0                  648 	movx	@dptr,a
   001B A3                  649 	inc	dptr
   001C E5 F0               650 	mov	a,b
   001E F0                  651 	movx	@dptr,a
                            652 ;	../../../core/net/uip-over-mesh.c:90: source.u8[0] = BUF->srcipaddr.u8[2];
   001F A8*00               653 	mov	r0,_bp
   0021 08                  654 	inc	r0
   0022 90s00r1C            655 	mov	dptr,#(_uip_aligned_buf + 0x001c)
   0025 E0                  656 	movx	a,@dptr
   0026 F6                  657 	mov	@r0,a
                            658 ;	../../../core/net/uip-over-mesh.c:91: source.u8[1] = BUF->srcipaddr.u8[3];
   0027 AA*00               659 	mov	r2,_bp
   0029 0A                  660 	inc	r2
   002A EA                  661 	mov	a,r2
   002B 04                  662 	inc	a
   002C F8                  663 	mov	r0,a
   002D 90s00r1D            664 	mov	dptr,#(_uip_aligned_buf + 0x001d)
   0030 E0                  665 	movx	a,@dptr
   0031 F6                  666 	mov	@r0,a
                            667 ;	../../../core/net/uip-over-mesh.c:93: e = route_lookup(&source);
   0032 AA*00               668 	mov	r2,_bp
   0034 0A                  669 	inc	r2
   0035 7B 00               670 	mov	r3,#0x00
   0037 7C 40               671 	mov	r4,#0x40
   0039 8A 82               672 	mov	dpl,r2
   003B 8B 83               673 	mov	dph,r3
   003D 8C F0               674 	mov	b,r4
   003F 12s00r00            675 	lcall	_route_lookup
   0042 AA 82               676 	mov	r2,dpl
   0044 AB 83               677 	mov	r3,dph
   0046 AC F0               678 	mov	r4,b
                            679 ;	../../../core/net/uip-over-mesh.c:94: if(e == NULL) {
   0048 BA 00 35            680 	cjne	r2,#0x00,00102$
   004B BB 00 32            681 	cjne	r3,#0x00,00102$
   004E BC 00 2F            682 	cjne	r4,#0x00,00102$
                            683 ;	../../../core/net/uip-over-mesh.c:95: route_add(&source, from, 10, 0);
   0051 AD*00               684 	mov	r5,_bp
   0053 0D                  685 	inc	r5
   0054 7E 00               686 	mov	r6,#0x00
   0056 7F 40               687 	mov	r7,#0x40
   0058 E4                  688 	clr	a
   0059 C0 E0               689 	push	acc
   005B 74 0A               690 	mov	a,#0x0A
   005D C0 E0               691 	push	acc
   005F E5*00               692 	mov	a,_bp
   0061 24 FB               693 	add	a,#0xfb
   0063 F8                  694 	mov	r0,a
   0064 E6                  695 	mov	a,@r0
   0065 C0 E0               696 	push	acc
   0067 08                  697 	inc	r0
   0068 E6                  698 	mov	a,@r0
   0069 C0 E0               699 	push	acc
   006B 08                  700 	inc	r0
   006C E6                  701 	mov	a,@r0
   006D C0 E0               702 	push	acc
   006F 8D 82               703 	mov	dpl,r5
   0071 8E 83               704 	mov	dph,r6
   0073 8F F0               705 	mov	b,r7
   0075 12s00r00            706 	lcall	_route_add
   0078 E5 81               707 	mov	a,sp
   007A 24 FB               708 	add	a,#0xfb
   007C F5 81               709 	mov	sp,a
   007E 80 09               710 	sjmp	00103$
   0080                     711 00102$:
                            712 ;	../../../core/net/uip-over-mesh.c:97: route_refresh(e);
   0080 8A 82               713 	mov	dpl,r2
   0082 8B 83               714 	mov	dph,r3
   0084 8C F0               715 	mov	b,r4
   0086 12s00r00            716 	lcall	_route_refresh
   0089                     717 00103$:
                            718 ;	../../../core/net/uip-over-mesh.c:102: if(!uip_ipaddr_maskcmp(&BUF->srcipaddr, &netaddr, &netmask)) {
   0089 90s00r1A            719 	mov	dptr,#(_uip_aligned_buf + 0x001a)
   008C E0                  720 	movx	a,@dptr
   008D FA                  721 	mov	r2,a
   008E A3                  722 	inc	dptr
   008F E0                  723 	movx	a,@dptr
   0090 FB                  724 	mov	r3,a
   0091 90s00rE0            725 	mov	dptr,#_netmask
   0094 E0                  726 	movx	a,@dptr
   0095 FC                  727 	mov	r4,a
   0096 A3                  728 	inc	dptr
   0097 E0                  729 	movx	a,@dptr
   0098 FE                  730 	mov	r6,a
   0099 EC                  731 	mov	a,r4
   009A 52 02               732 	anl	ar2,a
   009C EE                  733 	mov	a,r6
   009D 52 03               734 	anl	ar3,a
   009F 90s00rDC            735 	mov	dptr,#_netaddr
   00A2 E0                  736 	movx	a,@dptr
   00A3 FF                  737 	mov	r7,a
   00A4 A3                  738 	inc	dptr
   00A5 E0                  739 	movx	a,@dptr
   00A6 FD                  740 	mov	r5,a
   00A7 EC                  741 	mov	a,r4
   00A8 52 07               742 	anl	ar7,a
   00AA EE                  743 	mov	a,r6
   00AB 52 05               744 	anl	ar5,a
   00AD EA                  745 	mov	a,r2
   00AE B5 07 32            746 	cjne	a,ar7,00106$
   00B1 EB                  747 	mov	a,r3
   00B2 B5 05 2E            748 	cjne	a,ar5,00106$
   00B5 90s00r1C            749 	mov	dptr,#(_uip_aligned_buf + 0x001c)
   00B8 E0                  750 	movx	a,@dptr
   00B9 FA                  751 	mov	r2,a
   00BA A3                  752 	inc	dptr
   00BB E0                  753 	movx	a,@dptr
   00BC FB                  754 	mov	r3,a
   00BD 90s00rE2            755 	mov	dptr,#(_netmask + 0x0002)
   00C0 E0                  756 	movx	a,@dptr
   00C1 FC                  757 	mov	r4,a
   00C2 A3                  758 	inc	dptr
   00C3 E0                  759 	movx	a,@dptr
   00C4 FE                  760 	mov	r6,a
   00C5 EC                  761 	mov	a,r4
   00C6 52 02               762 	anl	ar2,a
   00C8 EE                  763 	mov	a,r6
   00C9 52 03               764 	anl	ar3,a
   00CB 90s00rDE            765 	mov	dptr,#(_netaddr + 0x0002)
   00CE E0                  766 	movx	a,@dptr
   00CF FF                  767 	mov	r7,a
   00D0 A3                  768 	inc	dptr
   00D1 E0                  769 	movx	a,@dptr
   00D2 FD                  770 	mov	r5,a
   00D3 EC                  771 	mov	a,r4
   00D4 52 07               772 	anl	ar7,a
   00D6 EE                  773 	mov	a,r6
   00D7 52 05               774 	anl	ar5,a
   00D9 EA                  775 	mov	a,r2
   00DA B5 07 06            776 	cjne	a,ar7,00118$
   00DD EB                  777 	mov	a,r3
   00DE B5 05 02            778 	cjne	a,ar5,00118$
   00E1 80 29               779 	sjmp	00107$
   00E3                     780 00118$:
   00E3                     781 00106$:
                            782 ;	../../../core/net/uip-over-mesh.c:103: e = route_lookup(&gateway);
   00E3 90s00rDA            783 	mov	dptr,#_gateway
   00E6 75 F0 00            784 	mov	b,#0x00
   00E9 12s00r00            785 	lcall	_route_lookup
   00EC AD 82               786 	mov	r5,dpl
   00EE AE 83               787 	mov	r6,dph
   00F0 AF F0               788 	mov	r7,b
   00F2 8D 02               789 	mov	ar2,r5
   00F4 8E 03               790 	mov	ar3,r6
   00F6 8F 04               791 	mov	ar4,r7
                            792 ;	../../../core/net/uip-over-mesh.c:104: if(e != NULL) {
   00F8 BA 00 08            793 	cjne	r2,#0x00,00119$
   00FB BB 00 05            794 	cjne	r3,#0x00,00119$
   00FE BC 00 02            795 	cjne	r4,#0x00,00119$
   0101 80 09               796 	sjmp	00107$
   0103                     797 00119$:
                            798 ;	../../../core/net/uip-over-mesh.c:105: route_refresh(e);
   0103 8A 82               799 	mov	dpl,r2
   0105 8B 83               800 	mov	dph,r3
   0107 8C F0               801 	mov	b,r4
   0109 12s00r00            802 	lcall	_route_refresh
   010C                     803 00107$:
                            804 ;	../../../core/net/uip-over-mesh.c:113: tcpip_input();
   010C 12s00r00            805 	lcall	_tcpip_input
   010F 85*00 81            806 	mov	sp,_bp
   0112 D0*00               807 	pop	_bp
   0114 22                  808 	ret
                            809 ;------------------------------------------------------------
                            810 ;Allocation info for local variables in function 'send_data'
                            811 ;------------------------------------------------------------
                            812 ;next                      Allocated to registers r2 r3 r4 
                            813 ;------------------------------------------------------------
                            814 ;	../../../core/net/uip-over-mesh.c:117: send_data(rimeaddr_t *next)
                            815 ;	-----------------------------------------
                            816 ;	 function send_data
                            817 ;	-----------------------------------------
   0115                     818 _send_data:
   0115 AA 82               819 	mov	r2,dpl
   0117 AB 83               820 	mov	r3,dph
   0119 AC F0               821 	mov	r4,b
                            822 ;	../../../core/net/uip-over-mesh.c:122: unicast_send(&dataconn, next);
   011B C0 02               823 	push	ar2
   011D C0 03               824 	push	ar3
   011F C0 04               825 	push	ar4
   0121 90s00r6A            826 	mov	dptr,#_dataconn
   0124 75 F0 00            827 	mov	b,#0x00
   0127 12s00r00            828 	lcall	_unicast_send
   012A 15 81               829 	dec	sp
   012C 15 81               830 	dec	sp
   012E 15 81               831 	dec	sp
   0130 22                  832 	ret
                            833 ;------------------------------------------------------------
                            834 ;Allocation info for local variables in function 'new_route'
                            835 ;------------------------------------------------------------
                            836 ;to                        Allocated to stack - offset -5
                            837 ;c                         Allocated to registers 
                            838 ;rt                        Allocated to registers r2 r3 r4 
                            839 ;------------------------------------------------------------
                            840 ;	../../../core/net/uip-over-mesh.c:126: new_route(struct route_discovery_conn *c, const rimeaddr_t *to)
                            841 ;	-----------------------------------------
                            842 ;	 function new_route
                            843 ;	-----------------------------------------
   0131                     844 _new_route:
   0131 C0*00               845 	push	_bp
   0133 85 81*00            846 	mov	_bp,sp
                            847 ;	../../../core/net/uip-over-mesh.c:130: if(queued_packet) {
   0136 90s00r00            848 	mov	dptr,#_queued_packet
   0139 E0                  849 	movx	a,@dptr
   013A FA                  850 	mov	r2,a
   013B A3                  851 	inc	dptr
   013C E0                  852 	movx	a,@dptr
   013D FB                  853 	mov	r3,a
   013E A3                  854 	inc	dptr
   013F E0                  855 	movx	a,@dptr
   0140 FC                  856 	mov	r4,a
   0141 EA                  857 	mov	a,r2
   0142 4B                  858 	orl	a,r3
   0143 4C                  859 	orl	a,r4
   0144 60 4C               860 	jz	00105$
                            861 ;	../../../core/net/uip-over-mesh.c:133: queuebuf_to_packetbuf(queued_packet);
   0146 8A 82               862 	mov	dpl,r2
   0148 8B 83               863 	mov	dph,r3
   014A 8C F0               864 	mov	b,r4
   014C 12s00r00            865 	lcall	_queuebuf_to_packetbuf
                            866 ;	../../../core/net/uip-over-mesh.c:134: queuebuf_free(queued_packet);
   014F 90s00r00            867 	mov	dptr,#_queued_packet
   0152 E0                  868 	movx	a,@dptr
   0153 FA                  869 	mov	r2,a
   0154 A3                  870 	inc	dptr
   0155 E0                  871 	movx	a,@dptr
   0156 FB                  872 	mov	r3,a
   0157 A3                  873 	inc	dptr
   0158 E0                  874 	movx	a,@dptr
   0159 FC                  875 	mov	r4,a
   015A 8A 82               876 	mov	dpl,r2
   015C 8B 83               877 	mov	dph,r3
   015E 8C F0               878 	mov	b,r4
   0160 12s00r00            879 	lcall	_queuebuf_free
                            880 ;	../../../core/net/uip-over-mesh.c:135: queued_packet = NULL;
   0163 90s00r00            881 	mov	dptr,#_queued_packet
   0166 E4                  882 	clr	a
   0167 F0                  883 	movx	@dptr,a
   0168 A3                  884 	inc	dptr
   0169 F0                  885 	movx	@dptr,a
   016A A3                  886 	inc	dptr
   016B F0                  887 	movx	@dptr,a
                            888 ;	../../../core/net/uip-over-mesh.c:137: rt = route_lookup(&queued_receiver);
   016C 90s00r03            889 	mov	dptr,#_queued_receiver
   016F 75 F0 00            890 	mov	b,#0x00
   0172 12s00r00            891 	lcall	_route_lookup
   0175 AA 82               892 	mov	r2,dpl
   0177 AB 83               893 	mov	r3,dph
   0179 AC F0               894 	mov	r4,b
                            895 ;	../../../core/net/uip-over-mesh.c:138: if(rt) {
   017B EA                  896 	mov	a,r2
   017C 4B                  897 	orl	a,r3
   017D 4C                  898 	orl	a,r4
   017E 60 12               899 	jz	00105$
                            900 ;	../../../core/net/uip-over-mesh.c:139: route_decay(rt);
   0180 8A 82               901 	mov	dpl,r2
   0182 8B 83               902 	mov	dph,r3
   0184 8C F0               903 	mov	b,r4
   0186 12s00r00            904 	lcall	_route_decay
                            905 ;	../../../core/net/uip-over-mesh.c:140: send_data(&queued_receiver);
   0189 90s00r03            906 	mov	dptr,#_queued_receiver
   018C 75 F0 00            907 	mov	b,#0x00
   018F 12s01r15            908 	lcall	_send_data
   0192                     909 00105$:
   0192 D0*00               910 	pop	_bp
   0194 22                  911 	ret
                            912 ;------------------------------------------------------------
                            913 ;Allocation info for local variables in function 'timedout'
                            914 ;------------------------------------------------------------
                            915 ;c                         Allocated to registers 
                            916 ;------------------------------------------------------------
                            917 ;	../../../core/net/uip-over-mesh.c:146: timedout(struct route_discovery_conn *c)
                            918 ;	-----------------------------------------
                            919 ;	 function timedout
                            920 ;	-----------------------------------------
   0195                     921 _timedout:
                            922 ;	../../../core/net/uip-over-mesh.c:149: if(queued_packet) {
   0195 90s00r00            923 	mov	dptr,#_queued_packet
   0198 E0                  924 	movx	a,@dptr
   0199 FA                  925 	mov	r2,a
   019A A3                  926 	inc	dptr
   019B E0                  927 	movx	a,@dptr
   019C FB                  928 	mov	r3,a
   019D A3                  929 	inc	dptr
   019E E0                  930 	movx	a,@dptr
   019F FC                  931 	mov	r4,a
   01A0 EA                  932 	mov	a,r2
   01A1 4B                  933 	orl	a,r3
   01A2 4C                  934 	orl	a,r4
   01A3 60 12               935 	jz	00103$
                            936 ;	../../../core/net/uip-over-mesh.c:151: queuebuf_free(queued_packet);
   01A5 8A 82               937 	mov	dpl,r2
   01A7 8B 83               938 	mov	dph,r3
   01A9 8C F0               939 	mov	b,r4
   01AB 12s00r00            940 	lcall	_queuebuf_free
                            941 ;	../../../core/net/uip-over-mesh.c:152: queued_packet = NULL;
   01AE 90s00r00            942 	mov	dptr,#_queued_packet
   01B1 E4                  943 	clr	a
   01B2 F0                  944 	movx	@dptr,a
   01B3 A3                  945 	inc	dptr
   01B4 F0                  946 	movx	@dptr,a
   01B5 A3                  947 	inc	dptr
   01B6 F0                  948 	movx	@dptr,a
   01B7                     949 00103$:
   01B7 22                  950 	ret
                            951 ;------------------------------------------------------------
                            952 ;Allocation info for local variables in function 'gateway_announce_recv'
                            953 ;------------------------------------------------------------
                            954 ;c                         Allocated to registers 
                            955 ;msg                       Allocated to registers r2 r3 r4 
                            956 ;------------------------------------------------------------
                            957 ;	../../../core/net/uip-over-mesh.c:166: gateway_announce_recv(struct trickle_conn *c)
                            958 ;	-----------------------------------------
                            959 ;	 function gateway_announce_recv
                            960 ;	-----------------------------------------
   01B8                     961 _gateway_announce_recv:
                            962 ;	../../../core/net/uip-over-mesh.c:169: msg = packetbuf_dataptr();
   01B8 12s00r00            963 	lcall	_packetbuf_dataptr
   01BB AA 82               964 	mov	r2,dpl
   01BD AB 83               965 	mov	r3,dph
   01BF AC F0               966 	mov	r4,b
                            967 ;	../../../core/net/uip-over-mesh.c:174: if(!is_gateway) {
   01C1 90s00rE4            968 	mov	dptr,#_is_gateway
   01C4 E0                  969 	movx	a,@dptr
   01C5 FD                  970 	mov	r5,a
   01C6 70 09               971 	jnz	00103$
                            972 ;	../../../core/net/uip-over-mesh.c:175: uip_over_mesh_set_gateway(&msg->gateway);
   01C8 8A 82               973 	mov	dpl,r2
   01CA 8B 83               974 	mov	dph,r3
   01CC 8C F0               975 	mov	b,r4
   01CE 02s05r4F            976 	ljmp	_uip_over_mesh_set_gateway
   01D1                     977 00103$:
   01D1 22                  978 	ret
                            979 ;------------------------------------------------------------
                            980 ;Allocation info for local variables in function 'uip_over_mesh_make_announced_gateway'
                            981 ;------------------------------------------------------------
                            982 ;msg                       Allocated to stack - offset 1
                            983 ;------------------------------------------------------------
                            984 ;	../../../core/net/uip-over-mesh.c:181: uip_over_mesh_make_announced_gateway(void)
                            985 ;	-----------------------------------------
                            986 ;	 function uip_over_mesh_make_announced_gateway
                            987 ;	-----------------------------------------
   01D2                     988 _uip_over_mesh_make_announced_gateway:
   01D2 C0*00               989 	push	_bp
   01D4 85 81*00            990 	mov	_bp,sp
   01D7 05 81               991 	inc	sp
   01D9 05 81               992 	inc	sp
                            993 ;	../../../core/net/uip-over-mesh.c:186: if(!is_gateway) {
   01DB 90s00rE4            994 	mov	dptr,#_is_gateway
   01DE E0                  995 	movx	a,@dptr
   01DF FA                  996 	mov	r2,a
                            997 ;	../../../core/net/uip-over-mesh.c:189: uip_over_mesh_set_gateway(&rimeaddr_node_addr);
   01E0 70 53               998 	jnz	00103$
   01E2 90s00r00            999 	mov	dptr,#_rimeaddr_node_addr
   01E5 F5 F0              1000 	mov	b,a
   01E7 12s05r4F           1001 	lcall	_uip_over_mesh_set_gateway
                           1002 ;	../../../core/net/uip-over-mesh.c:190: rimeaddr_copy(&(msg.gateway), &rimeaddr_node_addr);
   01EA AA*00              1003 	mov	r2,_bp
   01EC 0A                 1004 	inc	r2
   01ED 7B 00              1005 	mov	r3,#0x00
   01EF 7C 40              1006 	mov	r4,#0x40
   01F1 74r00              1007 	mov	a,#_rimeaddr_node_addr
   01F3 C0 E0              1008 	push	acc
   01F5 74s00              1009 	mov	a,#(_rimeaddr_node_addr >> 8)
   01F7 C0 E0              1010 	push	acc
   01F9 E4                 1011 	clr	a
   01FA C0 E0              1012 	push	acc
   01FC 8A 82              1013 	mov	dpl,r2
   01FE 8B 83              1014 	mov	dph,r3
   0200 8C F0              1015 	mov	b,r4
   0202 12s00r00           1016 	lcall	_rimeaddr_copy
   0205 15 81              1017 	dec	sp
   0207 15 81              1018 	dec	sp
   0209 15 81              1019 	dec	sp
                           1020 ;	../../../core/net/uip-over-mesh.c:191: packetbuf_copyfrom(&msg, sizeof(struct gateway_msg));
   020B AA*00              1021 	mov	r2,_bp
   020D 0A                 1022 	inc	r2
   020E 7B 00              1023 	mov	r3,#0x00
   0210 7C 40              1024 	mov	r4,#0x40
   0212 74 02              1025 	mov	a,#0x02
   0214 C0 E0              1026 	push	acc
   0216 E4                 1027 	clr	a
   0217 C0 E0              1028 	push	acc
   0219 8A 82              1029 	mov	dpl,r2
   021B 8B 83              1030 	mov	dph,r3
   021D 8C F0              1031 	mov	b,r4
   021F 12s00r00           1032 	lcall	_packetbuf_copyfrom
   0222 15 81              1033 	dec	sp
   0224 15 81              1034 	dec	sp
                           1035 ;	../../../core/net/uip-over-mesh.c:192: trickle_send(&gateway_announce_conn);
   0226 90s00r7C           1036 	mov	dptr,#_gateway_announce_conn
   0229 75 F0 00           1037 	mov	b,#0x00
   022C 12s00r00           1038 	lcall	_trickle_send
                           1039 ;	../../../core/net/uip-over-mesh.c:193: is_gateway = 1;
   022F 90s00rE4           1040 	mov	dptr,#_is_gateway
   0232 74 01              1041 	mov	a,#0x01
   0234 F0                 1042 	movx	@dptr,a
   0235                    1043 00103$:
   0235 85*00 81           1044 	mov	sp,_bp
   0238 D0*00              1045 	pop	_bp
   023A 22                 1046 	ret
                           1047 ;------------------------------------------------------------
                           1048 ;Allocation info for local variables in function 'uip_over_mesh_init'
                           1049 ;------------------------------------------------------------
                           1050 ;channels                  Allocated to registers r2 r3 
                           1051 ;------------------------------------------------------------
                           1052 ;	../../../core/net/uip-over-mesh.c:199: uip_over_mesh_init(u16_t channels)
                           1053 ;	-----------------------------------------
                           1054 ;	 function uip_over_mesh_init
                           1055 ;	-----------------------------------------
   023B                    1056 _uip_over_mesh_init:
   023B AA 82              1057 	mov	r2,dpl
   023D AB 83              1058 	mov	r3,dph
                           1059 ;	../../../core/net/uip-over-mesh.c:207: unicast_open(&dataconn, channels, &data_callbacks);
   023F C0 02              1060 	push	ar2
   0241 C0 03              1061 	push	ar3
   0243 74r00              1062 	mov	a,#_data_callbacks
   0245 C0 E0              1063 	push	acc
   0247 74s00              1064 	mov	a,#(_data_callbacks >> 8)
   0249 C0 E0              1065 	push	acc
   024B 74 80              1066 	mov	a,#0x80
   024D C0 E0              1067 	push	acc
   024F C0 02              1068 	push	ar2
   0251 C0 03              1069 	push	ar3
   0253 90s00r6A           1070 	mov	dptr,#_dataconn
   0256 75 F0 00           1071 	mov	b,#0x00
   0259 12s00r00           1072 	lcall	_unicast_open
   025C E5 81              1073 	mov	a,sp
   025E 24 FB              1074 	add	a,#0xfb
   0260 F5 81              1075 	mov	sp,a
   0262 D0 03              1076 	pop	ar3
   0264 D0 02              1077 	pop	ar2
                           1078 ;	../../../core/net/uip-over-mesh.c:209: channels + 1, &rdc);
   0266 74 01              1079 	mov	a,#0x01
   0268 2A                 1080 	add	a,r2
   0269 FC                 1081 	mov	r4,a
   026A E4                 1082 	clr	a
   026B 3B                 1083 	addc	a,r3
   026C FD                 1084 	mov	r5,a
                           1085 ;	../../../core/net/uip-over-mesh.c:208: route_discovery_open(&route_discovery, ROUTE_DISCOVERY_INTERVAL,
   026D C0 02              1086 	push	ar2
   026F C0 03              1087 	push	ar3
   0271 74r04              1088 	mov	a,#_rdc
   0273 C0 E0              1089 	push	acc
   0275 74s00              1090 	mov	a,#(_rdc >> 8)
   0277 C0 E0              1091 	push	acc
   0279 74 80              1092 	mov	a,#0x80
   027B C0 E0              1093 	push	acc
   027D C0 04              1094 	push	ar4
   027F C0 05              1095 	push	ar5
   0281 E4                 1096 	clr	a
   0282 C0 E0              1097 	push	acc
   0284 74 02              1098 	mov	a,#0x02
   0286 C0 E0              1099 	push	acc
   0288 90s00r05           1100 	mov	dptr,#_route_discovery
   028B 75 F0 00           1101 	mov	b,#0x00
   028E 12s00r00           1102 	lcall	_route_discovery_open
   0291 E5 81              1103 	mov	a,sp
   0293 24 F9              1104 	add	a,#0xf9
   0295 F5 81              1105 	mov	sp,a
   0297 D0 03              1106 	pop	ar3
   0299 D0 02              1107 	pop	ar2
                           1108 ;	../../../core/net/uip-over-mesh.c:211: &trickle_call);
                           1109 ;	../../../core/net/uip-over-mesh.c:210: trickle_open(&gateway_announce_conn, ROUTE_TRICKLE_INTERVAL, channels + 3,
   029B 74 03              1110 	mov	a,#0x03
   029D 2A                 1111 	add	a,r2
   029E FA                 1112 	mov	r2,a
   029F E4                 1113 	clr	a
   02A0 3B                 1114 	addc	a,r3
   02A1 FB                 1115 	mov	r3,a
   02A2 74r08              1116 	mov	a,#_trickle_call
   02A4 C0 E0              1117 	push	acc
   02A6 74s00              1118 	mov	a,#(_trickle_call >> 8)
   02A8 C0 E0              1119 	push	acc
   02AA 74 80              1120 	mov	a,#0x80
   02AC C0 E0              1121 	push	acc
   02AE C0 02              1122 	push	ar2
   02B0 C0 03              1123 	push	ar3
   02B2 E4                 1124 	clr	a
   02B3 C0 E0              1125 	push	acc
   02B5 74 10              1126 	mov	a,#0x10
   02B7 C0 E0              1127 	push	acc
   02B9 90s00r7C           1128 	mov	dptr,#_gateway_announce_conn
   02BC 75 F0 00           1129 	mov	b,#0x00
   02BF 12s00r00           1130 	lcall	_trickle_open
   02C2 E5 81              1131 	mov	a,sp
   02C4 24 F9              1132 	add	a,#0xf9
   02C6 F5 81              1133 	mov	sp,a
                           1134 ;	../../../core/net/uip-over-mesh.c:213: route_init();
   02C8 12s00r00           1135 	lcall	_route_init
                           1136 ;	../../../core/net/uip-over-mesh.c:215: route_set_lifetime(30);
   02CB 90 00 1E           1137 	mov	dptr,#0x001E
   02CE 02s00r00           1138 	ljmp	_route_set_lifetime
                           1139 ;------------------------------------------------------------
                           1140 ;Allocation info for local variables in function 'uip_over_mesh_send'
                           1141 ;------------------------------------------------------------
                           1142 ;receiver                  Allocated to stack - offset 1
                           1143 ;rt                        Allocated to registers r2 r3 r4 
                           1144 ;------------------------------------------------------------
                           1145 ;	../../../core/net/uip-over-mesh.c:219: uip_over_mesh_send(void)
                           1146 ;	-----------------------------------------
                           1147 ;	 function uip_over_mesh_send
                           1148 ;	-----------------------------------------
   02D1                    1149 _uip_over_mesh_send:
   02D1 C0*00              1150 	push	_bp
   02D3 85 81*00           1151 	mov	_bp,sp
   02D6 05 81              1152 	inc	sp
   02D8 05 81              1153 	inc	sp
                           1154 ;	../../../core/net/uip-over-mesh.c:233: if(uip_ipaddr_maskcmp(&BUF->destipaddr, &netaddr, &netmask)) {
   02DA 90s00r1E           1155 	mov	dptr,#(_uip_aligned_buf + 0x001e)
   02DD E0                 1156 	movx	a,@dptr
   02DE FA                 1157 	mov	r2,a
   02DF A3                 1158 	inc	dptr
   02E0 E0                 1159 	movx	a,@dptr
   02E1 FB                 1160 	mov	r3,a
   02E2 90s00rE0           1161 	mov	dptr,#_netmask
   02E5 E0                 1162 	movx	a,@dptr
   02E6 FC                 1163 	mov	r4,a
   02E7 A3                 1164 	inc	dptr
   02E8 E0                 1165 	movx	a,@dptr
   02E9 FD                 1166 	mov	r5,a
   02EA EC                 1167 	mov	a,r4
   02EB 52 02              1168 	anl	ar2,a
   02ED ED                 1169 	mov	a,r5
   02EE 52 03              1170 	anl	ar3,a
   02F0 90s00rDC           1171 	mov	dptr,#_netaddr
   02F3 E0                 1172 	movx	a,@dptr
   02F4 FE                 1173 	mov	r6,a
   02F5 A3                 1174 	inc	dptr
   02F6 E0                 1175 	movx	a,@dptr
   02F7 FF                 1176 	mov	r7,a
   02F8 EE                 1177 	mov	a,r6
   02F9 52 04              1178 	anl	ar4,a
   02FB EF                 1179 	mov	a,r7
   02FC 52 05              1180 	anl	ar5,a
   02FE EA                 1181 	mov	a,r2
   02FF B5 04 47           1182 	cjne	a,ar4,00110$
   0302 EB                 1183 	mov	a,r3
   0303 B5 05 43           1184 	cjne	a,ar5,00110$
   0306 90s00r20           1185 	mov	dptr,#(_uip_aligned_buf + 0x0020)
   0309 E0                 1186 	movx	a,@dptr
   030A FA                 1187 	mov	r2,a
   030B A3                 1188 	inc	dptr
   030C E0                 1189 	movx	a,@dptr
   030D FB                 1190 	mov	r3,a
   030E 90s00rE2           1191 	mov	dptr,#(_netmask + 0x0002)
   0311 E0                 1192 	movx	a,@dptr
   0312 FC                 1193 	mov	r4,a
   0313 A3                 1194 	inc	dptr
   0314 E0                 1195 	movx	a,@dptr
   0315 FD                 1196 	mov	r5,a
   0316 EC                 1197 	mov	a,r4
   0317 52 02              1198 	anl	ar2,a
   0319 ED                 1199 	mov	a,r5
   031A 52 03              1200 	anl	ar3,a
   031C 90s00rDE           1201 	mov	dptr,#(_netaddr + 0x0002)
   031F E0                 1202 	movx	a,@dptr
   0320 FE                 1203 	mov	r6,a
   0321 A3                 1204 	inc	dptr
   0322 E0                 1205 	movx	a,@dptr
   0323 FF                 1206 	mov	r7,a
   0324 EE                 1207 	mov	a,r6
   0325 52 04              1208 	anl	ar4,a
   0327 EF                 1209 	mov	a,r7
   0328 52 05              1210 	anl	ar5,a
   032A EA                 1211 	mov	a,r2
   032B B5 04 1B           1212 	cjne	a,ar4,00110$
   032E EB                 1213 	mov	a,r3
   032F B5 05 17           1214 	cjne	a,ar5,00110$
                           1215 ;	../../../core/net/uip-over-mesh.c:234: receiver.u8[0] = BUF->destipaddr.u8[2];
   0332 A8*00              1216 	mov	r0,_bp
   0334 08                 1217 	inc	r0
   0335 90s00r20           1218 	mov	dptr,#(_uip_aligned_buf + 0x0020)
   0338 E0                 1219 	movx	a,@dptr
   0339 F6                 1220 	mov	@r0,a
                           1221 ;	../../../core/net/uip-over-mesh.c:235: receiver.u8[1] = BUF->destipaddr.u8[3];
   033A AA*00              1222 	mov	r2,_bp
   033C 0A                 1223 	inc	r2
   033D EA                 1224 	mov	a,r2
   033E 04                 1225 	inc	a
   033F F8                 1226 	mov	r0,a
   0340 90s00r21           1227 	mov	dptr,#(_uip_aligned_buf + 0x0021)
   0343 E0                 1228 	movx	a,@dptr
   0344 FA                 1229 	mov	r2,a
   0345 F6                 1230 	mov	@r0,a
   0346 02s03rF9           1231 	ljmp	00111$
   0349                    1232 00110$:
                           1233 ;	../../../core/net/uip-over-mesh.c:237: if(rimeaddr_cmp(&gateway, &rimeaddr_node_addr)) {
   0349 74r00              1234 	mov	a,#_rimeaddr_node_addr
   034B C0 E0              1235 	push	acc
   034D 74s00              1236 	mov	a,#(_rimeaddr_node_addr >> 8)
   034F C0 E0              1237 	push	acc
   0351 E4                 1238 	clr	a
   0352 C0 E0              1239 	push	acc
   0354 90s00rDA           1240 	mov	dptr,#_gateway
   0357 75 F0 00           1241 	mov	b,#0x00
   035A 12s00r00           1242 	lcall	_rimeaddr_cmp
   035D AA 82              1243 	mov	r2,dpl
   035F AB 83              1244 	mov	r3,dph
   0361 15 81              1245 	dec	sp
   0363 15 81              1246 	dec	sp
   0365 15 81              1247 	dec	sp
   0367 EA                 1248 	mov	a,r2
   0368 4B                 1249 	orl	a,r3
   0369 60 44              1250 	jz	00107$
                           1251 ;	../../../core/net/uip-over-mesh.c:240: if(gw_netif != NULL) {
   036B 90s00rD7           1252 	mov	dptr,#_gw_netif
   036E E0                 1253 	movx	a,@dptr
   036F FA                 1254 	mov	r2,a
   0370 A3                 1255 	inc	dptr
   0371 E0                 1256 	movx	a,@dptr
   0372 FB                 1257 	mov	r3,a
   0373 A3                 1258 	inc	dptr
   0374 E0                 1259 	movx	a,@dptr
   0375 FC                 1260 	mov	r4,a
   0376 BA 00 08           1261 	cjne	r2,#0x00,00139$
   0379 BB 00 05           1262 	cjne	r3,#0x00,00139$
   037C BC 00 02           1263 	cjne	r4,#0x00,00139$
   037F 80 28              1264 	sjmp	00102$
   0381                    1265 00139$:
                           1266 ;	../../../core/net/uip-over-mesh.c:241: return gw_netif->output();
   0381 74 0B              1267 	mov	a,#0x0B
   0383 2A                 1268 	add	a,r2
   0384 FA                 1269 	mov	r2,a
   0385 E4                 1270 	clr	a
   0386 3B                 1271 	addc	a,r3
   0387 FB                 1272 	mov	r3,a
   0388 8A 82              1273 	mov	dpl,r2
   038A 8B 83              1274 	mov	dph,r3
   038C 8C F0              1275 	mov	b,r4
   038E 12s00r00           1276 	lcall	__gptrget
   0391 FA                 1277 	mov	r2,a
   0392 A3                 1278 	inc	dptr
   0393 12s00r00           1279 	lcall	__gptrget
   0396 FB                 1280 	mov	r3,a
   0397 C0 03              1281 	push	ar3
   0399 8A 82              1282 	mov	dpl,r2
   039B 8B 83              1283 	mov	dph,r3
   039D 12s00r00           1284 	lcall	__sdcc_call_dptr
   03A0 AA 82              1285 	mov	r2,dpl
   03A2 D0 03              1286 	pop	ar3
   03A4 8A 82              1287 	mov	dpl,r2
   03A6 02s05r38           1288 	ljmp	00123$
   03A9                    1289 00102$:
                           1290 ;	../../../core/net/uip-over-mesh.c:243: return UIP_FW_DROPPED;
   03A9 75 82 05           1291 	mov	dpl,#0x05
   03AC 02s05r38           1292 	ljmp	00123$
   03AF                    1293 00107$:
                           1294 ;	../../../core/net/uip-over-mesh.c:244: } else if(rimeaddr_cmp(&gateway, &rimeaddr_null)) {
   03AF 74r00              1295 	mov	a,#_rimeaddr_null
   03B1 C0 E0              1296 	push	acc
   03B3 74s00              1297 	mov	a,#(_rimeaddr_null >> 8)
   03B5 C0 E0              1298 	push	acc
   03B7 74 80              1299 	mov	a,#0x80
   03B9 C0 E0              1300 	push	acc
   03BB 90s00rDA           1301 	mov	dptr,#_gateway
   03BE 75 F0 00           1302 	mov	b,#0x00
   03C1 12s00r00           1303 	lcall	_rimeaddr_cmp
   03C4 AA 82              1304 	mov	r2,dpl
   03C6 AB 83              1305 	mov	r3,dph
   03C8 15 81              1306 	dec	sp
   03CA 15 81              1307 	dec	sp
   03CC 15 81              1308 	dec	sp
   03CE EA                 1309 	mov	a,r2
   03CF 4B                 1310 	orl	a,r3
   03D0 60 06              1311 	jz	00104$
                           1312 ;	../../../core/net/uip-over-mesh.c:246: return UIP_FW_OK;
   03D2 75 82 00           1313 	mov	dpl,#0x00
   03D5 02s05r38           1314 	ljmp	00123$
   03D8                    1315 00104$:
                           1316 ;	../../../core/net/uip-over-mesh.c:251: rimeaddr_copy(&receiver, &gateway);
   03D8 AA*00              1317 	mov	r2,_bp
   03DA 0A                 1318 	inc	r2
   03DB 7B 00              1319 	mov	r3,#0x00
   03DD 7C 40              1320 	mov	r4,#0x40
   03DF 74rDA              1321 	mov	a,#_gateway
   03E1 C0 E0              1322 	push	acc
   03E3 74s00              1323 	mov	a,#(_gateway >> 8)
   03E5 C0 E0              1324 	push	acc
   03E7 E4                 1325 	clr	a
   03E8 C0 E0              1326 	push	acc
   03EA 8A 82              1327 	mov	dpl,r2
   03EC 8B 83              1328 	mov	dph,r3
   03EE 8C F0              1329 	mov	b,r4
   03F0 12s00r00           1330 	lcall	_rimeaddr_copy
   03F3 15 81              1331 	dec	sp
   03F5 15 81              1332 	dec	sp
   03F7 15 81              1333 	dec	sp
   03F9                    1334 00111$:
                           1335 ;	../../../core/net/uip-over-mesh.c:261: packetbuf_copyfrom(&uip_buf[UIP_LLH_LEN], uip_len);
   03F9 90s00r00           1336 	mov	dptr,#_uip_len
   03FC E0                 1337 	movx	a,@dptr
   03FD C0 E0              1338 	push	acc
   03FF A3                 1339 	inc	dptr
   0400 E0                 1340 	movx	a,@dptr
   0401 C0 E0              1341 	push	acc
   0403 90s00r0E           1342 	mov	dptr,#(_uip_aligned_buf + 0x000e)
   0406 75 F0 00           1343 	mov	b,#0x00
   0409 12s00r00           1344 	lcall	_packetbuf_copyfrom
   040C 15 81              1345 	dec	sp
   040E 15 81              1346 	dec	sp
                           1347 ;	../../../core/net/uip-over-mesh.c:266: if(BUF->proto == UIP_PROTO_TCP) {
   0410 90s00r17           1348 	mov	dptr,#(_uip_aligned_buf + 0x0017)
   0413 E0                 1349 	movx	a,@dptr
   0414 FA                 1350 	mov	r2,a
   0415 BA 06 22           1351 	cjne	r2,#0x06,00114$
                           1352 ;	../../../core/net/uip-over-mesh.c:267: packetbuf_set_attr(PACKETBUF_ATTR_ERELIABLE, 1);
   0418 74 01              1353 	mov	a,#0x01
   041A C0 E0              1354 	push	acc
   041C E4                 1355 	clr	a
   041D C0 E0              1356 	push	acc
   041F 75 82 17           1357 	mov	dpl,#0x17
   0422 12s00r00           1358 	lcall	_packetbuf_set_attr
   0425 15 81              1359 	dec	sp
   0427 15 81              1360 	dec	sp
                           1361 ;	../../../core/net/uip-over-mesh.c:268: packetbuf_set_attr(PACKETBUF_ATTR_RELIABLE, 1);
   0429 74 01              1362 	mov	a,#0x01
   042B C0 E0              1363 	push	acc
   042D E4                 1364 	clr	a
   042E C0 E0              1365 	push	acc
   0430 75 82 0C           1366 	mov	dpl,#0x0C
   0433 12s00r00           1367 	lcall	_packetbuf_set_attr
   0436 15 81              1368 	dec	sp
   0438 15 81              1369 	dec	sp
   043A                    1370 00114$:
                           1371 ;	../../../core/net/uip-over-mesh.c:272: rt = route_lookup(&receiver);
   043A AA*00              1372 	mov	r2,_bp
   043C 0A                 1373 	inc	r2
   043D 7B 00              1374 	mov	r3,#0x00
   043F 7C 40              1375 	mov	r4,#0x40
   0441 8A 82              1376 	mov	dpl,r2
   0443 8B 83              1377 	mov	dph,r3
   0445 8C F0              1378 	mov	b,r4
   0447 12s00r00           1379 	lcall	_route_lookup
   044A AA 82              1380 	mov	r2,dpl
   044C AB 83              1381 	mov	r3,dph
   044E AC F0              1382 	mov	r4,b
                           1383 ;	../../../core/net/uip-over-mesh.c:273: if(rt == NULL) {
   0450 BA 00 08           1384 	cjne	r2,#0x00,00144$
   0453 BB 00 05           1385 	cjne	r3,#0x00,00144$
   0456 BC 00 02           1386 	cjne	r4,#0x00,00144$
   0459 80 03              1387 	sjmp	00145$
   045B                    1388 00144$:
   045B 02s05r10           1389 	ljmp	00121$
   045E                    1390 00145$:
                           1391 ;	../../../core/net/uip-over-mesh.c:275: if(queued_packet == NULL) {
   045E 90s00r00           1392 	mov	dptr,#_queued_packet
   0461 E0                 1393 	movx	a,@dptr
   0462 FD                 1394 	mov	r5,a
   0463 A3                 1395 	inc	dptr
   0464 E0                 1396 	movx	a,@dptr
   0465 FE                 1397 	mov	r6,a
   0466 A3                 1398 	inc	dptr
   0467 E0                 1399 	movx	a,@dptr
   0468 FF                 1400 	mov	r7,a
   0469 BD 00 5B           1401 	cjne	r5,#0x00,00118$
   046C BE 00 58           1402 	cjne	r6,#0x00,00118$
   046F BF 00 55           1403 	cjne	r7,#0x00,00118$
                           1404 ;	../../../core/net/uip-over-mesh.c:276: queued_packet = queuebuf_new_from_packetbuf();
   0472 12s00r00           1405 	lcall	_queuebuf_new_from_packetbuf
   0475 AD 82              1406 	mov	r5,dpl
   0477 AE 83              1407 	mov	r6,dph
   0479 AF F0              1408 	mov	r7,b
   047B 90s00r00           1409 	mov	dptr,#_queued_packet
   047E ED                 1410 	mov	a,r5
   047F F0                 1411 	movx	@dptr,a
   0480 A3                 1412 	inc	dptr
   0481 EE                 1413 	mov	a,r6
   0482 F0                 1414 	movx	@dptr,a
   0483 A3                 1415 	inc	dptr
   0484 EF                 1416 	mov	a,r7
   0485 F0                 1417 	movx	@dptr,a
                           1418 ;	../../../core/net/uip-over-mesh.c:277: rimeaddr_copy(&queued_receiver, &receiver);
   0486 AD*00              1419 	mov	r5,_bp
   0488 0D                 1420 	inc	r5
   0489 7E 00              1421 	mov	r6,#0x00
   048B 7F 40              1422 	mov	r7,#0x40
   048D C0 05              1423 	push	ar5
   048F C0 06              1424 	push	ar6
   0491 C0 07              1425 	push	ar7
   0493 90s00r03           1426 	mov	dptr,#_queued_receiver
   0496 75 F0 00           1427 	mov	b,#0x00
   0499 12s00r00           1428 	lcall	_rimeaddr_copy
   049C 15 81              1429 	dec	sp
   049E 15 81              1430 	dec	sp
   04A0 15 81              1431 	dec	sp
                           1432 ;	../../../core/net/uip-over-mesh.c:278: route_discovery_discover(&route_discovery, &receiver, ROUTE_TIMEOUT);
   04A2 AD*00              1433 	mov	r5,_bp
   04A4 0D                 1434 	inc	r5
   04A5 7E 00              1435 	mov	r6,#0x00
   04A7 7F 40              1436 	mov	r7,#0x40
   04A9 E4                 1437 	clr	a
   04AA C0 E0              1438 	push	acc
   04AC 74 02              1439 	mov	a,#0x02
   04AE C0 E0              1440 	push	acc
   04B0 C0 05              1441 	push	ar5
   04B2 C0 06              1442 	push	ar6
   04B4 C0 07              1443 	push	ar7
   04B6 90s00r05           1444 	mov	dptr,#_route_discovery
   04B9 75 F0 00           1445 	mov	b,#0x00
   04BC 12s00r00           1446 	lcall	_route_discovery_discover
   04BF E5 81              1447 	mov	a,sp
   04C1 24 FB              1448 	add	a,#0xfb
   04C3 F5 81              1449 	mov	sp,a
   04C5 80 6E              1450 	sjmp	00122$
   04C7                    1451 00118$:
                           1452 ;	../../../core/net/uip-over-mesh.c:279: } else if(!rimeaddr_cmp(&queued_receiver, &receiver)) {
   04C7 AD*00              1453 	mov	r5,_bp
   04C9 0D                 1454 	inc	r5
   04CA 7E 00              1455 	mov	r6,#0x00
   04CC 7F 40              1456 	mov	r7,#0x40
   04CE C0 05              1457 	push	ar5
   04D0 C0 06              1458 	push	ar6
   04D2 C0 07              1459 	push	ar7
   04D4 90s00r03           1460 	mov	dptr,#_queued_receiver
   04D7 75 F0 00           1461 	mov	b,#0x00
   04DA 12s00r00           1462 	lcall	_rimeaddr_cmp
   04DD AD 82              1463 	mov	r5,dpl
   04DF AE 83              1464 	mov	r6,dph
   04E1 15 81              1465 	dec	sp
   04E3 15 81              1466 	dec	sp
   04E5 15 81              1467 	dec	sp
   04E7 ED                 1468 	mov	a,r5
   04E8 4E                 1469 	orl	a,r6
   04E9 70 4A              1470 	jnz	00122$
                           1471 ;	../../../core/net/uip-over-mesh.c:280: route_discovery_discover(&route_discovery, &receiver, ROUTE_TIMEOUT);
   04EB AD*00              1472 	mov	r5,_bp
   04ED 0D                 1473 	inc	r5
   04EE 7E 00              1474 	mov	r6,#0x00
   04F0 7F 40              1475 	mov	r7,#0x40
   04F2 E4                 1476 	clr	a
   04F3 C0 E0              1477 	push	acc
   04F5 74 02              1478 	mov	a,#0x02
   04F7 C0 E0              1479 	push	acc
   04F9 C0 05              1480 	push	ar5
   04FB C0 06              1481 	push	ar6
   04FD C0 07              1482 	push	ar7
   04FF 90s00r05           1483 	mov	dptr,#_route_discovery
   0502 75 F0 00           1484 	mov	b,#0x00
   0505 12s00r00           1485 	lcall	_route_discovery_discover
   0508 E5 81              1486 	mov	a,sp
   050A 24 FB              1487 	add	a,#0xfb
   050C F5 81              1488 	mov	sp,a
   050E 80 25              1489 	sjmp	00122$
   0510                    1490 00121$:
                           1491 ;	../../../core/net/uip-over-mesh.c:283: route_decay(rt);
   0510 8A 82              1492 	mov	dpl,r2
   0512 8B 83              1493 	mov	dph,r3
   0514 8C F0              1494 	mov	b,r4
   0516 C0 02              1495 	push	ar2
   0518 C0 03              1496 	push	ar3
   051A C0 04              1497 	push	ar4
   051C 12s00r00           1498 	lcall	_route_decay
   051F D0 04              1499 	pop	ar4
   0521 D0 03              1500 	pop	ar3
   0523 D0 02              1501 	pop	ar2
                           1502 ;	../../../core/net/uip-over-mesh.c:284: send_data(&rt->nexthop);
   0525 74 05              1503 	mov	a,#0x05
   0527 2A                 1504 	add	a,r2
   0528 FA                 1505 	mov	r2,a
   0529 E4                 1506 	clr	a
   052A 3B                 1507 	addc	a,r3
   052B FB                 1508 	mov	r3,a
   052C 8A 82              1509 	mov	dpl,r2
   052E 8B 83              1510 	mov	dph,r3
   0530 8C F0              1511 	mov	b,r4
   0532 12s01r15           1512 	lcall	_send_data
   0535                    1513 00122$:
                           1514 ;	../../../core/net/uip-over-mesh.c:286: return UIP_FW_OK;
   0535 75 82 00           1515 	mov	dpl,#0x00
   0538                    1516 00123$:
   0538 85*00 81           1517 	mov	sp,_bp
   053B D0*00              1518 	pop	_bp
   053D 22                 1519 	ret
                           1520 ;------------------------------------------------------------
                           1521 ;Allocation info for local variables in function 'uip_over_mesh_set_gateway_netif'
                           1522 ;------------------------------------------------------------
                           1523 ;n                         Allocated to registers 
                           1524 ;------------------------------------------------------------
                           1525 ;	../../../core/net/uip-over-mesh.c:290: uip_over_mesh_set_gateway_netif(struct uip_fw_netif *n)
                           1526 ;	-----------------------------------------
                           1527 ;	 function uip_over_mesh_set_gateway_netif
                           1528 ;	-----------------------------------------
   053E                    1529 _uip_over_mesh_set_gateway_netif:
   053E AA F0              1530 	mov	r2,b
   0540 AB 83              1531 	mov	r3,dph
   0542 E5 82              1532 	mov	a,dpl
   0544 90s00rD7           1533 	mov	dptr,#_gw_netif
   0547 F0                 1534 	movx	@dptr,a
   0548 A3                 1535 	inc	dptr
   0549 EB                 1536 	mov	a,r3
   054A F0                 1537 	movx	@dptr,a
   054B A3                 1538 	inc	dptr
   054C EA                 1539 	mov	a,r2
   054D F0                 1540 	movx	@dptr,a
                           1541 ;	../../../core/net/uip-over-mesh.c:292: gw_netif = n;
   054E 22                 1542 	ret
                           1543 ;------------------------------------------------------------
                           1544 ;Allocation info for local variables in function 'uip_over_mesh_set_gateway'
                           1545 ;------------------------------------------------------------
                           1546 ;gw                        Allocated to registers r2 r3 r4 
                           1547 ;------------------------------------------------------------
                           1548 ;	../../../core/net/uip-over-mesh.c:296: uip_over_mesh_set_gateway(rimeaddr_t *gw)
                           1549 ;	-----------------------------------------
                           1550 ;	 function uip_over_mesh_set_gateway
                           1551 ;	-----------------------------------------
   054F                    1552 _uip_over_mesh_set_gateway:
   054F AA 82              1553 	mov	r2,dpl
   0551 AB 83              1554 	mov	r3,dph
   0553 AC F0              1555 	mov	r4,b
                           1556 ;	../../../core/net/uip-over-mesh.c:298: rimeaddr_copy(&gateway, gw);
   0555 C0 02              1557 	push	ar2
   0557 C0 03              1558 	push	ar3
   0559 C0 04              1559 	push	ar4
   055B 90s00rDA           1560 	mov	dptr,#_gateway
   055E 75 F0 00           1561 	mov	b,#0x00
   0561 12s00r00           1562 	lcall	_rimeaddr_copy
   0564 15 81              1563 	dec	sp
   0566 15 81              1564 	dec	sp
   0568 15 81              1565 	dec	sp
   056A 22                 1566 	ret
                           1567 ;------------------------------------------------------------
                           1568 ;Allocation info for local variables in function 'uip_over_mesh_set_net'
                           1569 ;------------------------------------------------------------
                           1570 ;mask                      Allocated to stack - offset -5
                           1571 ;addr                      Allocated to registers r2 r3 r4 
                           1572 ;------------------------------------------------------------
                           1573 ;	../../../core/net/uip-over-mesh.c:302: uip_over_mesh_set_net(uip_ipaddr_t *addr, uip_ipaddr_t *mask)
                           1574 ;	-----------------------------------------
                           1575 ;	 function uip_over_mesh_set_net
                           1576 ;	-----------------------------------------
   056B                    1577 _uip_over_mesh_set_net:
   056B C0*00              1578 	push	_bp
   056D 85 81*00           1579 	mov	_bp,sp
   0570 AA 82              1580 	mov	r2,dpl
   0572 AB 83              1581 	mov	r3,dph
   0574 AC F0              1582 	mov	r4,b
                           1583 ;	../../../core/net/uip-over-mesh.c:304: uip_ipaddr_copy(&netaddr, addr);
   0576 74 04              1584 	mov	a,#0x04
   0578 C0 E0              1585 	push	acc
   057A E4                 1586 	clr	a
   057B C0 E0              1587 	push	acc
   057D C0 02              1588 	push	ar2
   057F C0 03              1589 	push	ar3
   0581 C0 04              1590 	push	ar4
   0583 90s00rDC           1591 	mov	dptr,#_netaddr
   0586 75 F0 00           1592 	mov	b,#0x00
   0589 12s00r00           1593 	lcall	_memcpy
   058C E5 81              1594 	mov	a,sp
   058E 24 FB              1595 	add	a,#0xfb
   0590 F5 81              1596 	mov	sp,a
                           1597 ;	../../../core/net/uip-over-mesh.c:305: uip_ipaddr_copy(&netmask, mask);
   0592 74 04              1598 	mov	a,#0x04
   0594 C0 E0              1599 	push	acc
   0596 E4                 1600 	clr	a
   0597 C0 E0              1601 	push	acc
   0599 E5*00              1602 	mov	a,_bp
   059B 24 FB              1603 	add	a,#0xfb
   059D F8                 1604 	mov	r0,a
   059E E6                 1605 	mov	a,@r0
   059F C0 E0              1606 	push	acc
   05A1 08                 1607 	inc	r0
   05A2 E6                 1608 	mov	a,@r0
   05A3 C0 E0              1609 	push	acc
   05A5 08                 1610 	inc	r0
   05A6 E6                 1611 	mov	a,@r0
   05A7 C0 E0              1612 	push	acc
   05A9 90s00rE0           1613 	mov	dptr,#_netmask
   05AC 75 F0 00           1614 	mov	b,#0x00
   05AF 12s00r00           1615 	lcall	_memcpy
   05B2 E5 81              1616 	mov	a,sp
   05B4 24 FB              1617 	add	a,#0xfb
   05B6 F5 81              1618 	mov	sp,a
   05B8 D0*00              1619 	pop	_bp
   05BA 22                 1620 	ret
                           1621 	.area CSEG    (CODE)
                           1622 	.area CONST   (CODE)
   0000                    1623 _data_callbacks:
   0000r00s00              1624 	.byte _recv_data,(_recv_data >> 8)
   0002 00 00              1625 	.byte #0x00,#0x00
   0004                    1626 _rdc:
   0004r31s01              1627 	.byte _new_route,(_new_route >> 8)
   0006r95s01              1628 	.byte _timedout,(_timedout >> 8)
   0008                    1629 _trickle_call:
   0008rB8s01              1630 	.byte _gateway_announce_recv,(_gateway_announce_recv >> 8)
                           1631 	.area XINIT   (CODE)
                           1632 	.area CABS    (ABS,CODE)
