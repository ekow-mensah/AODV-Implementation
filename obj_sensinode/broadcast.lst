                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6121 (Nov 17 2015) (CYGWIN)
                              4 ; This file was generated Sat Jan 27 13:24:52 2018
                              5 ;--------------------------------------------------------
                              6 	.module broadcast
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _IRCON2_P2IF
                             13 	.globl _IRCON2_UTX0IF
                             14 	.globl _IRCON2_UTX1IF
                             15 	.globl _IRCON2_P1IF
                             16 	.globl _IRCON2_WDTIF
                             17 	.globl _CY
                             18 	.globl _AC
                             19 	.globl _F0
                             20 	.globl _RS1
                             21 	.globl _RS0
                             22 	.globl _OV
                             23 	.globl _F1
                             24 	.globl _P
                             25 	.globl _IRCON_DMAIF
                             26 	.globl _IRCON_T1IF
                             27 	.globl _IRCON_T2IF
                             28 	.globl _IRCON_T3IF
                             29 	.globl _IRCON_T4IF
                             30 	.globl _IRCON_P0IF
                             31 	.globl _IRCON_STIF
                             32 	.globl _IEN1_DMAIE
                             33 	.globl _IEN1_T1IE
                             34 	.globl _IEN1_T2IE
                             35 	.globl _IEN1_T3IE
                             36 	.globl _IEN1_T4IE
                             37 	.globl _IEN1_P0IE
                             38 	.globl _IEN0_RFERRIE
                             39 	.globl _IEN0_ADCIE
                             40 	.globl _IEN0_URX0IE
                             41 	.globl _IEN0_URX1IE
                             42 	.globl _IEN0_ENCIE
                             43 	.globl _IEN0_STIE
                             44 	.globl _IEN0_EA
                             45 	.globl _EA
                             46 	.globl _P2_4
                             47 	.globl _P2_3
                             48 	.globl _P2_2
                             49 	.globl _P2_1
                             50 	.globl _P2_0
                             51 	.globl _S0CON_ENCIF_0
                             52 	.globl _S0CON_ENCIF_1
                             53 	.globl _P1_7
                             54 	.globl _P1_6
                             55 	.globl _P1_5
                             56 	.globl _P1_4
                             57 	.globl _P1_3
                             58 	.globl _P1_2
                             59 	.globl _P1_1
                             60 	.globl _P1_0
                             61 	.globl _TCON_IT0
                             62 	.globl _TCON_RFERRIF
                             63 	.globl _TCON_IT1
                             64 	.globl _TCON_URX0IF
                             65 	.globl _TCON_ADCIF
                             66 	.globl _TCON_URX1IF
                             67 	.globl _P0_0
                             68 	.globl _P0_1
                             69 	.globl _P0_2
                             70 	.globl _P0_3
                             71 	.globl _P0_4
                             72 	.globl _P0_5
                             73 	.globl _P0_6
                             74 	.globl _P0_7
                             75 	.globl _P2DIR
                             76 	.globl _P1DIR
                             77 	.globl _P0DIR
                             78 	.globl _U1GCR
                             79 	.globl _U1UCR
                             80 	.globl _U1BAUD
                             81 	.globl _U1BUF
                             82 	.globl _U1CSR
                             83 	.globl _P2INP
                             84 	.globl _P1INP
                             85 	.globl _P2SEL
                             86 	.globl _P1SEL
                             87 	.globl _P0SEL
                             88 	.globl _ADCCFG
                             89 	.globl _PERCFG
                             90 	.globl _B
                             91 	.globl _T4CC1
                             92 	.globl _T4CCTL1
                             93 	.globl _T4CC0
                             94 	.globl _T4CCTL0
                             95 	.globl _T4CTL
                             96 	.globl _T4CNT
                             97 	.globl _RFIF
                             98 	.globl _IRCON2
                             99 	.globl _T1CCTL2
                            100 	.globl _T1CCTL1
                            101 	.globl _T1CCTL0
                            102 	.globl _T1CTL
                            103 	.globl _T1CNTH
                            104 	.globl _T1CNTL
                            105 	.globl _RFST
                            106 	.globl _ACC
                            107 	.globl _T1CC2H
                            108 	.globl _T1CC2L
                            109 	.globl _T1CC1H
                            110 	.globl _T1CC1L
                            111 	.globl _T1CC0H
                            112 	.globl _T1CC0L
                            113 	.globl _RFD
                            114 	.globl _TIMIF
                            115 	.globl _DMAREQ
                            116 	.globl _DMAARM
                            117 	.globl _DMA0CFGH
                            118 	.globl _DMA0CFGL
                            119 	.globl _DMA1CFGH
                            120 	.globl _DMA1CFGL
                            121 	.globl _DMAIRQ
                            122 	.globl _PSW
                            123 	.globl _T3CC1
                            124 	.globl _T3CCTL1
                            125 	.globl _T3CC0
                            126 	.globl _T3CCTL0
                            127 	.globl _T3CTL
                            128 	.globl _T3CNT
                            129 	.globl _WDCTL
                            130 	.globl _T2CON
                            131 	.globl _MEMCTR
                            132 	.globl _CLKCON
                            133 	.globl _U0GCR
                            134 	.globl _U0UCR
                            135 	.globl _T2CNF
                            136 	.globl _U0BAUD
                            137 	.globl _U0BUF
                            138 	.globl _IRCON
                            139 	.globl _SLEEP
                            140 	.globl _RNDH
                            141 	.globl _RNDL
                            142 	.globl _ADCH
                            143 	.globl _ADCL
                            144 	.globl _IP1
                            145 	.globl _IEN1
                            146 	.globl _RCCTL
                            147 	.globl _ADCCON3
                            148 	.globl _ADCCON2
                            149 	.globl _ADCCON1
                            150 	.globl _ENCCS
                            151 	.globl _ENCDO
                            152 	.globl _ENCDI
                            153 	.globl _FWDATA
                            154 	.globl _FCTL
                            155 	.globl _FADDRH
                            156 	.globl _FADDRL
                            157 	.globl _FWT
                            158 	.globl _IP0
                            159 	.globl _IEN0
                            160 	.globl _IE
                            161 	.globl _T2THD
                            162 	.globl _T2TLD
                            163 	.globl _T2CAPHPH
                            164 	.globl _T2CAPLPL
                            165 	.globl _T2OF2
                            166 	.globl _T2OF1
                            167 	.globl _T2OF0
                            168 	.globl _P2
                            169 	.globl _PSBANK
                            170 	.globl _FMAP
                            171 	.globl _T2PEROF2
                            172 	.globl _T2PEROF1
                            173 	.globl _T2PEROF0
                            174 	.globl _S1CON
                            175 	.globl _IEN2
                            176 	.globl _HSRC
                            177 	.globl _S0CON
                            178 	.globl _ST2
                            179 	.globl _ST1
                            180 	.globl _ST0
                            181 	.globl _T2CMP
                            182 	.globl __XPAGE
                            183 	.globl _DPS
                            184 	.globl _RFIM
                            185 	.globl _P1
                            186 	.globl _P0INP
                            187 	.globl _P1IEN
                            188 	.globl _PICTL
                            189 	.globl _P2IFG
                            190 	.globl _P1IFG
                            191 	.globl _P0IFG
                            192 	.globl _TCON
                            193 	.globl _PCON
                            194 	.globl _U0CSR
                            195 	.globl _DPH1
                            196 	.globl _DPL1
                            197 	.globl _DPH0
                            198 	.globl _DPL0
                            199 	.globl _SP
                            200 	.globl _P0
                            201 	.globl _ADC_SHADOW
                            202 	.globl _U1BUF_SHADOW
                            203 	.globl _RFD_SHADOW
                            204 	.globl _U0BUF_SHADOW
                            205 	.globl _RFSTATUS
                            206 	.globl _CHIPID
                            207 	.globl _CHVER
                            208 	.globl _FSMTC1
                            209 	.globl _RXFIFOCNT
                            210 	.globl _IOCFG3
                            211 	.globl _IOCFG2
                            212 	.globl _IOCFG1
                            213 	.globl _IOCFG0
                            214 	.globl _SHORTADDRL
                            215 	.globl _SHORTADDRH
                            216 	.globl _PANIDL
                            217 	.globl _PANIDH
                            218 	.globl _IEEE_ADDR7
                            219 	.globl _IEEE_ADDR6
                            220 	.globl _IEEE_ADDR5
                            221 	.globl _IEEE_ADDR4
                            222 	.globl _IEEE_ADDR3
                            223 	.globl _IEEE_ADDR2
                            224 	.globl _IEEE_ADDR1
                            225 	.globl _IEEE_ADDR0
                            226 	.globl _DACTSTL
                            227 	.globl _DACTSTH
                            228 	.globl _ADCTSTL
                            229 	.globl _ADCTSTH
                            230 	.globl _FSMSTATE
                            231 	.globl _AGCCTRLL
                            232 	.globl _AGCCTRLH
                            233 	.globl _MANORL
                            234 	.globl _MANORH
                            235 	.globl _MANANDL
                            236 	.globl _MANANDH
                            237 	.globl _FSMTCL
                            238 	.globl _FSMTCH
                            239 	.globl _RFPWR
                            240 	.globl _CSPT
                            241 	.globl _CSPCTRL
                            242 	.globl _CSPZ
                            243 	.globl _CSPY
                            244 	.globl _CSPX
                            245 	.globl _FSCTRLL
                            246 	.globl _FSCTRLH
                            247 	.globl _RXCTRL1L
                            248 	.globl _RXCTRL1H
                            249 	.globl _RXCTRL0L
                            250 	.globl _RXCTRL0H
                            251 	.globl _TXCTRLL
                            252 	.globl _TXCTRLH
                            253 	.globl _SYNCWORDL
                            254 	.globl _SYNCWORDH
                            255 	.globl _RSSIL
                            256 	.globl _RSSIH
                            257 	.globl _MDMCTRL1L
                            258 	.globl _MDMCTRL1H
                            259 	.globl _MDMCTRL0L
                            260 	.globl _MDMCTRL0H
                            261 	.globl _broadcast_open
                            262 	.globl _broadcast_close
                            263 	.globl _broadcast_send
                            264 ;--------------------------------------------------------
                            265 ; special function registers
                            266 ;--------------------------------------------------------
                            267 	.area RSEG    (ABS,DATA)
   0000                     268 	.org 0x0000
                    0080    269 _P0	=	0x0080
                    0081    270 _SP	=	0x0081
                    0082    271 _DPL0	=	0x0082
                    0083    272 _DPH0	=	0x0083
                    0084    273 _DPL1	=	0x0084
                    0085    274 _DPH1	=	0x0085
                    0086    275 _U0CSR	=	0x0086
                    0087    276 _PCON	=	0x0087
                    0088    277 _TCON	=	0x0088
                    0089    278 _P0IFG	=	0x0089
                    008A    279 _P1IFG	=	0x008a
                    008B    280 _P2IFG	=	0x008b
                    008C    281 _PICTL	=	0x008c
                    008D    282 _P1IEN	=	0x008d
                    008F    283 _P0INP	=	0x008f
                    0090    284 _P1	=	0x0090
                    0091    285 _RFIM	=	0x0091
                    0092    286 _DPS	=	0x0092
                    0093    287 __XPAGE	=	0x0093
                    0094    288 _T2CMP	=	0x0094
                    0095    289 _ST0	=	0x0095
                    0096    290 _ST1	=	0x0096
                    0097    291 _ST2	=	0x0097
                    0098    292 _S0CON	=	0x0098
                    0099    293 _HSRC	=	0x0099
                    009A    294 _IEN2	=	0x009a
                    009B    295 _S1CON	=	0x009b
                    009C    296 _T2PEROF0	=	0x009c
                    009D    297 _T2PEROF1	=	0x009d
                    009E    298 _T2PEROF2	=	0x009e
                    009F    299 _FMAP	=	0x009f
                    009F    300 _PSBANK	=	0x009f
                    00A0    301 _P2	=	0x00a0
                    00A1    302 _T2OF0	=	0x00a1
                    00A2    303 _T2OF1	=	0x00a2
                    00A3    304 _T2OF2	=	0x00a3
                    00A4    305 _T2CAPLPL	=	0x00a4
                    00A5    306 _T2CAPHPH	=	0x00a5
                    00A6    307 _T2TLD	=	0x00a6
                    00A7    308 _T2THD	=	0x00a7
                    00A8    309 _IE	=	0x00a8
                    00A8    310 _IEN0	=	0x00a8
                    00A9    311 _IP0	=	0x00a9
                    00AB    312 _FWT	=	0x00ab
                    00AC    313 _FADDRL	=	0x00ac
                    00AD    314 _FADDRH	=	0x00ad
                    00AE    315 _FCTL	=	0x00ae
                    00AF    316 _FWDATA	=	0x00af
                    00B1    317 _ENCDI	=	0x00b1
                    00B2    318 _ENCDO	=	0x00b2
                    00B3    319 _ENCCS	=	0x00b3
                    00B4    320 _ADCCON1	=	0x00b4
                    00B5    321 _ADCCON2	=	0x00b5
                    00B6    322 _ADCCON3	=	0x00b6
                    00B7    323 _RCCTL	=	0x00b7
                    00B8    324 _IEN1	=	0x00b8
                    00B9    325 _IP1	=	0x00b9
                    00BA    326 _ADCL	=	0x00ba
                    00BB    327 _ADCH	=	0x00bb
                    00BC    328 _RNDL	=	0x00bc
                    00BD    329 _RNDH	=	0x00bd
                    00BE    330 _SLEEP	=	0x00be
                    00C0    331 _IRCON	=	0x00c0
                    00C1    332 _U0BUF	=	0x00c1
                    00C2    333 _U0BAUD	=	0x00c2
                    00C3    334 _T2CNF	=	0x00c3
                    00C4    335 _U0UCR	=	0x00c4
                    00C5    336 _U0GCR	=	0x00c5
                    00C6    337 _CLKCON	=	0x00c6
                    00C7    338 _MEMCTR	=	0x00c7
                    00C8    339 _T2CON	=	0x00c8
                    00C9    340 _WDCTL	=	0x00c9
                    00CA    341 _T3CNT	=	0x00ca
                    00CB    342 _T3CTL	=	0x00cb
                    00CC    343 _T3CCTL0	=	0x00cc
                    00CD    344 _T3CC0	=	0x00cd
                    00CE    345 _T3CCTL1	=	0x00ce
                    00CF    346 _T3CC1	=	0x00cf
                    00D0    347 _PSW	=	0x00d0
                    00D1    348 _DMAIRQ	=	0x00d1
                    00D2    349 _DMA1CFGL	=	0x00d2
                    00D3    350 _DMA1CFGH	=	0x00d3
                    00D4    351 _DMA0CFGL	=	0x00d4
                    00D5    352 _DMA0CFGH	=	0x00d5
                    00D6    353 _DMAARM	=	0x00d6
                    00D7    354 _DMAREQ	=	0x00d7
                    00D8    355 _TIMIF	=	0x00d8
                    00D9    356 _RFD	=	0x00d9
                    00DA    357 _T1CC0L	=	0x00da
                    00DB    358 _T1CC0H	=	0x00db
                    00DC    359 _T1CC1L	=	0x00dc
                    00DD    360 _T1CC1H	=	0x00dd
                    00DE    361 _T1CC2L	=	0x00de
                    00DF    362 _T1CC2H	=	0x00df
                    00E0    363 _ACC	=	0x00e0
                    00E1    364 _RFST	=	0x00e1
                    00E2    365 _T1CNTL	=	0x00e2
                    00E3    366 _T1CNTH	=	0x00e3
                    00E4    367 _T1CTL	=	0x00e4
                    00E5    368 _T1CCTL0	=	0x00e5
                    00E6    369 _T1CCTL1	=	0x00e6
                    00E7    370 _T1CCTL2	=	0x00e7
                    00E8    371 _IRCON2	=	0x00e8
                    00E9    372 _RFIF	=	0x00e9
                    00EA    373 _T4CNT	=	0x00ea
                    00EB    374 _T4CTL	=	0x00eb
                    00EC    375 _T4CCTL0	=	0x00ec
                    00ED    376 _T4CC0	=	0x00ed
                    00EE    377 _T4CCTL1	=	0x00ee
                    00EF    378 _T4CC1	=	0x00ef
                    00F0    379 _B	=	0x00f0
                    00F1    380 _PERCFG	=	0x00f1
                    00F2    381 _ADCCFG	=	0x00f2
                    00F3    382 _P0SEL	=	0x00f3
                    00F4    383 _P1SEL	=	0x00f4
                    00F5    384 _P2SEL	=	0x00f5
                    00F6    385 _P1INP	=	0x00f6
                    00F7    386 _P2INP	=	0x00f7
                    00F8    387 _U1CSR	=	0x00f8
                    00F9    388 _U1BUF	=	0x00f9
                    00FA    389 _U1BAUD	=	0x00fa
                    00FB    390 _U1UCR	=	0x00fb
                    00FC    391 _U1GCR	=	0x00fc
                    00FD    392 _P0DIR	=	0x00fd
                    00FE    393 _P1DIR	=	0x00fe
                    00FF    394 _P2DIR	=	0x00ff
                            395 ;--------------------------------------------------------
                            396 ; special function bits
                            397 ;--------------------------------------------------------
                            398 	.area RSEG    (ABS,DATA)
   0000                     399 	.org 0x0000
                    0087    400 _P0_7	=	0x0087
                    0086    401 _P0_6	=	0x0086
                    0085    402 _P0_5	=	0x0085
                    0084    403 _P0_4	=	0x0084
                    0083    404 _P0_3	=	0x0083
                    0082    405 _P0_2	=	0x0082
                    0081    406 _P0_1	=	0x0081
                    0080    407 _P0_0	=	0x0080
                    008F    408 _TCON_URX1IF	=	0x008f
                    008D    409 _TCON_ADCIF	=	0x008d
                    008B    410 _TCON_URX0IF	=	0x008b
                    008A    411 _TCON_IT1	=	0x008a
                    0089    412 _TCON_RFERRIF	=	0x0089
                    0088    413 _TCON_IT0	=	0x0088
                    0090    414 _P1_0	=	0x0090
                    0091    415 _P1_1	=	0x0091
                    0092    416 _P1_2	=	0x0092
                    0093    417 _P1_3	=	0x0093
                    0094    418 _P1_4	=	0x0094
                    0095    419 _P1_5	=	0x0095
                    0096    420 _P1_6	=	0x0096
                    0097    421 _P1_7	=	0x0097
                    0099    422 _S0CON_ENCIF_1	=	0x0099
                    0098    423 _S0CON_ENCIF_0	=	0x0098
                    00A0    424 _P2_0	=	0x00a0
                    00A1    425 _P2_1	=	0x00a1
                    00A2    426 _P2_2	=	0x00a2
                    00A3    427 _P2_3	=	0x00a3
                    00A4    428 _P2_4	=	0x00a4
                    00AF    429 _EA	=	0x00af
                    00AF    430 _IEN0_EA	=	0x00af
                    00AD    431 _IEN0_STIE	=	0x00ad
                    00AC    432 _IEN0_ENCIE	=	0x00ac
                    00AB    433 _IEN0_URX1IE	=	0x00ab
                    00AA    434 _IEN0_URX0IE	=	0x00aa
                    00A9    435 _IEN0_ADCIE	=	0x00a9
                    00A8    436 _IEN0_RFERRIE	=	0x00a8
                    00BD    437 _IEN1_P0IE	=	0x00bd
                    00BC    438 _IEN1_T4IE	=	0x00bc
                    00BB    439 _IEN1_T3IE	=	0x00bb
                    00BA    440 _IEN1_T2IE	=	0x00ba
                    00B9    441 _IEN1_T1IE	=	0x00b9
                    00B8    442 _IEN1_DMAIE	=	0x00b8
                    00C7    443 _IRCON_STIF	=	0x00c7
                    00C5    444 _IRCON_P0IF	=	0x00c5
                    00C4    445 _IRCON_T4IF	=	0x00c4
                    00C3    446 _IRCON_T3IF	=	0x00c3
                    00C2    447 _IRCON_T2IF	=	0x00c2
                    00C1    448 _IRCON_T1IF	=	0x00c1
                    00C0    449 _IRCON_DMAIF	=	0x00c0
                    00D0    450 _P	=	0x00d0
                    00D1    451 _F1	=	0x00d1
                    00D2    452 _OV	=	0x00d2
                    00D3    453 _RS0	=	0x00d3
                    00D4    454 _RS1	=	0x00d4
                    00D5    455 _F0	=	0x00d5
                    00D6    456 _AC	=	0x00d6
                    00D7    457 _CY	=	0x00d7
                    00EC    458 _IRCON2_WDTIF	=	0x00ec
                    00EB    459 _IRCON2_P1IF	=	0x00eb
                    00EA    460 _IRCON2_UTX1IF	=	0x00ea
                    00E9    461 _IRCON2_UTX0IF	=	0x00e9
                    00E8    462 _IRCON2_P2IF	=	0x00e8
                            463 ;--------------------------------------------------------
                            464 ; overlayable register banks
                            465 ;--------------------------------------------------------
                            466 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     467 	.ds 8
                            468 ;--------------------------------------------------------
                            469 ; internal ram data
                            470 ;--------------------------------------------------------
                            471 	.area DSEG    (DATA)
                            472 ;--------------------------------------------------------
                            473 ; overlayable items in internal ram 
                            474 ;--------------------------------------------------------
                            475 	.area OSEG    (OVR,DATA)
                            476 ;--------------------------------------------------------
                            477 ; indirectly addressable internal ram data
                            478 ;--------------------------------------------------------
                            479 	.area ISEG    (DATA)
                            480 ;--------------------------------------------------------
                            481 ; absolute internal ram data
                            482 ;--------------------------------------------------------
                            483 	.area IABS    (ABS,DATA)
                            484 	.area IABS    (ABS,DATA)
                            485 ;--------------------------------------------------------
                            486 ; bit data
                            487 ;--------------------------------------------------------
                            488 	.area BSEG    (BIT)
                            489 ;--------------------------------------------------------
                            490 ; paged external ram data
                            491 ;--------------------------------------------------------
                            492 	.area PSEG    (PAG,XDATA)
                            493 ;--------------------------------------------------------
                            494 ; external ram data
                            495 ;--------------------------------------------------------
                            496 	.area XSEG    (XDATA)
                    DF02    497 _MDMCTRL0H	=	0xdf02
                    DF03    498 _MDMCTRL0L	=	0xdf03
                    DF04    499 _MDMCTRL1H	=	0xdf04
                    DF05    500 _MDMCTRL1L	=	0xdf05
                    DF06    501 _RSSIH	=	0xdf06
                    DF07    502 _RSSIL	=	0xdf07
                    DF08    503 _SYNCWORDH	=	0xdf08
                    DF09    504 _SYNCWORDL	=	0xdf09
                    DF0A    505 _TXCTRLH	=	0xdf0a
                    DF0B    506 _TXCTRLL	=	0xdf0b
                    DF0C    507 _RXCTRL0H	=	0xdf0c
                    DF0D    508 _RXCTRL0L	=	0xdf0d
                    DF0E    509 _RXCTRL1H	=	0xdf0e
                    DF0F    510 _RXCTRL1L	=	0xdf0f
                    DF10    511 _FSCTRLH	=	0xdf10
                    DF11    512 _FSCTRLL	=	0xdf11
                    DF12    513 _CSPX	=	0xdf12
                    DF13    514 _CSPY	=	0xdf13
                    DF14    515 _CSPZ	=	0xdf14
                    DF15    516 _CSPCTRL	=	0xdf15
                    DF16    517 _CSPT	=	0xdf16
                    DF17    518 _RFPWR	=	0xdf17
                    DF20    519 _FSMTCH	=	0xdf20
                    DF21    520 _FSMTCL	=	0xdf21
                    DF22    521 _MANANDH	=	0xdf22
                    DF23    522 _MANANDL	=	0xdf23
                    DF24    523 _MANORH	=	0xdf24
                    DF25    524 _MANORL	=	0xdf25
                    DF26    525 _AGCCTRLH	=	0xdf26
                    DF27    526 _AGCCTRLL	=	0xdf27
                    DF39    527 _FSMSTATE	=	0xdf39
                    DF3A    528 _ADCTSTH	=	0xdf3a
                    DF3B    529 _ADCTSTL	=	0xdf3b
                    DF3C    530 _DACTSTH	=	0xdf3c
                    DF3D    531 _DACTSTL	=	0xdf3d
                    DF43    532 _IEEE_ADDR0	=	0xdf43
                    DF44    533 _IEEE_ADDR1	=	0xdf44
                    DF45    534 _IEEE_ADDR2	=	0xdf45
                    DF46    535 _IEEE_ADDR3	=	0xdf46
                    DF47    536 _IEEE_ADDR4	=	0xdf47
                    DF48    537 _IEEE_ADDR5	=	0xdf48
                    DF49    538 _IEEE_ADDR6	=	0xdf49
                    DF4A    539 _IEEE_ADDR7	=	0xdf4a
                    DF4B    540 _PANIDH	=	0xdf4b
                    DF4C    541 _PANIDL	=	0xdf4c
                    DF4D    542 _SHORTADDRH	=	0xdf4d
                    DF4E    543 _SHORTADDRL	=	0xdf4e
                    DF4F    544 _IOCFG0	=	0xdf4f
                    DF50    545 _IOCFG1	=	0xdf50
                    DF51    546 _IOCFG2	=	0xdf51
                    DF52    547 _IOCFG3	=	0xdf52
                    DF53    548 _RXFIFOCNT	=	0xdf53
                    DF54    549 _FSMTC1	=	0xdf54
                    DF60    550 _CHVER	=	0xdf60
                    DF61    551 _CHIPID	=	0xdf61
                    DF62    552 _RFSTATUS	=	0xdf62
                    DFC1    553 _U0BUF_SHADOW	=	0xdfc1
                    DFD9    554 _RFD_SHADOW	=	0xdfd9
                    DFF9    555 _U1BUF_SHADOW	=	0xdff9
                    DFBA    556 _ADC_SHADOW	=	0xdfba
                            557 ;--------------------------------------------------------
                            558 ; absolute external ram data
                            559 ;--------------------------------------------------------
                            560 	.area XABS    (ABS,XDATA)
                            561 ;--------------------------------------------------------
                            562 ; external initialized ram data
                            563 ;--------------------------------------------------------
                            564 	.area XISEG   (XDATA)
                            565 	.area HOME    (CODE)
                            566 	.area GSINIT0 (CODE)
                            567 	.area GSINIT1 (CODE)
                            568 	.area GSINIT2 (CODE)
                            569 	.area GSINIT3 (CODE)
                            570 	.area GSINIT4 (CODE)
                            571 	.area GSINIT5 (CODE)
                            572 	.area GSINIT  (CODE)
                            573 	.area GSFINAL (CODE)
                            574 	.area CSEG    (CODE)
                            575 ;--------------------------------------------------------
                            576 ; global & static initialisations
                            577 ;--------------------------------------------------------
                            578 	.area HOME    (CODE)
                            579 	.area GSINIT  (CODE)
                            580 	.area GSFINAL (CODE)
                            581 	.area GSINIT  (CODE)
                            582 ;--------------------------------------------------------
                            583 ; Home
                            584 ;--------------------------------------------------------
                            585 	.area HOME    (CODE)
                            586 	.area HOME    (CODE)
                            587 ;--------------------------------------------------------
                            588 ; code
                            589 ;--------------------------------------------------------
                            590 	.area CSEG    (CODE)
                            591 ;------------------------------------------------------------
                            592 ;Allocation info for local variables in function 'recv_from_abc'
                            593 ;------------------------------------------------------------
                            594 ;bc                        Allocated to stack - offset 1
                            595 ;sender                    Allocated to stack - offset 4
                            596 ;c                         Allocated to registers 
                            597 ;------------------------------------------------------------
                            598 ;	../../../core/net/rime/broadcast.c:64: recv_from_abc(struct abc_conn *bc)
                            599 ;	-----------------------------------------
                            600 ;	 function recv_from_abc
                            601 ;	-----------------------------------------
   0000                     602 _recv_from_abc:
                    0002    603 	ar2 = 0x02
                    0003    604 	ar3 = 0x03
                    0004    605 	ar4 = 0x04
                    0005    606 	ar5 = 0x05
                    0006    607 	ar6 = 0x06
                    0007    608 	ar7 = 0x07
                    0000    609 	ar0 = 0x00
                    0001    610 	ar1 = 0x01
   0000 C0*00               611 	push	_bp
   0002 85 81*00            612 	mov	_bp,sp
   0005 C0 82               613 	push	dpl
   0007 C0 83               614 	push	dph
   0009 C0 F0               615 	push	b
   000B 05 81               616 	inc	sp
   000D 05 81               617 	inc	sp
                            618 ;	../../../core/net/rime/broadcast.c:69: rimeaddr_copy(&sender, packetbuf_addr(PACKETBUF_ADDR_SENDER));
   000F 75 82 18            619 	mov	dpl,#0x18
   0012 12s00r00            620 	lcall	_packetbuf_addr
   0015 AD 82               621 	mov	r5,dpl
   0017 AE 83               622 	mov	r6,dph
   0019 AF F0               623 	mov	r7,b
   001B E5*00               624 	mov	a,_bp
   001D 24 04               625 	add	a,#0x04
   001F FA                  626 	mov	r2,a
   0020 7B 00               627 	mov	r3,#0x00
   0022 7C 40               628 	mov	r4,#0x40
   0024 C0 05               629 	push	ar5
   0026 C0 06               630 	push	ar6
   0028 C0 07               631 	push	ar7
   002A 8A 82               632 	mov	dpl,r2
   002C 8B 83               633 	mov	dph,r3
   002E 8C F0               634 	mov	b,r4
   0030 12s00r00            635 	lcall	_rimeaddr_copy
   0033 15 81               636 	dec	sp
   0035 15 81               637 	dec	sp
   0037 15 81               638 	dec	sp
                            639 ;	../../../core/net/rime/broadcast.c:74: c->u->recv(c, &sender);
   0039 A8*00               640 	mov	r0,_bp
   003B 08                  641 	inc	r0
   003C 74 0C               642 	mov	a,#0x0C
   003E 26                  643 	add	a,@r0
   003F FA                  644 	mov	r2,a
   0040 E4                  645 	clr	a
   0041 08                  646 	inc	r0
   0042 36                  647 	addc	a,@r0
   0043 FB                  648 	mov	r3,a
   0044 08                  649 	inc	r0
   0045 86 04               650 	mov	ar4,@r0
   0047 8A 82               651 	mov	dpl,r2
   0049 8B 83               652 	mov	dph,r3
   004B 8C F0               653 	mov	b,r4
   004D 12s00r00            654 	lcall	__gptrget
   0050 FA                  655 	mov	r2,a
   0051 A3                  656 	inc	dptr
   0052 12s00r00            657 	lcall	__gptrget
   0055 FB                  658 	mov	r3,a
   0056 A3                  659 	inc	dptr
   0057 12s00r00            660 	lcall	__gptrget
   005A FC                  661 	mov	r4,a
   005B 8A 82               662 	mov	dpl,r2
   005D 8B 83               663 	mov	dph,r3
   005F 8C F0               664 	mov	b,r4
   0061 12s00r00            665 	lcall	__gptrget
   0064 FA                  666 	mov	r2,a
   0065 A3                  667 	inc	dptr
   0066 12s00r00            668 	lcall	__gptrget
   0069 FB                  669 	mov	r3,a
   006A E5*00               670 	mov	a,_bp
   006C 24 04               671 	add	a,#0x04
   006E FC                  672 	mov	r4,a
   006F 7D 00               673 	mov	r5,#0x00
   0071 7E 40               674 	mov	r6,#0x40
   0073 C0 02               675 	push	ar2
   0075 C0 03               676 	push	ar3
   0077 C0 04               677 	push	ar4
   0079 C0 05               678 	push	ar5
   007B C0 06               679 	push	ar6
   007D 74r95               680 	mov	a,#00103$
   007F C0 E0               681 	push	acc
   0081 74s00               682 	mov	a,#(00103$ >> 8)
   0083 C0 E0               683 	push	acc
   0085 C0 02               684 	push	ar2
   0087 C0 03               685 	push	ar3
   0089 A8*00               686 	mov	r0,_bp
   008B 08                  687 	inc	r0
   008C 86 82               688 	mov	dpl,@r0
   008E 08                  689 	inc	r0
   008F 86 83               690 	mov	dph,@r0
   0091 08                  691 	inc	r0
   0092 86 F0               692 	mov	b,@r0
   0094 22                  693 	ret
   0095                     694 00103$:
   0095 15 81               695 	dec	sp
   0097 15 81               696 	dec	sp
   0099 15 81               697 	dec	sp
   009B D0 03               698 	pop	ar3
   009D D0 02               699 	pop	ar2
   009F 85*00 81            700 	mov	sp,_bp
   00A2 D0*00               701 	pop	_bp
   00A4 22                  702 	ret
                            703 ;------------------------------------------------------------
                            704 ;Allocation info for local variables in function 'sent_by_abc'
                            705 ;------------------------------------------------------------
                            706 ;status                    Allocated to stack - offset -4
                            707 ;num_tx                    Allocated to stack - offset -6
                            708 ;bc                        Allocated to registers r2 r3 r4 
                            709 ;c                         Allocated to registers 
                            710 ;------------------------------------------------------------
                            711 ;	../../../core/net/rime/broadcast.c:78: sent_by_abc(struct abc_conn *bc, int status, int num_tx)
                            712 ;	-----------------------------------------
                            713 ;	 function sent_by_abc
                            714 ;	-----------------------------------------
   00A5                     715 _sent_by_abc:
   00A5 C0*00               716 	push	_bp
   00A7 85 81*00            717 	mov	_bp,sp
   00AA AA 82               718 	mov	r2,dpl
   00AC AB 83               719 	mov	r3,dph
   00AE AC F0               720 	mov	r4,b
                            721 ;	../../../core/net/rime/broadcast.c:87: if(c->u->sent) {
   00B0 74 0C               722 	mov	a,#0x0C
   00B2 2A                  723 	add	a,r2
   00B3 FD                  724 	mov	r5,a
   00B4 E4                  725 	clr	a
   00B5 3B                  726 	addc	a,r3
   00B6 FE                  727 	mov	r6,a
   00B7 8C 07               728 	mov	ar7,r4
   00B9 8D 82               729 	mov	dpl,r5
   00BB 8E 83               730 	mov	dph,r6
   00BD 8F F0               731 	mov	b,r7
   00BF 12s00r00            732 	lcall	__gptrget
   00C2 FD                  733 	mov	r5,a
   00C3 A3                  734 	inc	dptr
   00C4 12s00r00            735 	lcall	__gptrget
   00C7 FE                  736 	mov	r6,a
   00C8 A3                  737 	inc	dptr
   00C9 12s00r00            738 	lcall	__gptrget
   00CC FF                  739 	mov	r7,a
   00CD 74 02               740 	mov	a,#0x02
   00CF 2D                  741 	add	a,r5
   00D0 FD                  742 	mov	r5,a
   00D1 E4                  743 	clr	a
   00D2 3E                  744 	addc	a,r6
   00D3 FE                  745 	mov	r6,a
   00D4 8D 82               746 	mov	dpl,r5
   00D6 8E 83               747 	mov	dph,r6
   00D8 8F F0               748 	mov	b,r7
   00DA 12s00r00            749 	lcall	__gptrget
   00DD FD                  750 	mov	r5,a
   00DE A3                  751 	inc	dptr
   00DF 12s00r00            752 	lcall	__gptrget
   00E2 FE                  753 	mov	r6,a
   00E3 4D                  754 	orl	a,r5
   00E4 60 39               755 	jz	00103$
                            756 ;	../../../core/net/rime/broadcast.c:88: c->u->sent(c, status, num_tx);
   00E6 C0 05               757 	push	ar5
   00E8 C0 06               758 	push	ar6
   00EA E5*00               759 	mov	a,_bp
   00EC 24 FA               760 	add	a,#0xfa
   00EE F8                  761 	mov	r0,a
   00EF E6                  762 	mov	a,@r0
   00F0 C0 E0               763 	push	acc
   00F2 08                  764 	inc	r0
   00F3 E6                  765 	mov	a,@r0
   00F4 C0 E0               766 	push	acc
   00F6 E5*00               767 	mov	a,_bp
   00F8 24 FC               768 	add	a,#0xfc
   00FA F8                  769 	mov	r0,a
   00FB E6                  770 	mov	a,@r0
   00FC C0 E0               771 	push	acc
   00FE 08                  772 	inc	r0
   00FF E6                  773 	mov	a,@r0
   0100 C0 E0               774 	push	acc
   0102 74r15               775 	mov	a,#00107$
   0104 C0 E0               776 	push	acc
   0106 74s01               777 	mov	a,#(00107$ >> 8)
   0108 C0 E0               778 	push	acc
   010A C0 05               779 	push	ar5
   010C C0 06               780 	push	ar6
   010E 8A 82               781 	mov	dpl,r2
   0110 8B 83               782 	mov	dph,r3
   0112 8C F0               783 	mov	b,r4
   0114 22                  784 	ret
   0115                     785 00107$:
   0115 E5 81               786 	mov	a,sp
   0117 24 FC               787 	add	a,#0xfc
   0119 F5 81               788 	mov	sp,a
   011B D0 06               789 	pop	ar6
   011D D0 05               790 	pop	ar5
   011F                     791 00103$:
   011F D0*00               792 	pop	_bp
   0121 22                  793 	ret
                            794 ;------------------------------------------------------------
                            795 ;Allocation info for local variables in function 'broadcast_open'
                            796 ;------------------------------------------------------------
                            797 ;channel                   Allocated to stack - offset -4
                            798 ;u                         Allocated to stack - offset -7
                            799 ;c                         Allocated to registers r2 r3 r4 
                            800 ;------------------------------------------------------------
                            801 ;	../../../core/net/rime/broadcast.c:95: broadcast_open(struct broadcast_conn *c, uint16_t channel,
                            802 ;	-----------------------------------------
                            803 ;	 function broadcast_open
                            804 ;	-----------------------------------------
   0122                     805 _broadcast_open:
   0122 C0*00               806 	push	_bp
   0124 85 81*00            807 	mov	_bp,sp
   0127 AA 82               808 	mov	r2,dpl
   0129 AB 83               809 	mov	r3,dph
   012B AC F0               810 	mov	r4,b
                            811 ;	../../../core/net/rime/broadcast.c:98: abc_open(&c->c, channel, &broadcast);
   012D C0 02               812 	push	ar2
   012F C0 03               813 	push	ar3
   0131 C0 04               814 	push	ar4
   0133 74r04               815 	mov	a,#_broadcast
   0135 C0 E0               816 	push	acc
   0137 74s00               817 	mov	a,#(_broadcast >> 8)
   0139 C0 E0               818 	push	acc
   013B 74 80               819 	mov	a,#0x80
   013D C0 E0               820 	push	acc
   013F E5*00               821 	mov	a,_bp
   0141 24 FC               822 	add	a,#0xfc
   0143 F8                  823 	mov	r0,a
   0144 E6                  824 	mov	a,@r0
   0145 C0 E0               825 	push	acc
   0147 08                  826 	inc	r0
   0148 E6                  827 	mov	a,@r0
   0149 C0 E0               828 	push	acc
   014B 8A 82               829 	mov	dpl,r2
   014D 8B 83               830 	mov	dph,r3
   014F 8C F0               831 	mov	b,r4
   0151 12s00r00            832 	lcall	_abc_open
   0154 E5 81               833 	mov	a,sp
   0156 24 FB               834 	add	a,#0xfb
   0158 F5 81               835 	mov	sp,a
   015A D0 04               836 	pop	ar4
   015C D0 03               837 	pop	ar3
   015E D0 02               838 	pop	ar2
                            839 ;	../../../core/net/rime/broadcast.c:99: c->u = u;
   0160 74 0C               840 	mov	a,#0x0C
   0162 2A                  841 	add	a,r2
   0163 FA                  842 	mov	r2,a
   0164 E4                  843 	clr	a
   0165 3B                  844 	addc	a,r3
   0166 FB                  845 	mov	r3,a
   0167 8A 82               846 	mov	dpl,r2
   0169 8B 83               847 	mov	dph,r3
   016B 8C F0               848 	mov	b,r4
   016D E5*00               849 	mov	a,_bp
   016F 24 F9               850 	add	a,#0xf9
   0171 F8                  851 	mov	r0,a
   0172 E6                  852 	mov	a,@r0
   0173 12s00r00            853 	lcall	__gptrput
   0176 A3                  854 	inc	dptr
   0177 08                  855 	inc	r0
   0178 E6                  856 	mov	a,@r0
   0179 12s00r00            857 	lcall	__gptrput
   017C A3                  858 	inc	dptr
   017D 08                  859 	inc	r0
   017E E6                  860 	mov	a,@r0
   017F 12s00r00            861 	lcall	__gptrput
                            862 ;	../../../core/net/rime/broadcast.c:100: channel_set_attributes(channel, attributes);
   0182 74r00               863 	mov	a,#_attributes
   0184 C0 E0               864 	push	acc
   0186 74s00               865 	mov	a,#(_attributes >> 8)
   0188 C0 E0               866 	push	acc
   018A 74 80               867 	mov	a,#0x80
   018C C0 E0               868 	push	acc
   018E E5*00               869 	mov	a,_bp
   0190 24 FC               870 	add	a,#0xfc
   0192 F8                  871 	mov	r0,a
   0193 86 82               872 	mov	dpl,@r0
   0195 08                  873 	inc	r0
   0196 86 83               874 	mov	dph,@r0
   0198 12s00r00            875 	lcall	_channel_set_attributes
   019B 15 81               876 	dec	sp
   019D 15 81               877 	dec	sp
   019F 15 81               878 	dec	sp
   01A1 D0*00               879 	pop	_bp
   01A3 22                  880 	ret
                            881 ;------------------------------------------------------------
                            882 ;Allocation info for local variables in function 'broadcast_close'
                            883 ;------------------------------------------------------------
                            884 ;c                         Allocated to registers r2 r3 r4 
                            885 ;------------------------------------------------------------
                            886 ;	../../../core/net/rime/broadcast.c:104: broadcast_close(struct broadcast_conn *c)
                            887 ;	-----------------------------------------
                            888 ;	 function broadcast_close
                            889 ;	-----------------------------------------
   01A4                     890 _broadcast_close:
                            891 ;	../../../core/net/rime/broadcast.c:106: abc_close(&c->c);
   01A4 02s00r00            892 	ljmp	_abc_close
                            893 ;------------------------------------------------------------
                            894 ;Allocation info for local variables in function 'broadcast_send'
                            895 ;------------------------------------------------------------
                            896 ;c                         Allocated to registers r2 r3 r4 
                            897 ;------------------------------------------------------------
                            898 ;	../../../core/net/rime/broadcast.c:110: broadcast_send(struct broadcast_conn *c)
                            899 ;	-----------------------------------------
                            900 ;	 function broadcast_send
                            901 ;	-----------------------------------------
   01A7                     902 _broadcast_send:
   01A7 AA 82               903 	mov	r2,dpl
   01A9 AB 83               904 	mov	r3,dph
   01AB AC F0               905 	mov	r4,b
                            906 ;	../../../core/net/rime/broadcast.c:114: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
   01AD C0 02               907 	push	ar2
   01AF C0 03               908 	push	ar3
   01B1 C0 04               909 	push	ar4
   01B3 74r00               910 	mov	a,#_rimeaddr_node_addr
   01B5 C0 E0               911 	push	acc
   01B7 74s00               912 	mov	a,#(_rimeaddr_node_addr >> 8)
   01B9 C0 E0               913 	push	acc
   01BB E4                  914 	clr	a
   01BC C0 E0               915 	push	acc
   01BE 75 82 18            916 	mov	dpl,#0x18
   01C1 12s00r00            917 	lcall	_packetbuf_set_addr
   01C4 15 81               918 	dec	sp
   01C6 15 81               919 	dec	sp
   01C8 15 81               920 	dec	sp
   01CA D0 04               921 	pop	ar4
   01CC D0 03               922 	pop	ar3
   01CE D0 02               923 	pop	ar2
                            924 ;	../../../core/net/rime/broadcast.c:115: return abc_send(&c->c);
   01D0 8A 82               925 	mov	dpl,r2
   01D2 8B 83               926 	mov	dph,r3
   01D4 8C F0               927 	mov	b,r4
   01D6 02s00r00            928 	ljmp	_abc_send
                            929 	.area CSEG    (CODE)
                            930 	.area CONST   (CODE)
   0000                     931 _attributes:
   0000 18                  932 	.db #0x18	; 24
   0001 10                  933 	.db #0x10	; 16
   0002 00                  934 	.db #0x00	; 0
   0003 00                  935 	.db #0x00	; 0
   0004                     936 _broadcast:
   0004r00s00               937 	.byte _recv_from_abc,(_recv_from_abc >> 8)
   0006rA5s00               938 	.byte _sent_by_abc,(_sent_by_abc >> 8)
                            939 	.area XINIT   (CODE)
                            940 	.area CABS    (ABS,CODE)
